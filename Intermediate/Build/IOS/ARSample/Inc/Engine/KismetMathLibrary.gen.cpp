// Copyright 1998-2017 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	Generated code exported from UnrealHeaderTool.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "GeneratedCppIncludes.h"
#include "Classes/Kismet/KismetMathLibrary.h"
#ifdef _MSC_VER
#pragma warning (push)
#pragma warning (disable : 4883)
#endif
PRAGMA_DISABLE_DEPRECATION_WARNINGS
void EmptyLinkFunctionForGeneratedCodeKismetMathLibrary() {}
// Cross Module References
	ENGINE_API UEnum* Z_Construct_UEnum_Engine_ELerpInterpolationMode();
	UPackage* Z_Construct_UPackage__Script_Engine();
	ENGINE_API UEnum* Z_Construct_UEnum_Engine_EEasingFunc();
	ENGINE_API UScriptStruct* Z_Construct_UScriptStruct_FVectorSpringState();
	ENGINE_API UScriptStruct* Z_Construct_UScriptStruct_FFloatSpringState();
	ENGINE_API UClass* Z_Construct_UClass_UKismetMathLibrary_NoRegister();
	ENGINE_API UClass* Z_Construct_UClass_UKismetMathLibrary();
	ENGINE_API UClass* Z_Construct_UClass_UBlueprintFunctionLibrary();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs_Int();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Acos();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_DateTimeTimespan();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FDateTime();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DFloat();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorFloat();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_And_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Asin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan2();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMax();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanAND();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNAND();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNOR();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanOR();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanXOR();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakColor();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FLinearColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRandomStream();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FRandomStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotator();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotIntoAxes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan2();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTransform();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_CInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Clamp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAngle();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAxis();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampVectorSize();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClassIsChildOf();
	COREUOBJECT_API UClass* Z_Construct_UClass_UClass();
	COREUOBJECT_API UClass* Z_Construct_UClass_UObject_NoRegister();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeRotators();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeTransforms();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ColorToLinearColor();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToLinearColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToBool();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToIntVector();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FIntVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntVectorToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_RotatorToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_Vector2DToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToLinearColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ConvertTransformToRelative();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cos();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_CreateVectorFromYawPitch();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cross_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_CrossProduct2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromIsoString();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromString();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMaxValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMinValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInMonth();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInYear();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAcos();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAsin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan2();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegCos();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegreesToRadians();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegSin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegTan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_TimespanFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Dot_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_DotProduct2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Ease();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_BoolBool();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ClassClass();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_NameName();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ObjectObject();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_RotatorRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TransformTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Exp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FCeil();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FClamp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FFloor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnLine();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnSegment();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindLookAtRotation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindNearestPointsOnLineSegments();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpEaseInOut();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo_Constant();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FixedTurn();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FloatSpringInterp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMax();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMod();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Fraction();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromDays();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromHours();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMilliseconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMinutes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromSeconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTrunc();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTruncVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetAxes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetAzimuthAndElevation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDate();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDay();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDayOfYear();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDays();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDirectionUnitVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDuration();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetForwardVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour12();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHours();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMaxElement();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMillisecond();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMilliseconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinElement();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinute();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinutes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMonth();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPI();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToLine();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToSegment();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetReflectionVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetRightVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSecond();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSeconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTAU();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTimeOfDay();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalDays();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalHours();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMilliseconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMinutes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalSeconds();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetUpVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetVectorArrayAverage();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYawPitchFromVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYear();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterGreater_VectorRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_GridSnap_Float();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB_Vector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Hypotenuse();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InRange_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InRange_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseLerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformDirection();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformLocation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformRotation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_InvertTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsAfternoon();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsLeapYear();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsMorning();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBox();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBoxWithTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Lerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessLess_VectorRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerpUsingHSV();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FPlane();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection_OriginNormal();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Log();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Loge();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FBox();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox2D();
	COREUOBJECT_API UScriptStruct* Z_Construct_UScriptStruct_FBox2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePlaneFromPointAndNormal();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePulsatingValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRandomStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotationFromAxes();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromX();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXY();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXZ();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromY();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYX();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYZ();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZ();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZX();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZY();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan2();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeClamped();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeUnclamped();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Max();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfByteArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfFloatArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfIntArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Min();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinimumAreaRectangle();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfByteArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfFloatArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfIntArray();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MirrorVectorByNormal();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorLinearColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_TimespanFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyByPi();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyMultiply_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_TransformTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeAxis();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizedDeltaRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeToRange();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_Int();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_PreBool();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_BoolBool();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ClassClass();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_NameName();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ObjectObject();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_RotatorRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Now();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Or_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_PointsAreCoplanar();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectPointOnToPlane();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToPlane();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RadiansToDegrees();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBool();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeight();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeightFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRange();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRangeFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomInteger();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRange();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRangeFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomPointInBoundingBox();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotatorFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegrees();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegreesFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadians();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadiansFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegrees();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegreesFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadians();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadiansFromStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_REase();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetFloatSpringState();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetRandomStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetVectorSpringState();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV_Vector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo_Constant();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RLerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotateAngleAxis();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotatorFromAxisAndAngle();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Round();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SeedRandomStream();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectClass();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectColor();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectObject();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectRotator();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectString();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectTransform();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SetRandomStreamSeed();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfInteger();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sin();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sqrt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Square();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_ByteByte();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeDateTime();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_FloatFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_IntInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_TimespanTimespan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DVector2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorFloat();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorInt();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorVector();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Tan();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TEase();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanFromString();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMaxValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMinValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanRatio();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanZeroValue();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TLerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Today();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformDirection();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformLocation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformRotation();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_UtcNow();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VEase();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo_Constant();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VectorSpringInterp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo_Constant();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VLerp();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2D();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2DSquared();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSizeSquared();
	ENGINE_API UFunction* Z_Construct_UFunction_UKismetMathLibrary_Xor_IntInt();
// End Cross Module References
	static UEnum* ELerpInterpolationMode_StaticEnum()
	{
		static UEnum* Singleton = nullptr;
		if (!Singleton)
		{
			Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_ELerpInterpolationMode, Z_Construct_UPackage__Script_Engine(), TEXT("ELerpInterpolationMode"));
		}
		return Singleton;
	}
	static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_ELerpInterpolationMode(ELerpInterpolationMode_StaticEnum, TEXT("/Script/Engine"), TEXT("ELerpInterpolationMode"), false, nullptr, nullptr);
	uint32 Get_Z_Construct_UEnum_Engine_ELerpInterpolationMode_CRC() { return 784270678U; }
	UEnum* Z_Construct_UEnum_Engine_ELerpInterpolationMode()
	{
#if WITH_HOT_RELOAD
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("ELerpInterpolationMode"), 0, Get_Z_Construct_UEnum_Engine_ELerpInterpolationMode_CRC(), false);
#else
		static UEnum* ReturnEnum = nullptr;
#endif // WITH_HOT_RELOAD
		if (!ReturnEnum)
		{
			static const UE4CodeGen_Private::FEnumeratorParam Enumerators[] = {
				{ "ELerpInterpolationMode::QuatInterp", (int64)ELerpInterpolationMode::QuatInterp },
				{ "ELerpInterpolationMode::EulerInterp", (int64)ELerpInterpolationMode::EulerInterp },
				{ "ELerpInterpolationMode::DualQuatInterp", (int64)ELerpInterpolationMode::DualQuatInterp },
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Enum_MetaDataParams[] = {
				{ "BlueprintType", "true" },
				{ "DualQuatInterp.ToolTip", "Dual quaternion interpolation, follows helix or screw-motion path between keyframes." },
				{ "EulerInterp.ToolTip", "Rotor or Euler Angle interpolation." },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "QuatInterp.ToolTip", "Shortest Path or Quaternion interpolation for the rotation." },
				{ "ToolTip", "Different methods for interpolating rotation between transforms" },
			};
#endif
			static const UE4CodeGen_Private::FEnumParams EnumParams = {
				(UObject*(*)())Z_Construct_UPackage__Script_Engine,
				UE4CodeGen_Private::EDynamicType::NotDynamic,
				"ELerpInterpolationMode",
				RF_Public|RF_Transient|RF_MarkAsNative,
				nullptr,
				(uint8)UEnum::ECppForm::Namespaced,
				"ELerpInterpolationMode::Type",
				Enumerators,
				ARRAY_COUNT(Enumerators),
				METADATA_PARAMS(Enum_MetaDataParams, ARRAY_COUNT(Enum_MetaDataParams))
			};
			UE4CodeGen_Private::ConstructUEnum(ReturnEnum, EnumParams);
		}
		return ReturnEnum;
	}
	static UEnum* EEasingFunc_StaticEnum()
	{
		static UEnum* Singleton = nullptr;
		if (!Singleton)
		{
			Singleton = GetStaticEnum(Z_Construct_UEnum_Engine_EEasingFunc, Z_Construct_UPackage__Script_Engine(), TEXT("EEasingFunc"));
		}
		return Singleton;
	}
	static FCompiledInDeferEnum Z_CompiledInDeferEnum_UEnum_EEasingFunc(EEasingFunc_StaticEnum, TEXT("/Script/Engine"), TEXT("EEasingFunc"), false, nullptr, nullptr);
	uint32 Get_Z_Construct_UEnum_Engine_EEasingFunc_CRC() { return 2427985544U; }
	UEnum* Z_Construct_UEnum_Engine_EEasingFunc()
	{
#if WITH_HOT_RELOAD
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		static UEnum* ReturnEnum = FindExistingEnumIfHotReloadOrDynamic(Outer, TEXT("EEasingFunc"), 0, Get_Z_Construct_UEnum_Engine_EEasingFunc_CRC(), false);
#else
		static UEnum* ReturnEnum = nullptr;
#endif // WITH_HOT_RELOAD
		if (!ReturnEnum)
		{
			static const UE4CodeGen_Private::FEnumeratorParam Enumerators[] = {
				{ "EEasingFunc::Linear", (int64)EEasingFunc::Linear },
				{ "EEasingFunc::Step", (int64)EEasingFunc::Step },
				{ "EEasingFunc::SinusoidalIn", (int64)EEasingFunc::SinusoidalIn },
				{ "EEasingFunc::SinusoidalOut", (int64)EEasingFunc::SinusoidalOut },
				{ "EEasingFunc::SinusoidalInOut", (int64)EEasingFunc::SinusoidalInOut },
				{ "EEasingFunc::EaseIn", (int64)EEasingFunc::EaseIn },
				{ "EEasingFunc::EaseOut", (int64)EEasingFunc::EaseOut },
				{ "EEasingFunc::EaseInOut", (int64)EEasingFunc::EaseInOut },
				{ "EEasingFunc::ExpoIn", (int64)EEasingFunc::ExpoIn },
				{ "EEasingFunc::ExpoOut", (int64)EEasingFunc::ExpoOut },
				{ "EEasingFunc::ExpoInOut", (int64)EEasingFunc::ExpoInOut },
				{ "EEasingFunc::CircularIn", (int64)EEasingFunc::CircularIn },
				{ "EEasingFunc::CircularOut", (int64)EEasingFunc::CircularOut },
				{ "EEasingFunc::CircularInOut", (int64)EEasingFunc::CircularInOut },
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Enum_MetaDataParams[] = {
				{ "BlueprintType", "true" },
				{ "CircularIn.ToolTip", "Easing is based on a half circle." },
				{ "CircularInOut.ToolTip", "Easing is based on two half circles." },
				{ "CircularOut.ToolTip", "Easing is based on an inverted half circle." },
				{ "EaseIn.ToolTip", "Smoothly accelerates, but does not decelerate into the target.  Ease amount controlled by BlendExp." },
				{ "EaseInOut.ToolTip", "Smoothly accelerates and decelerates.  Ease amount controlled by BlendExp." },
				{ "EaseOut.ToolTip", "Immediately accelerates, but smoothly decelerates into the target.  Ease amount controlled by BlendExp." },
				{ "ExpoIn.ToolTip", "Easing in using an exponential" },
				{ "ExpoInOut.ToolTip", "Easing in/out using an exponential method" },
				{ "ExpoOut.ToolTip", "Easing out using an exponential" },
				{ "Linear.ToolTip", "Simple linear interpolation." },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "SinusoidalIn.ToolTip", "Sinusoidal in interpolation." },
				{ "SinusoidalInOut.ToolTip", "Sinusoidal in/out interpolation." },
				{ "SinusoidalOut.ToolTip", "Sinusoidal out interpolation." },
				{ "Step.ToolTip", "Simple step interpolation." },
				{ "ToolTip", "Provides different easing functions that can be used in blueprints" },
			};
#endif
			static const UE4CodeGen_Private::FEnumParams EnumParams = {
				(UObject*(*)())Z_Construct_UPackage__Script_Engine,
				UE4CodeGen_Private::EDynamicType::NotDynamic,
				"EEasingFunc",
				RF_Public|RF_Transient|RF_MarkAsNative,
				nullptr,
				(uint8)UEnum::ECppForm::Namespaced,
				"EEasingFunc::Type",
				Enumerators,
				ARRAY_COUNT(Enumerators),
				METADATA_PARAMS(Enum_MetaDataParams, ARRAY_COUNT(Enum_MetaDataParams))
			};
			UE4CodeGen_Private::ConstructUEnum(ReturnEnum, EnumParams);
		}
		return ReturnEnum;
	}
class UScriptStruct* FVectorSpringState::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FVectorSpringState, Z_Construct_UPackage__Script_Engine(), TEXT("VectorSpringState"), sizeof(FVectorSpringState), Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FVectorSpringState(FVectorSpringState::StaticStruct, TEXT("/Script/Engine"), TEXT("VectorSpringState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFVectorSpringState
{
	FScriptStruct_Engine_StaticRegisterNativesFVectorSpringState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("VectorSpringState")),new UScriptStruct::TCppStructOps<FVectorSpringState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFVectorSpringState;
	UScriptStruct* Z_Construct_UScriptStruct_FVectorSpringState()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC();
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("VectorSpringState"), sizeof(FVectorSpringState), Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[] = {
				{ "BlueprintType", "true" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
			};
#endif
			auto NewStructOpsLambda = []() -> void* { return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FVectorSpringState>(); };
			static const UE4CodeGen_Private::FStructParams ReturnStructParams = {
				(UObject* (*)())Z_Construct_UPackage__Script_Engine,
				nullptr,
				&UE4CodeGen_Private::TNewCppStructOpsWrapper<decltype(NewStructOpsLambda)>::NewCppStructOps,
				"VectorSpringState",
				RF_Public|RF_Transient|RF_MarkAsNative,
				EStructFlags(0x00000201),
				sizeof(FVectorSpringState),
				alignof(FVectorSpringState),
				nullptr, 0,
				METADATA_PARAMS(Struct_MetaDataParams, ARRAY_COUNT(Struct_MetaDataParams))
			};
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FVectorSpringState_CRC() { return 1728432665U; }
class UScriptStruct* FFloatSpringState::StaticStruct()
{
	static class UScriptStruct* Singleton = NULL;
	if (!Singleton)
	{
		extern ENGINE_API uint32 Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC();
		Singleton = GetStaticStruct(Z_Construct_UScriptStruct_FFloatSpringState, Z_Construct_UPackage__Script_Engine(), TEXT("FloatSpringState"), sizeof(FFloatSpringState), Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC());
	}
	return Singleton;
}
static FCompiledInDeferStruct Z_CompiledInDeferStruct_UScriptStruct_FFloatSpringState(FFloatSpringState::StaticStruct, TEXT("/Script/Engine"), TEXT("FloatSpringState"), false, nullptr, nullptr);
static struct FScriptStruct_Engine_StaticRegisterNativesFFloatSpringState
{
	FScriptStruct_Engine_StaticRegisterNativesFFloatSpringState()
	{
		UScriptStruct::DeferCppStructOps(FName(TEXT("FloatSpringState")),new UScriptStruct::TCppStructOps<FFloatSpringState>);
	}
} ScriptStruct_Engine_StaticRegisterNativesFFloatSpringState;
	UScriptStruct* Z_Construct_UScriptStruct_FFloatSpringState()
	{
#if WITH_HOT_RELOAD
		extern uint32 Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC();
		UPackage* Outer = Z_Construct_UPackage__Script_Engine();
		static UScriptStruct* ReturnStruct = FindExistingStructIfHotReloadOrDynamic(Outer, TEXT("FloatSpringState"), sizeof(FFloatSpringState), Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC(), false);
#else
		static UScriptStruct* ReturnStruct = nullptr;
#endif
		if (!ReturnStruct)
		{
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Struct_MetaDataParams[] = {
				{ "BlueprintType", "true" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
			};
#endif
			auto NewStructOpsLambda = []() -> void* { return (UScriptStruct::ICppStructOps*)new UScriptStruct::TCppStructOps<FFloatSpringState>(); };
			static const UE4CodeGen_Private::FStructParams ReturnStructParams = {
				(UObject* (*)())Z_Construct_UPackage__Script_Engine,
				nullptr,
				&UE4CodeGen_Private::TNewCppStructOpsWrapper<decltype(NewStructOpsLambda)>::NewCppStructOps,
				"FloatSpringState",
				RF_Public|RF_Transient|RF_MarkAsNative,
				EStructFlags(0x00000201),
				sizeof(FFloatSpringState),
				alignof(FFloatSpringState),
				nullptr, 0,
				METADATA_PARAMS(Struct_MetaDataParams, ARRAY_COUNT(Struct_MetaDataParams))
			};
			UE4CodeGen_Private::ConstructUScriptStruct(ReturnStruct, ReturnStructParams);
		}
		return ReturnStruct;
	}
	uint32 Get_Z_Construct_UScriptStruct_FFloatSpringState_CRC() { return 3427925816U; }
	void UKismetMathLibrary::StaticRegisterNativesUKismetMathLibrary()
	{
		UClass* Class = UKismetMathLibrary::StaticClass();
		static const FNameNativePtrPair Funcs[] = {
			{ "Abs", (Native)&UKismetMathLibrary::execAbs },
			{ "Abs_Int", (Native)&UKismetMathLibrary::execAbs_Int },
			{ "Acos", (Native)&UKismetMathLibrary::execAcos },
			{ "Add_ByteByte", (Native)&UKismetMathLibrary::execAdd_ByteByte },
			{ "Add_DateTimeTimespan", (Native)&UKismetMathLibrary::execAdd_DateTimeTimespan },
			{ "Add_FloatFloat", (Native)&UKismetMathLibrary::execAdd_FloatFloat },
			{ "Add_IntInt", (Native)&UKismetMathLibrary::execAdd_IntInt },
			{ "Add_TimespanTimespan", (Native)&UKismetMathLibrary::execAdd_TimespanTimespan },
			{ "Add_Vector2DFloat", (Native)&UKismetMathLibrary::execAdd_Vector2DFloat },
			{ "Add_Vector2DVector2D", (Native)&UKismetMathLibrary::execAdd_Vector2DVector2D },
			{ "Add_VectorFloat", (Native)&UKismetMathLibrary::execAdd_VectorFloat },
			{ "Add_VectorInt", (Native)&UKismetMathLibrary::execAdd_VectorInt },
			{ "Add_VectorVector", (Native)&UKismetMathLibrary::execAdd_VectorVector },
			{ "And_IntInt", (Native)&UKismetMathLibrary::execAnd_IntInt },
			{ "Asin", (Native)&UKismetMathLibrary::execAsin },
			{ "Atan", (Native)&UKismetMathLibrary::execAtan },
			{ "Atan2", (Native)&UKismetMathLibrary::execAtan2 },
			{ "BMax", (Native)&UKismetMathLibrary::execBMax },
			{ "BMin", (Native)&UKismetMathLibrary::execBMin },
			{ "BooleanAND", (Native)&UKismetMathLibrary::execBooleanAND },
			{ "BooleanNAND", (Native)&UKismetMathLibrary::execBooleanNAND },
			{ "BooleanNOR", (Native)&UKismetMathLibrary::execBooleanNOR },
			{ "BooleanOR", (Native)&UKismetMathLibrary::execBooleanOR },
			{ "BooleanXOR", (Native)&UKismetMathLibrary::execBooleanXOR },
			{ "BreakColor", (Native)&UKismetMathLibrary::execBreakColor },
			{ "BreakDateTime", (Native)&UKismetMathLibrary::execBreakDateTime },
			{ "BreakRandomStream", (Native)&UKismetMathLibrary::execBreakRandomStream },
			{ "BreakRotator", (Native)&UKismetMathLibrary::execBreakRotator },
			{ "BreakRotIntoAxes", (Native)&UKismetMathLibrary::execBreakRotIntoAxes },
			{ "BreakTimespan", (Native)&UKismetMathLibrary::execBreakTimespan },
			{ "BreakTimespan2", (Native)&UKismetMathLibrary::execBreakTimespan2 },
			{ "BreakTransform", (Native)&UKismetMathLibrary::execBreakTransform },
			{ "BreakVector", (Native)&UKismetMathLibrary::execBreakVector },
			{ "BreakVector2D", (Native)&UKismetMathLibrary::execBreakVector2D },
			{ "CInterpTo", (Native)&UKismetMathLibrary::execCInterpTo },
			{ "Clamp", (Native)&UKismetMathLibrary::execClamp },
			{ "ClampAngle", (Native)&UKismetMathLibrary::execClampAngle },
			{ "ClampAxis", (Native)&UKismetMathLibrary::execClampAxis },
			{ "ClampVectorSize", (Native)&UKismetMathLibrary::execClampVectorSize },
			{ "ClassIsChildOf", (Native)&UKismetMathLibrary::execClassIsChildOf },
			{ "ComposeRotators", (Native)&UKismetMathLibrary::execComposeRotators },
			{ "ComposeTransforms", (Native)&UKismetMathLibrary::execComposeTransforms },
			{ "Conv_BoolToByte", (Native)&UKismetMathLibrary::execConv_BoolToByte },
			{ "Conv_BoolToFloat", (Native)&UKismetMathLibrary::execConv_BoolToFloat },
			{ "Conv_BoolToInt", (Native)&UKismetMathLibrary::execConv_BoolToInt },
			{ "Conv_ByteToFloat", (Native)&UKismetMathLibrary::execConv_ByteToFloat },
			{ "Conv_ByteToInt", (Native)&UKismetMathLibrary::execConv_ByteToInt },
			{ "Conv_ColorToLinearColor", (Native)&UKismetMathLibrary::execConv_ColorToLinearColor },
			{ "Conv_FloatToLinearColor", (Native)&UKismetMathLibrary::execConv_FloatToLinearColor },
			{ "Conv_FloatToVector", (Native)&UKismetMathLibrary::execConv_FloatToVector },
			{ "Conv_IntToBool", (Native)&UKismetMathLibrary::execConv_IntToBool },
			{ "Conv_IntToByte", (Native)&UKismetMathLibrary::execConv_IntToByte },
			{ "Conv_IntToFloat", (Native)&UKismetMathLibrary::execConv_IntToFloat },
			{ "Conv_IntToIntVector", (Native)&UKismetMathLibrary::execConv_IntToIntVector },
			{ "Conv_IntVectorToVector", (Native)&UKismetMathLibrary::execConv_IntVectorToVector },
			{ "Conv_LinearColorToColor", (Native)&UKismetMathLibrary::execConv_LinearColorToColor },
			{ "Conv_LinearColorToVector", (Native)&UKismetMathLibrary::execConv_LinearColorToVector },
			{ "Conv_RotatorToVector", (Native)&UKismetMathLibrary::execConv_RotatorToVector },
			{ "Conv_Vector2DToVector", (Native)&UKismetMathLibrary::execConv_Vector2DToVector },
			{ "Conv_VectorToLinearColor", (Native)&UKismetMathLibrary::execConv_VectorToLinearColor },
			{ "Conv_VectorToRotator", (Native)&UKismetMathLibrary::execConv_VectorToRotator },
			{ "Conv_VectorToTransform", (Native)&UKismetMathLibrary::execConv_VectorToTransform },
			{ "Conv_VectorToVector2D", (Native)&UKismetMathLibrary::execConv_VectorToVector2D },
			{ "ConvertTransformToRelative", (Native)&UKismetMathLibrary::execConvertTransformToRelative },
			{ "Cos", (Native)&UKismetMathLibrary::execCos },
			{ "CreateVectorFromYawPitch", (Native)&UKismetMathLibrary::execCreateVectorFromYawPitch },
			{ "Cross_VectorVector", (Native)&UKismetMathLibrary::execCross_VectorVector },
			{ "CrossProduct2D", (Native)&UKismetMathLibrary::execCrossProduct2D },
			{ "DateTimeFromIsoString", (Native)&UKismetMathLibrary::execDateTimeFromIsoString },
			{ "DateTimeFromString", (Native)&UKismetMathLibrary::execDateTimeFromString },
			{ "DateTimeMaxValue", (Native)&UKismetMathLibrary::execDateTimeMaxValue },
			{ "DateTimeMinValue", (Native)&UKismetMathLibrary::execDateTimeMinValue },
			{ "DaysInMonth", (Native)&UKismetMathLibrary::execDaysInMonth },
			{ "DaysInYear", (Native)&UKismetMathLibrary::execDaysInYear },
			{ "DegAcos", (Native)&UKismetMathLibrary::execDegAcos },
			{ "DegAsin", (Native)&UKismetMathLibrary::execDegAsin },
			{ "DegAtan", (Native)&UKismetMathLibrary::execDegAtan },
			{ "DegAtan2", (Native)&UKismetMathLibrary::execDegAtan2 },
			{ "DegCos", (Native)&UKismetMathLibrary::execDegCos },
			{ "DegreesToRadians", (Native)&UKismetMathLibrary::execDegreesToRadians },
			{ "DegSin", (Native)&UKismetMathLibrary::execDegSin },
			{ "DegTan", (Native)&UKismetMathLibrary::execDegTan },
			{ "Divide_ByteByte", (Native)&UKismetMathLibrary::execDivide_ByteByte },
			{ "Divide_FloatFloat", (Native)&UKismetMathLibrary::execDivide_FloatFloat },
			{ "Divide_IntInt", (Native)&UKismetMathLibrary::execDivide_IntInt },
			{ "Divide_TimespanFloat", (Native)&UKismetMathLibrary::execDivide_TimespanFloat },
			{ "Divide_Vector2DFloat", (Native)&UKismetMathLibrary::execDivide_Vector2DFloat },
			{ "Divide_Vector2DVector2D", (Native)&UKismetMathLibrary::execDivide_Vector2DVector2D },
			{ "Divide_VectorFloat", (Native)&UKismetMathLibrary::execDivide_VectorFloat },
			{ "Divide_VectorInt", (Native)&UKismetMathLibrary::execDivide_VectorInt },
			{ "Divide_VectorVector", (Native)&UKismetMathLibrary::execDivide_VectorVector },
			{ "Dot_VectorVector", (Native)&UKismetMathLibrary::execDot_VectorVector },
			{ "DotProduct2D", (Native)&UKismetMathLibrary::execDotProduct2D },
			{ "Ease", (Native)&UKismetMathLibrary::execEase },
			{ "EqualEqual_BoolBool", (Native)&UKismetMathLibrary::execEqualEqual_BoolBool },
			{ "EqualEqual_ByteByte", (Native)&UKismetMathLibrary::execEqualEqual_ByteByte },
			{ "EqualEqual_ClassClass", (Native)&UKismetMathLibrary::execEqualEqual_ClassClass },
			{ "EqualEqual_DateTimeDateTime", (Native)&UKismetMathLibrary::execEqualEqual_DateTimeDateTime },
			{ "EqualEqual_FloatFloat", (Native)&UKismetMathLibrary::execEqualEqual_FloatFloat },
			{ "EqualEqual_IntInt", (Native)&UKismetMathLibrary::execEqualEqual_IntInt },
			{ "EqualEqual_NameName", (Native)&UKismetMathLibrary::execEqualEqual_NameName },
			{ "EqualEqual_ObjectObject", (Native)&UKismetMathLibrary::execEqualEqual_ObjectObject },
			{ "EqualEqual_RotatorRotator", (Native)&UKismetMathLibrary::execEqualEqual_RotatorRotator },
			{ "EqualEqual_TimespanTimespan", (Native)&UKismetMathLibrary::execEqualEqual_TimespanTimespan },
			{ "EqualEqual_TransformTransform", (Native)&UKismetMathLibrary::execEqualEqual_TransformTransform },
			{ "EqualEqual_Vector2DVector2D", (Native)&UKismetMathLibrary::execEqualEqual_Vector2DVector2D },
			{ "EqualEqual_VectorVector", (Native)&UKismetMathLibrary::execEqualEqual_VectorVector },
			{ "Exp", (Native)&UKismetMathLibrary::execExp },
			{ "FCeil", (Native)&UKismetMathLibrary::execFCeil },
			{ "FClamp", (Native)&UKismetMathLibrary::execFClamp },
			{ "FFloor", (Native)&UKismetMathLibrary::execFFloor },
			{ "FindClosestPointOnLine", (Native)&UKismetMathLibrary::execFindClosestPointOnLine },
			{ "FindClosestPointOnSegment", (Native)&UKismetMathLibrary::execFindClosestPointOnSegment },
			{ "FindLookAtRotation", (Native)&UKismetMathLibrary::execFindLookAtRotation },
			{ "FindNearestPointsOnLineSegments", (Native)&UKismetMathLibrary::execFindNearestPointsOnLineSegments },
			{ "FInterpEaseInOut", (Native)&UKismetMathLibrary::execFInterpEaseInOut },
			{ "FInterpTo", (Native)&UKismetMathLibrary::execFInterpTo },
			{ "FInterpTo_Constant", (Native)&UKismetMathLibrary::execFInterpTo_Constant },
			{ "FixedTurn", (Native)&UKismetMathLibrary::execFixedTurn },
			{ "FloatSpringInterp", (Native)&UKismetMathLibrary::execFloatSpringInterp },
			{ "FMax", (Native)&UKismetMathLibrary::execFMax },
			{ "FMin", (Native)&UKismetMathLibrary::execFMin },
			{ "FMod", (Native)&UKismetMathLibrary::execFMod },
			{ "Fraction", (Native)&UKismetMathLibrary::execFraction },
			{ "FromDays", (Native)&UKismetMathLibrary::execFromDays },
			{ "FromHours", (Native)&UKismetMathLibrary::execFromHours },
			{ "FromMilliseconds", (Native)&UKismetMathLibrary::execFromMilliseconds },
			{ "FromMinutes", (Native)&UKismetMathLibrary::execFromMinutes },
			{ "FromSeconds", (Native)&UKismetMathLibrary::execFromSeconds },
			{ "FTrunc", (Native)&UKismetMathLibrary::execFTrunc },
			{ "FTruncVector", (Native)&UKismetMathLibrary::execFTruncVector },
			{ "GetAxes", (Native)&UKismetMathLibrary::execGetAxes },
			{ "GetAzimuthAndElevation", (Native)&UKismetMathLibrary::execGetAzimuthAndElevation },
			{ "GetDate", (Native)&UKismetMathLibrary::execGetDate },
			{ "GetDay", (Native)&UKismetMathLibrary::execGetDay },
			{ "GetDayOfYear", (Native)&UKismetMathLibrary::execGetDayOfYear },
			{ "GetDays", (Native)&UKismetMathLibrary::execGetDays },
			{ "GetDirectionUnitVector", (Native)&UKismetMathLibrary::execGetDirectionUnitVector },
			{ "GetDuration", (Native)&UKismetMathLibrary::execGetDuration },
			{ "GetForwardVector", (Native)&UKismetMathLibrary::execGetForwardVector },
			{ "GetHour", (Native)&UKismetMathLibrary::execGetHour },
			{ "GetHour12", (Native)&UKismetMathLibrary::execGetHour12 },
			{ "GetHours", (Native)&UKismetMathLibrary::execGetHours },
			{ "GetMaxElement", (Native)&UKismetMathLibrary::execGetMaxElement },
			{ "GetMillisecond", (Native)&UKismetMathLibrary::execGetMillisecond },
			{ "GetMilliseconds", (Native)&UKismetMathLibrary::execGetMilliseconds },
			{ "GetMinElement", (Native)&UKismetMathLibrary::execGetMinElement },
			{ "GetMinute", (Native)&UKismetMathLibrary::execGetMinute },
			{ "GetMinutes", (Native)&UKismetMathLibrary::execGetMinutes },
			{ "GetMonth", (Native)&UKismetMathLibrary::execGetMonth },
			{ "GetPI", (Native)&UKismetMathLibrary::execGetPI },
			{ "GetPointDistanceToLine", (Native)&UKismetMathLibrary::execGetPointDistanceToLine },
			{ "GetPointDistanceToSegment", (Native)&UKismetMathLibrary::execGetPointDistanceToSegment },
			{ "GetReflectionVector", (Native)&UKismetMathLibrary::execGetReflectionVector },
			{ "GetRightVector", (Native)&UKismetMathLibrary::execGetRightVector },
			{ "GetSecond", (Native)&UKismetMathLibrary::execGetSecond },
			{ "GetSeconds", (Native)&UKismetMathLibrary::execGetSeconds },
			{ "GetTAU", (Native)&UKismetMathLibrary::execGetTAU },
			{ "GetTimeOfDay", (Native)&UKismetMathLibrary::execGetTimeOfDay },
			{ "GetTotalDays", (Native)&UKismetMathLibrary::execGetTotalDays },
			{ "GetTotalHours", (Native)&UKismetMathLibrary::execGetTotalHours },
			{ "GetTotalMilliseconds", (Native)&UKismetMathLibrary::execGetTotalMilliseconds },
			{ "GetTotalMinutes", (Native)&UKismetMathLibrary::execGetTotalMinutes },
			{ "GetTotalSeconds", (Native)&UKismetMathLibrary::execGetTotalSeconds },
			{ "GetUpVector", (Native)&UKismetMathLibrary::execGetUpVector },
			{ "GetVectorArrayAverage", (Native)&UKismetMathLibrary::execGetVectorArrayAverage },
			{ "GetYawPitchFromVector", (Native)&UKismetMathLibrary::execGetYawPitchFromVector },
			{ "GetYear", (Native)&UKismetMathLibrary::execGetYear },
			{ "Greater_ByteByte", (Native)&UKismetMathLibrary::execGreater_ByteByte },
			{ "Greater_DateTimeDateTime", (Native)&UKismetMathLibrary::execGreater_DateTimeDateTime },
			{ "Greater_FloatFloat", (Native)&UKismetMathLibrary::execGreater_FloatFloat },
			{ "Greater_IntInt", (Native)&UKismetMathLibrary::execGreater_IntInt },
			{ "Greater_TimespanTimespan", (Native)&UKismetMathLibrary::execGreater_TimespanTimespan },
			{ "GreaterEqual_ByteByte", (Native)&UKismetMathLibrary::execGreaterEqual_ByteByte },
			{ "GreaterEqual_DateTimeDateTime", (Native)&UKismetMathLibrary::execGreaterEqual_DateTimeDateTime },
			{ "GreaterEqual_FloatFloat", (Native)&UKismetMathLibrary::execGreaterEqual_FloatFloat },
			{ "GreaterEqual_IntInt", (Native)&UKismetMathLibrary::execGreaterEqual_IntInt },
			{ "GreaterEqual_TimespanTimespan", (Native)&UKismetMathLibrary::execGreaterEqual_TimespanTimespan },
			{ "GreaterGreater_VectorRotator", (Native)&UKismetMathLibrary::execGreaterGreater_VectorRotator },
			{ "GridSnap_Float", (Native)&UKismetMathLibrary::execGridSnap_Float },
			{ "HSVToRGB", (Native)&UKismetMathLibrary::execHSVToRGB },
			{ "HSVToRGB_Vector", (Native)&UKismetMathLibrary::execHSVToRGB_Vector },
			{ "Hypotenuse", (Native)&UKismetMathLibrary::execHypotenuse },
			{ "InRange_FloatFloat", (Native)&UKismetMathLibrary::execInRange_FloatFloat },
			{ "InRange_IntInt", (Native)&UKismetMathLibrary::execInRange_IntInt },
			{ "InverseLerp", (Native)&UKismetMathLibrary::execInverseLerp },
			{ "InverseTransformDirection", (Native)&UKismetMathLibrary::execInverseTransformDirection },
			{ "InverseTransformLocation", (Native)&UKismetMathLibrary::execInverseTransformLocation },
			{ "InverseTransformRotation", (Native)&UKismetMathLibrary::execInverseTransformRotation },
			{ "InvertTransform", (Native)&UKismetMathLibrary::execInvertTransform },
			{ "IsAfternoon", (Native)&UKismetMathLibrary::execIsAfternoon },
			{ "IsLeapYear", (Native)&UKismetMathLibrary::execIsLeapYear },
			{ "IsMorning", (Native)&UKismetMathLibrary::execIsMorning },
			{ "IsPointInBox", (Native)&UKismetMathLibrary::execIsPointInBox },
			{ "IsPointInBoxWithTransform", (Native)&UKismetMathLibrary::execIsPointInBoxWithTransform },
			{ "Lerp", (Native)&UKismetMathLibrary::execLerp },
			{ "Less_ByteByte", (Native)&UKismetMathLibrary::execLess_ByteByte },
			{ "Less_DateTimeDateTime", (Native)&UKismetMathLibrary::execLess_DateTimeDateTime },
			{ "Less_FloatFloat", (Native)&UKismetMathLibrary::execLess_FloatFloat },
			{ "Less_IntInt", (Native)&UKismetMathLibrary::execLess_IntInt },
			{ "Less_TimespanTimespan", (Native)&UKismetMathLibrary::execLess_TimespanTimespan },
			{ "LessEqual_ByteByte", (Native)&UKismetMathLibrary::execLessEqual_ByteByte },
			{ "LessEqual_DateTimeDateTime", (Native)&UKismetMathLibrary::execLessEqual_DateTimeDateTime },
			{ "LessEqual_FloatFloat", (Native)&UKismetMathLibrary::execLessEqual_FloatFloat },
			{ "LessEqual_IntInt", (Native)&UKismetMathLibrary::execLessEqual_IntInt },
			{ "LessEqual_TimespanTimespan", (Native)&UKismetMathLibrary::execLessEqual_TimespanTimespan },
			{ "LessLess_VectorRotator", (Native)&UKismetMathLibrary::execLessLess_VectorRotator },
			{ "LinearColorLerp", (Native)&UKismetMathLibrary::execLinearColorLerp },
			{ "LinearColorLerpUsingHSV", (Native)&UKismetMathLibrary::execLinearColorLerpUsingHSV },
			{ "LinePlaneIntersection", (Native)&UKismetMathLibrary::execLinePlaneIntersection },
			{ "LinePlaneIntersection_OriginNormal", (Native)&UKismetMathLibrary::execLinePlaneIntersection_OriginNormal },
			{ "Log", (Native)&UKismetMathLibrary::execLog },
			{ "Loge", (Native)&UKismetMathLibrary::execLoge },
			{ "MakeBox", (Native)&UKismetMathLibrary::execMakeBox },
			{ "MakeBox2D", (Native)&UKismetMathLibrary::execMakeBox2D },
			{ "MakeColor", (Native)&UKismetMathLibrary::execMakeColor },
			{ "MakeDateTime", (Native)&UKismetMathLibrary::execMakeDateTime },
			{ "MakePlaneFromPointAndNormal", (Native)&UKismetMathLibrary::execMakePlaneFromPointAndNormal },
			{ "MakePulsatingValue", (Native)&UKismetMathLibrary::execMakePulsatingValue },
			{ "MakeRandomStream", (Native)&UKismetMathLibrary::execMakeRandomStream },
			{ "MakeRotationFromAxes", (Native)&UKismetMathLibrary::execMakeRotationFromAxes },
			{ "MakeRotator", (Native)&UKismetMathLibrary::execMakeRotator },
			{ "MakeRotFromX", (Native)&UKismetMathLibrary::execMakeRotFromX },
			{ "MakeRotFromXY", (Native)&UKismetMathLibrary::execMakeRotFromXY },
			{ "MakeRotFromXZ", (Native)&UKismetMathLibrary::execMakeRotFromXZ },
			{ "MakeRotFromY", (Native)&UKismetMathLibrary::execMakeRotFromY },
			{ "MakeRotFromYX", (Native)&UKismetMathLibrary::execMakeRotFromYX },
			{ "MakeRotFromYZ", (Native)&UKismetMathLibrary::execMakeRotFromYZ },
			{ "MakeRotFromZ", (Native)&UKismetMathLibrary::execMakeRotFromZ },
			{ "MakeRotFromZX", (Native)&UKismetMathLibrary::execMakeRotFromZX },
			{ "MakeRotFromZY", (Native)&UKismetMathLibrary::execMakeRotFromZY },
			{ "MakeTimespan", (Native)&UKismetMathLibrary::execMakeTimespan },
			{ "MakeTimespan2", (Native)&UKismetMathLibrary::execMakeTimespan2 },
			{ "MakeTransform", (Native)&UKismetMathLibrary::execMakeTransform },
			{ "MakeVector", (Native)&UKismetMathLibrary::execMakeVector },
			{ "MakeVector2D", (Native)&UKismetMathLibrary::execMakeVector2D },
			{ "MapRangeClamped", (Native)&UKismetMathLibrary::execMapRangeClamped },
			{ "MapRangeUnclamped", (Native)&UKismetMathLibrary::execMapRangeUnclamped },
			{ "Max", (Native)&UKismetMathLibrary::execMax },
			{ "MaxOfByteArray", (Native)&UKismetMathLibrary::execMaxOfByteArray },
			{ "MaxOfFloatArray", (Native)&UKismetMathLibrary::execMaxOfFloatArray },
			{ "MaxOfIntArray", (Native)&UKismetMathLibrary::execMaxOfIntArray },
			{ "Min", (Native)&UKismetMathLibrary::execMin },
			{ "MinimumAreaRectangle", (Native)&UKismetMathLibrary::execMinimumAreaRectangle },
			{ "MinOfByteArray", (Native)&UKismetMathLibrary::execMinOfByteArray },
			{ "MinOfFloatArray", (Native)&UKismetMathLibrary::execMinOfFloatArray },
			{ "MinOfIntArray", (Native)&UKismetMathLibrary::execMinOfIntArray },
			{ "MirrorVectorByNormal", (Native)&UKismetMathLibrary::execMirrorVectorByNormal },
			{ "Multiply_ByteByte", (Native)&UKismetMathLibrary::execMultiply_ByteByte },
			{ "Multiply_FloatFloat", (Native)&UKismetMathLibrary::execMultiply_FloatFloat },
			{ "Multiply_IntFloat", (Native)&UKismetMathLibrary::execMultiply_IntFloat },
			{ "Multiply_IntInt", (Native)&UKismetMathLibrary::execMultiply_IntInt },
			{ "Multiply_LinearColorFloat", (Native)&UKismetMathLibrary::execMultiply_LinearColorFloat },
			{ "Multiply_LinearColorLinearColor", (Native)&UKismetMathLibrary::execMultiply_LinearColorLinearColor },
			{ "Multiply_RotatorFloat", (Native)&UKismetMathLibrary::execMultiply_RotatorFloat },
			{ "Multiply_RotatorInt", (Native)&UKismetMathLibrary::execMultiply_RotatorInt },
			{ "Multiply_TimespanFloat", (Native)&UKismetMathLibrary::execMultiply_TimespanFloat },
			{ "Multiply_Vector2DFloat", (Native)&UKismetMathLibrary::execMultiply_Vector2DFloat },
			{ "Multiply_Vector2DVector2D", (Native)&UKismetMathLibrary::execMultiply_Vector2DVector2D },
			{ "Multiply_VectorFloat", (Native)&UKismetMathLibrary::execMultiply_VectorFloat },
			{ "Multiply_VectorInt", (Native)&UKismetMathLibrary::execMultiply_VectorInt },
			{ "Multiply_VectorVector", (Native)&UKismetMathLibrary::execMultiply_VectorVector },
			{ "MultiplyByPi", (Native)&UKismetMathLibrary::execMultiplyByPi },
			{ "MultiplyMultiply_FloatFloat", (Native)&UKismetMathLibrary::execMultiplyMultiply_FloatFloat },
			{ "NearlyEqual_FloatFloat", (Native)&UKismetMathLibrary::execNearlyEqual_FloatFloat },
			{ "NearlyEqual_TransformTransform", (Native)&UKismetMathLibrary::execNearlyEqual_TransformTransform },
			{ "NegateRotator", (Native)&UKismetMathLibrary::execNegateRotator },
			{ "NegateVector", (Native)&UKismetMathLibrary::execNegateVector },
			{ "Normal", (Native)&UKismetMathLibrary::execNormal },
			{ "Normal2D", (Native)&UKismetMathLibrary::execNormal2D },
			{ "NormalizeAxis", (Native)&UKismetMathLibrary::execNormalizeAxis },
			{ "NormalizedDeltaRotator", (Native)&UKismetMathLibrary::execNormalizedDeltaRotator },
			{ "NormalizeToRange", (Native)&UKismetMathLibrary::execNormalizeToRange },
			{ "Not_Int", (Native)&UKismetMathLibrary::execNot_Int },
			{ "Not_PreBool", (Native)&UKismetMathLibrary::execNot_PreBool },
			{ "NotEqual_BoolBool", (Native)&UKismetMathLibrary::execNotEqual_BoolBool },
			{ "NotEqual_ByteByte", (Native)&UKismetMathLibrary::execNotEqual_ByteByte },
			{ "NotEqual_ClassClass", (Native)&UKismetMathLibrary::execNotEqual_ClassClass },
			{ "NotEqual_DateTimeDateTime", (Native)&UKismetMathLibrary::execNotEqual_DateTimeDateTime },
			{ "NotEqual_FloatFloat", (Native)&UKismetMathLibrary::execNotEqual_FloatFloat },
			{ "NotEqual_IntInt", (Native)&UKismetMathLibrary::execNotEqual_IntInt },
			{ "NotEqual_NameName", (Native)&UKismetMathLibrary::execNotEqual_NameName },
			{ "NotEqual_ObjectObject", (Native)&UKismetMathLibrary::execNotEqual_ObjectObject },
			{ "NotEqual_RotatorRotator", (Native)&UKismetMathLibrary::execNotEqual_RotatorRotator },
			{ "NotEqual_TimespanTimespan", (Native)&UKismetMathLibrary::execNotEqual_TimespanTimespan },
			{ "NotEqual_Vector2DVector2D", (Native)&UKismetMathLibrary::execNotEqual_Vector2DVector2D },
			{ "NotEqual_VectorVector", (Native)&UKismetMathLibrary::execNotEqual_VectorVector },
			{ "Now", (Native)&UKismetMathLibrary::execNow },
			{ "Or_IntInt", (Native)&UKismetMathLibrary::execOr_IntInt },
			{ "Percent_ByteByte", (Native)&UKismetMathLibrary::execPercent_ByteByte },
			{ "Percent_FloatFloat", (Native)&UKismetMathLibrary::execPercent_FloatFloat },
			{ "Percent_IntInt", (Native)&UKismetMathLibrary::execPercent_IntInt },
			{ "PointsAreCoplanar", (Native)&UKismetMathLibrary::execPointsAreCoplanar },
			{ "ProjectPointOnToPlane", (Native)&UKismetMathLibrary::execProjectPointOnToPlane },
			{ "ProjectVectorOnToPlane", (Native)&UKismetMathLibrary::execProjectVectorOnToPlane },
			{ "ProjectVectorOnToVector", (Native)&UKismetMathLibrary::execProjectVectorOnToVector },
			{ "RadiansToDegrees", (Native)&UKismetMathLibrary::execRadiansToDegrees },
			{ "RandomBool", (Native)&UKismetMathLibrary::execRandomBool },
			{ "RandomBoolFromStream", (Native)&UKismetMathLibrary::execRandomBoolFromStream },
			{ "RandomBoolWithWeight", (Native)&UKismetMathLibrary::execRandomBoolWithWeight },
			{ "RandomBoolWithWeightFromStream", (Native)&UKismetMathLibrary::execRandomBoolWithWeightFromStream },
			{ "RandomFloat", (Native)&UKismetMathLibrary::execRandomFloat },
			{ "RandomFloatFromStream", (Native)&UKismetMathLibrary::execRandomFloatFromStream },
			{ "RandomFloatInRange", (Native)&UKismetMathLibrary::execRandomFloatInRange },
			{ "RandomFloatInRangeFromStream", (Native)&UKismetMathLibrary::execRandomFloatInRangeFromStream },
			{ "RandomInteger", (Native)&UKismetMathLibrary::execRandomInteger },
			{ "RandomIntegerFromStream", (Native)&UKismetMathLibrary::execRandomIntegerFromStream },
			{ "RandomIntegerInRange", (Native)&UKismetMathLibrary::execRandomIntegerInRange },
			{ "RandomIntegerInRangeFromStream", (Native)&UKismetMathLibrary::execRandomIntegerInRangeFromStream },
			{ "RandomPointInBoundingBox", (Native)&UKismetMathLibrary::execRandomPointInBoundingBox },
			{ "RandomRotator", (Native)&UKismetMathLibrary::execRandomRotator },
			{ "RandomRotatorFromStream", (Native)&UKismetMathLibrary::execRandomRotatorFromStream },
			{ "RandomUnitVector", (Native)&UKismetMathLibrary::execRandomUnitVector },
			{ "RandomUnitVectorFromStream", (Native)&UKismetMathLibrary::execRandomUnitVectorFromStream },
			{ "RandomUnitVectorInConeInDegrees", (Native)&UKismetMathLibrary::execRandomUnitVectorInConeInDegrees },
			{ "RandomUnitVectorInConeInDegreesFromStream", (Native)&UKismetMathLibrary::execRandomUnitVectorInConeInDegreesFromStream },
			{ "RandomUnitVectorInConeInRadians", (Native)&UKismetMathLibrary::execRandomUnitVectorInConeInRadians },
			{ "RandomUnitVectorInConeInRadiansFromStream", (Native)&UKismetMathLibrary::execRandomUnitVectorInConeInRadiansFromStream },
			{ "RandomUnitVectorInEllipticalConeInDegrees", (Native)&UKismetMathLibrary::execRandomUnitVectorInEllipticalConeInDegrees },
			{ "RandomUnitVectorInEllipticalConeInDegreesFromStream", (Native)&UKismetMathLibrary::execRandomUnitVectorInEllipticalConeInDegreesFromStream },
			{ "RandomUnitVectorInEllipticalConeInRadians", (Native)&UKismetMathLibrary::execRandomUnitVectorInEllipticalConeInRadians },
			{ "RandomUnitVectorInEllipticalConeInRadiansFromStream", (Native)&UKismetMathLibrary::execRandomUnitVectorInEllipticalConeInRadiansFromStream },
			{ "REase", (Native)&UKismetMathLibrary::execREase },
			{ "ResetFloatSpringState", (Native)&UKismetMathLibrary::execResetFloatSpringState },
			{ "ResetRandomStream", (Native)&UKismetMathLibrary::execResetRandomStream },
			{ "ResetVectorSpringState", (Native)&UKismetMathLibrary::execResetVectorSpringState },
			{ "RGBToHSV", (Native)&UKismetMathLibrary::execRGBToHSV },
			{ "RGBToHSV_Vector", (Native)&UKismetMathLibrary::execRGBToHSV_Vector },
			{ "RInterpTo", (Native)&UKismetMathLibrary::execRInterpTo },
			{ "RInterpTo_Constant", (Native)&UKismetMathLibrary::execRInterpTo_Constant },
			{ "RLerp", (Native)&UKismetMathLibrary::execRLerp },
			{ "RotateAngleAxis", (Native)&UKismetMathLibrary::execRotateAngleAxis },
			{ "RotatorFromAxisAndAngle", (Native)&UKismetMathLibrary::execRotatorFromAxisAndAngle },
			{ "Round", (Native)&UKismetMathLibrary::execRound },
			{ "SeedRandomStream", (Native)&UKismetMathLibrary::execSeedRandomStream },
			{ "SelectClass", (Native)&UKismetMathLibrary::execSelectClass },
			{ "SelectColor", (Native)&UKismetMathLibrary::execSelectColor },
			{ "SelectFloat", (Native)&UKismetMathLibrary::execSelectFloat },
			{ "SelectInt", (Native)&UKismetMathLibrary::execSelectInt },
			{ "SelectObject", (Native)&UKismetMathLibrary::execSelectObject },
			{ "SelectRotator", (Native)&UKismetMathLibrary::execSelectRotator },
			{ "SelectString", (Native)&UKismetMathLibrary::execSelectString },
			{ "SelectTransform", (Native)&UKismetMathLibrary::execSelectTransform },
			{ "SelectVector", (Native)&UKismetMathLibrary::execSelectVector },
			{ "SetRandomStreamSeed", (Native)&UKismetMathLibrary::execSetRandomStreamSeed },
			{ "SignOfFloat", (Native)&UKismetMathLibrary::execSignOfFloat },
			{ "SignOfInteger", (Native)&UKismetMathLibrary::execSignOfInteger },
			{ "Sin", (Native)&UKismetMathLibrary::execSin },
			{ "Sqrt", (Native)&UKismetMathLibrary::execSqrt },
			{ "Square", (Native)&UKismetMathLibrary::execSquare },
			{ "Subtract_ByteByte", (Native)&UKismetMathLibrary::execSubtract_ByteByte },
			{ "Subtract_DateTimeDateTime", (Native)&UKismetMathLibrary::execSubtract_DateTimeDateTime },
			{ "Subtract_DateTimeTimespan", (Native)&UKismetMathLibrary::execSubtract_DateTimeTimespan },
			{ "Subtract_FloatFloat", (Native)&UKismetMathLibrary::execSubtract_FloatFloat },
			{ "Subtract_IntInt", (Native)&UKismetMathLibrary::execSubtract_IntInt },
			{ "Subtract_TimespanTimespan", (Native)&UKismetMathLibrary::execSubtract_TimespanTimespan },
			{ "Subtract_Vector2DFloat", (Native)&UKismetMathLibrary::execSubtract_Vector2DFloat },
			{ "Subtract_Vector2DVector2D", (Native)&UKismetMathLibrary::execSubtract_Vector2DVector2D },
			{ "Subtract_VectorFloat", (Native)&UKismetMathLibrary::execSubtract_VectorFloat },
			{ "Subtract_VectorInt", (Native)&UKismetMathLibrary::execSubtract_VectorInt },
			{ "Subtract_VectorVector", (Native)&UKismetMathLibrary::execSubtract_VectorVector },
			{ "Tan", (Native)&UKismetMathLibrary::execTan },
			{ "TEase", (Native)&UKismetMathLibrary::execTEase },
			{ "TimespanFromString", (Native)&UKismetMathLibrary::execTimespanFromString },
			{ "TimespanMaxValue", (Native)&UKismetMathLibrary::execTimespanMaxValue },
			{ "TimespanMinValue", (Native)&UKismetMathLibrary::execTimespanMinValue },
			{ "TimespanRatio", (Native)&UKismetMathLibrary::execTimespanRatio },
			{ "TimespanZeroValue", (Native)&UKismetMathLibrary::execTimespanZeroValue },
			{ "TInterpTo", (Native)&UKismetMathLibrary::execTInterpTo },
			{ "TLerp", (Native)&UKismetMathLibrary::execTLerp },
			{ "Today", (Native)&UKismetMathLibrary::execToday },
			{ "TransformDirection", (Native)&UKismetMathLibrary::execTransformDirection },
			{ "TransformLocation", (Native)&UKismetMathLibrary::execTransformLocation },
			{ "TransformRotation", (Native)&UKismetMathLibrary::execTransformRotation },
			{ "UtcNow", (Native)&UKismetMathLibrary::execUtcNow },
			{ "VEase", (Native)&UKismetMathLibrary::execVEase },
			{ "Vector2DInterpTo", (Native)&UKismetMathLibrary::execVector2DInterpTo },
			{ "Vector2DInterpTo_Constant", (Native)&UKismetMathLibrary::execVector2DInterpTo_Constant },
			{ "VectorSpringInterp", (Native)&UKismetMathLibrary::execVectorSpringInterp },
			{ "VInterpTo", (Native)&UKismetMathLibrary::execVInterpTo },
			{ "VInterpTo_Constant", (Native)&UKismetMathLibrary::execVInterpTo_Constant },
			{ "VLerp", (Native)&UKismetMathLibrary::execVLerp },
			{ "VSize", (Native)&UKismetMathLibrary::execVSize },
			{ "VSize2D", (Native)&UKismetMathLibrary::execVSize2D },
			{ "VSize2DSquared", (Native)&UKismetMathLibrary::execVSize2DSquared },
			{ "VSizeSquared", (Native)&UKismetMathLibrary::execVSizeSquared },
			{ "Xor_IntInt", (Native)&UKismetMathLibrary::execXor_IntInt },
		};
		FNativeFunctionRegistrar::RegisterFunctions(Class, Funcs, ARRAY_COUNT(Funcs));
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs()
	{
		struct KismetMathLibrary_eventAbs_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAbs_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAbs_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "ABS" },
				{ "DisplayName", "Absolute (float)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the absolute (positive) value of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Abs", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAbs_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Abs_Int()
	{
		struct KismetMathLibrary_eventAbs_Int_Parms
		{
			int32 A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAbs_Int_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAbs_Int_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "ABS" },
				{ "DisplayName", "Absolute (int)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the absolute (positive) value of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Abs_Int", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAbs_Int_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Acos()
	{
		struct KismetMathLibrary_eventAcos_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAcos_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAcos_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "ACOS" },
				{ "DisplayName", "Acos (Radians)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse cosine (arccos) of A (result is in Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Acos", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAcos_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_ByteByte()
	{
		struct KismetMathLibrary_eventAdd_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_ByteByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "+" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "Byte + Byte" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Addition (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAdd_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_DateTimeTimespan()
	{
		struct KismetMathLibrary_eventAdd_DateTimeTimespan_Parms
		{
			FDateTime A;
			FTimespan B;
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_DateTimeTimespan_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_DateTimeTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_DateTimeTimespan_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "DateTime + Timespan" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Addition (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_DateTimeTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_DateTimeTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_FloatFloat()
	{
		struct KismetMathLibrary_eventAdd_FloatFloat_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "+" },
				{ "CPP_Default_B", "1.000000" },
				{ "DisplayName", "float + float" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Addition (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAdd_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_IntInt()
	{
		struct KismetMathLibrary_eventAdd_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "+" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "integer + integer" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Addition (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAdd_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_TimespanTimespan()
	{
		struct KismetMathLibrary_eventAdd_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_TimespanTimespan_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "Timespan + Timespan" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Addition (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DFloat()
	{
		struct KismetMathLibrary_eventAdd_Vector2DFloat_Parms
		{
			FVector2D A;
			float B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DFloat_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "vector2d + float" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Vector A added by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_Vector2DFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_Vector2DFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventAdd_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "vector2d + vector2d" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns addition of Vector A and Vector B (A + B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorFloat()
	{
		struct KismetMathLibrary_eventAdd_VectorFloat_Parms
		{
			FVector A;
			float B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorFloat_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "vector + float" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Adds a float to each component of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_VectorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_VectorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorInt()
	{
		struct KismetMathLibrary_eventAdd_VectorInt_Parms
		{
			FVector A;
			int32 B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorInt_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorInt_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "vector + int" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Adds an integer to each component of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_VectorInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_VectorInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Add_VectorVector()
	{
		struct KismetMathLibrary_eventAdd_VectorVector_Parms
		{
			FVector A;
			FVector B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAdd_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "+" },
				{ "DisplayName", "vector + vector" },
				{ "Keywords", "+ add plus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Vector addition" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Add_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventAdd_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_And_IntInt()
	{
		struct KismetMathLibrary_eventAnd_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAnd_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAnd_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAnd_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "&" },
				{ "DisplayName", "Bitwise AND" },
				{ "Keywords", "& and" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Bitwise AND (A & B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "And_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAnd_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Asin()
	{
		struct KismetMathLibrary_eventAsin_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAsin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAsin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "ASIN" },
				{ "DisplayName", "Asin (Radians)" },
				{ "Keywords", "sine" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse sine (arcsin) of A (result is in Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Asin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAsin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan()
	{
		struct KismetMathLibrary_eventAtan_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAtan_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAtan_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "DisplayName", "Atan (Radians)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse tan (atan) (result is in Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Atan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAtan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Atan2()
	{
		struct KismetMathLibrary_eventAtan2_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAtan2_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAtan2_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventAtan2_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "DisplayName", "Atan2 (Radians)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse tan (atan2) of A/B (result is in Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Atan2", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventAtan2_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMax()
	{
		struct KismetMathLibrary_eventBMax_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMax_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMax_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMax_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MAX" },
				{ "DisplayName", "Max (Byte)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the maximum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BMax", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBMax_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BMin()
	{
		struct KismetMathLibrary_eventBMin_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMin_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMin_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBMin_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MIN" },
				{ "DisplayName", "Min (Byte)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minimum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BMin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBMin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanAND()
	{
		struct KismetMathLibrary_eventBooleanAND_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanAND_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanAND_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanAND_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "AND" },
				{ "DisplayName", "AND Boolean" },
				{ "Keywords", "& and" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical AND of two values (A AND B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BooleanAND", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBooleanAND_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNAND()
	{
		struct KismetMathLibrary_eventBooleanNAND_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNAND_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNAND_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNAND_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNAND_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "NAND" },
				{ "DisplayName", "NAND Boolean" },
				{ "Keywords", "!& nand" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical NAND of two values (A AND B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BooleanNAND", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBooleanNAND_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanNOR()
	{
		struct KismetMathLibrary_eventBooleanNOR_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNOR_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNOR_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanNOR_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanNOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CompactNodeTitle", "NOR" },
				{ "DisplayName", "NOR Boolean" },
				{ "Keywords", "!^ nor" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical Not OR of two values (A NOR B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BooleanNOR", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBooleanNOR_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanOR()
	{
		struct KismetMathLibrary_eventBooleanOR_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanOR_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanOR_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanOR_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "OR" },
				{ "DisplayName", "OR Boolean" },
				{ "Keywords", "| or" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical OR of two values (A OR B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BooleanOR", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBooleanOR_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BooleanXOR()
	{
		struct KismetMathLibrary_eventBooleanXOR_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanXOR_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanXOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanXOR_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanXOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventBooleanXOR_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventBooleanXOR_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CompactNodeTitle", "XOR" },
				{ "DisplayName", "XOR Boolean" },
				{ "Keywords", "^ xor" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical eXclusive OR of two values (A XOR B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BooleanXOR", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventBooleanXOR_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakColor()
	{
		struct KismetMathLibrary_eventBreakColor_Parms
		{
			FLinearColor InColor;
			float R;
			float G;
			float B;
			float A;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakColor_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakColor_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_G = { UE4CodeGen_Private::EPropertyClass::Float, "G", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakColor_Parms, G), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_R = { UE4CodeGen_Private::EPropertyClass::Float, "R", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakColor_Parms, R), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InColor_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InColor = { UE4CodeGen_Private::EPropertyClass::Struct, "InColor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000082, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakColor_Parms, InColor), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(NewProp_InColor_MetaData, ARRAY_COUNT(NewProp_InColor_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_G,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_R,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InColor,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Breaks apart a color into individual RGB components (as well as alpha)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakDateTime()
	{
		struct KismetMathLibrary_eventBreakDateTime_Parms
		{
			FDateTime InDateTime;
			int32 Year;
			int32 Month;
			int32 Day;
			int32 Hour;
			int32 Minute;
			int32 Second;
			int32 Millisecond;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Millisecond = { UE4CodeGen_Private::EPropertyClass::Int, "Millisecond", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Millisecond), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Second = { UE4CodeGen_Private::EPropertyClass::Int, "Second", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Second), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minute = { UE4CodeGen_Private::EPropertyClass::Int, "Minute", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Minute), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hour = { UE4CodeGen_Private::EPropertyClass::Int, "Hour", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Hour), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Day = { UE4CodeGen_Private::EPropertyClass::Int, "Day", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Day), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Month = { UE4CodeGen_Private::EPropertyClass::Int, "Month", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Month), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Year = { UE4CodeGen_Private::EPropertyClass::Int, "Year", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, Year), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InDateTime = { UE4CodeGen_Private::EPropertyClass::Struct, "InDateTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakDateTime_Parms, InDateTime), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Millisecond,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Second,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minute,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hour,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Day,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Month,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Year,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InDateTime,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a DateTime into its components" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRandomStream()
	{
		struct KismetMathLibrary_eventBreakRandomStream_Parms
		{
			FRandomStream InRandomStream;
			int32 InitialSeed;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InitialSeed = { UE4CodeGen_Private::EPropertyClass::Int, "InitialSeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRandomStream_Parms, InitialSeed), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InRandomStream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRandomStream = { UE4CodeGen_Private::EPropertyClass::Struct, "InRandomStream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRandomStream_Parms, InRandomStream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_InRandomStream_MetaData, ARRAY_COUNT(NewProp_InRandomStream_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InitialSeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRandomStream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks apart a random number generator" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakRandomStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakRandomStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotator()
	{
		struct KismetMathLibrary_eventBreakRotator_Parms
		{
			FRotator InRot;
			float Roll;
			float Pitch;
			float Yaw;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Yaw_MetaData[] = {
				{ "DisplayName", "Z (Yaw)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Yaw = { UE4CodeGen_Private::EPropertyClass::Float, "Yaw", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotator_Parms, Yaw), METADATA_PARAMS(NewProp_Yaw_MetaData, ARRAY_COUNT(NewProp_Yaw_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Pitch_MetaData[] = {
				{ "DisplayName", "Y (Pitch)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Pitch = { UE4CodeGen_Private::EPropertyClass::Float, "Pitch", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotator_Parms, Pitch), METADATA_PARAMS(NewProp_Pitch_MetaData, ARRAY_COUNT(NewProp_Pitch_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Roll_MetaData[] = {
				{ "DisplayName", "X (Roll)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Roll = { UE4CodeGen_Private::EPropertyClass::Float, "Roll", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotator_Parms, Roll), METADATA_PARAMS(NewProp_Roll_MetaData, ARRAY_COUNT(NewProp_Roll_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InRot_MetaData[] = {
				{ "DisplayName", "Rotation" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotator_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(NewProp_InRot_MetaData, ARRAY_COUNT(NewProp_InRot_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Yaw,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Pitch,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Roll,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "rotation rotate rotator breakrotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks apart a rotator into {Roll, Pitch, Yaw} angles in degrees" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakRotIntoAxes()
	{
		struct KismetMathLibrary_eventBreakRotIntoAxes_Parms
		{
			FRotator InRot;
			FVector X;
			FVector Y;
			FVector Z;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotIntoAxes_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotIntoAxes_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotIntoAxes_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InRot_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakRotIntoAxes_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(NewProp_InRot_MetaData, ARRAY_COUNT(NewProp_InRot_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "rotation rotate rotator breakrotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Breaks apart a rotator into its component axes" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakRotIntoAxes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakRotIntoAxes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan()
	{
		struct KismetMathLibrary_eventBreakTimespan_Parms
		{
			FTimespan InTimespan;
			int32 Days;
			int32 Hours;
			int32 Minutes;
			int32 Seconds;
			int32 Milliseconds;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Milliseconds = { UE4CodeGen_Private::EPropertyClass::Int, "Milliseconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, Milliseconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Seconds = { UE4CodeGen_Private::EPropertyClass::Int, "Seconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, Seconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minutes = { UE4CodeGen_Private::EPropertyClass::Int, "Minutes", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, Minutes), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hours = { UE4CodeGen_Private::EPropertyClass::Int, "Hours", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, Hours), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Days = { UE4CodeGen_Private::EPropertyClass::Int, "Days", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, Days), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InTimespan = { UE4CodeGen_Private::EPropertyClass::Struct, "InTimespan", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan_Parms, InTimespan), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Milliseconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Seconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minutes,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hours,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Days,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InTimespan,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a Timespan into its components" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan2()
	{
		struct KismetMathLibrary_eventBreakTimespan2_Parms
		{
			FTimespan InTimespan;
			int32 Days;
			int32 Hours;
			int32 Minutes;
			int32 Seconds;
			int32 FractionNano;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_FractionNano = { UE4CodeGen_Private::EPropertyClass::Int, "FractionNano", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, FractionNano), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Seconds = { UE4CodeGen_Private::EPropertyClass::Int, "Seconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, Seconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minutes = { UE4CodeGen_Private::EPropertyClass::Int, "Minutes", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, Minutes), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hours = { UE4CodeGen_Private::EPropertyClass::Int, "Hours", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, Hours), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Days = { UE4CodeGen_Private::EPropertyClass::Int, "Days", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, Days), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InTimespan = { UE4CodeGen_Private::EPropertyClass::Struct, "InTimespan", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTimespan2_Parms, InTimespan), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FractionNano,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Seconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minutes,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hours,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Days,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InTimespan,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a Timespan into its components" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakTimespan2", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakTimespan2_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakTransform()
	{
		struct KismetMathLibrary_eventBreakTransform_Parms
		{
			FTransform InTransform;
			FVector Location;
			FRotator Rotation;
			FVector Scale;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Scale = { UE4CodeGen_Private::EPropertyClass::Struct, "Scale", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTransform_Parms, Scale), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Rotation = { UE4CodeGen_Private::EPropertyClass::Struct, "Rotation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTransform_Parms, Rotation), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Location = { UE4CodeGen_Private::EPropertyClass::Struct, "Location", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTransform_Parms, Location), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InTransform_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InTransform = { UE4CodeGen_Private::EPropertyClass::Struct, "InTransform", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakTransform_Parms, InTransform), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_InTransform_MetaData, ARRAY_COUNT(NewProp_InTransform_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Scale,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Rotation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Location,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InTransform,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks apart a transform into location, rotation and scale" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector()
	{
		struct KismetMathLibrary_eventBreakVector_Parms
		{
			FVector InVec;
			float X;
			float Y;
			float Z;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Float, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector_Parms, Z), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Float, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector_Parms, Y), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Float, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector_Parms, X), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVec = { UE4CodeGen_Private::EPropertyClass::Struct, "InVec", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector_Parms, InVec), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVec,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a vector apart into X, Y, Z" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_BreakVector2D()
	{
		struct KismetMathLibrary_eventBreakVector2D_Parms
		{
			FVector2D InVec;
			float X;
			float Y;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Float, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector2D_Parms, Y), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Float, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector2D_Parms, X), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVec = { UE4CodeGen_Private::EPropertyClass::Struct, "InVec", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventBreakVector2D_Parms, InVec), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVec,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a 2D vector apart into X, Y." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "BreakVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventBreakVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_CInterpTo()
	{
		struct KismetMathLibrary_eventCInterpTo_Parms
		{
			FLinearColor Current;
			FLinearColor Target;
			float DeltaTime;
			float InterpSpeed;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCInterpTo_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCInterpTo_Parms, Target), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCInterpTo_Parms, Current), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "color" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Interpolates towards a varying target color smoothly.\n\n@param               Current                 Current Color\n@param               Target                  Target Color\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated Color" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "CInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventCInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Clamp()
	{
		struct KismetMathLibrary_eventClamp_Parms
		{
			int32 Value;
			int32 Min;
			int32 Max;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClamp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClamp_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Int, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClamp_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Int, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClamp_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "DisplayName", "Clamp (int)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Value clamped to be between A and B (inclusive)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Clamp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventClamp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAngle()
	{
		struct KismetMathLibrary_eventClampAngle_Parms
		{
			float AngleDegrees;
			float MinAngleDegrees;
			float MaxAngleDegrees;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAngle_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxAngleDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MaxAngleDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAngle_Parms, MaxAngleDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MinAngleDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MinAngleDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAngle_Parms, MinAngleDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_AngleDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "AngleDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAngle_Parms, AngleDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxAngleDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MinAngleDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_AngleDegrees,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Clamp Angle" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Clamps an arbitrary angle to be between the given angles.  Will clamp to nearest boundary.\n\n@param MinAngleDegrees       \"from\" angle that defines the beginning of the range of valid angles (sweeping clockwise)\n@param MaxAngleDegrees       \"to\" angle that defines the end of the range of valid angles\n@return Returns clamped angle in the range -180..180." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ClampAngle", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventClampAngle_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampAxis()
	{
		struct KismetMathLibrary_eventClampAxis_Parms
		{
			float Angle;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAxis_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Angle = { UE4CodeGen_Private::EPropertyClass::Float, "Angle", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampAxis_Parms, Angle), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Angle,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Clamps an angle to the range of [0, 360].\n\n@param Angle The angle to clamp.\n@return The clamped angle." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ClampAxis", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventClampAxis_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClampVectorSize()
	{
		struct KismetMathLibrary_eventClampVectorSize_Parms
		{
			FVector A;
			float Min;
			float Max;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampVectorSize_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Float, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampVectorSize_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Float, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampVectorSize_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClampVectorSize_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Clamp the vector size between a min and max length" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ClampVectorSize", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventClampVectorSize_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ClassIsChildOf()
	{
		struct KismetMathLibrary_eventClassIsChildOf_Parms
		{
			TSubclassOf<UObject>  TestClass;
			TSubclassOf<UObject>  ParentClass;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventClassIsChildOf_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventClassIsChildOf_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_ParentClass = { UE4CodeGen_Private::EPropertyClass::Class, "ParentClass", RF_Public|RF_Transient|RF_MarkAsNative, 0x0014000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClassIsChildOf_Parms, ParentClass), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_TestClass = { UE4CodeGen_Private::EPropertyClass::Class, "TestClass", RF_Public|RF_Transient|RF_MarkAsNative, 0x0014000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventClassIsChildOf_Parms, TestClass), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ParentClass,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_TestClass,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Determine if a class is a child of another class.\n\n@return      true if TestClass == ParentClass, or if TestClass is a child of ParentClass; false otherwise, or if either\n                     the value for either parameter is 'None'." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ClassIsChildOf", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventClassIsChildOf_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeRotators()
	{
		struct KismetMathLibrary_eventComposeRotators_Parms
		{
			FRotator A;
			FRotator B;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeRotators_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeRotators_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeRotators_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "CombineRotators" },
				{ "Keywords", "rotate rotation add" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Combine 2 rotations to give you the resulting rotation of first applying A, then B." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ComposeRotators", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventComposeRotators_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ComposeTransforms()
	{
		struct KismetMathLibrary_eventComposeTransforms_Parms
		{
			FTransform A;
			FTransform B;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeTransforms_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeTransforms_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventComposeTransforms_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "multiply *" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Compose two transforms in order: A * B.\n\nOrder matters when composing transforms:\nA * B will yield a transform that logically first applies A then B to any subsequent transformation.\n\nExample: LocalToWorld = ComposeTransforms(DeltaRotation, LocalToWorld) will change rotation in local space by DeltaRotation.\nExample: LocalToWorld = ComposeTransforms(LocalToWorld, DeltaRotation) will change rotation in world space by DeltaRotation.\n\n@return New transform: A * B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ComposeTransforms", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventComposeTransforms_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToByte()
	{
		struct KismetMathLibrary_eventConv_BoolToByte_Parms
		{
			bool InBool;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_BoolToByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InBool_SetBit = [](void* Obj){ ((KismetMathLibrary_eventConv_BoolToByte_Parms*)Obj)->InBool = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InBool = { UE4CodeGen_Private::EPropertyClass::Bool, "InBool", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventConv_BoolToByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InBool_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InBool,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToByte (bool)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a bool to a byte" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_BoolToByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_BoolToByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToFloat()
	{
		struct KismetMathLibrary_eventConv_BoolToFloat_Parms
		{
			bool InBool;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_BoolToFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InBool_SetBit = [](void* Obj){ ((KismetMathLibrary_eventConv_BoolToFloat_Parms*)Obj)->InBool = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InBool = { UE4CodeGen_Private::EPropertyClass::Bool, "InBool", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventConv_BoolToFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InBool_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InBool,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToFloat (bool)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a bool to a float (0.0f or 1.0f)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_BoolToFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_BoolToFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToInt()
	{
		struct KismetMathLibrary_eventConv_BoolToInt_Parms
		{
			bool InBool;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_BoolToInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InBool_SetBit = [](void* Obj){ ((KismetMathLibrary_eventConv_BoolToInt_Parms*)Obj)->InBool = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InBool = { UE4CodeGen_Private::EPropertyClass::Bool, "InBool", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventConv_BoolToInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InBool_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InBool,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToInt (bool)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a bool to an int" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_BoolToInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_BoolToInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToFloat()
	{
		struct KismetMathLibrary_eventConv_ByteToFloat_Parms
		{
			uint8 InByte;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ByteToFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_InByte = { UE4CodeGen_Private::EPropertyClass::Byte, "InByte", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ByteToFloat_Parms, InByte), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InByte,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToFloat (byte)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a byte to a float" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_ByteToFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_ByteToFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToInt()
	{
		struct KismetMathLibrary_eventConv_ByteToInt_Parms
		{
			uint8 InByte;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ByteToInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_InByte = { UE4CodeGen_Private::EPropertyClass::Byte, "InByte", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ByteToInt_Parms, InByte), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InByte,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToInt (byte)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a byte to an integer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_ByteToInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_ByteToInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_ColorToLinearColor()
	{
		struct KismetMathLibrary_eventConv_ColorToLinearColor_Parms
		{
			FColor InColor;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ColorToLinearColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InColor = { UE4CodeGen_Private::EPropertyClass::Struct, "InColor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_ColorToLinearColor_Parms, InColor), Z_Construct_UScriptStruct_FColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InColor,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToLinearColor (color)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a color to LinearColor" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_ColorToLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_ColorToLinearColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToLinearColor()
	{
		struct KismetMathLibrary_eventConv_FloatToLinearColor_Parms
		{
			float InFloat;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_FloatToLinearColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InFloat = { UE4CodeGen_Private::EPropertyClass::Float, "InFloat", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_FloatToLinearColor_Parms, InFloat), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InFloat,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToLinearColor (float)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert a float into a LinearColor, where each element is that float" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_FloatToLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_FloatToLinearColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToVector()
	{
		struct KismetMathLibrary_eventConv_FloatToVector_Parms
		{
			float InFloat;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_FloatToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InFloat = { UE4CodeGen_Private::EPropertyClass::Float, "InFloat", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_FloatToVector_Parms, InFloat), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InFloat,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToVector (float)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert a float into a vector, where each element is that float" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_FloatToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_FloatToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToBool()
	{
		struct KismetMathLibrary_eventConv_IntToBool_Parms
		{
			int32 InInt;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventConv_IntToBool_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventConv_IntToBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InInt = { UE4CodeGen_Private::EPropertyClass::Int, "InInt", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToBool_Parms, InInt), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InInt,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToBool (int)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a int to a bool" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_IntToBool", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_IntToBool_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToByte()
	{
		struct KismetMathLibrary_eventConv_IntToByte_Parms
		{
			int32 InInt;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InInt = { UE4CodeGen_Private::EPropertyClass::Int, "InInt", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToByte_Parms, InInt), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InInt,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToByte (int)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts an integer to a byte (if the integer is too large, returns the low 8 bits)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_IntToByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_IntToByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToFloat()
	{
		struct KismetMathLibrary_eventConv_IntToFloat_Parms
		{
			int32 InInt;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InInt = { UE4CodeGen_Private::EPropertyClass::Int, "InInt", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToFloat_Parms, InInt), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InInt,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToFloat (int)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts an integer to a float" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_IntToFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventConv_IntToFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToIntVector()
	{
		struct KismetMathLibrary_eventConv_IntToIntVector_Parms
		{
			int32 InInt;
			FIntVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToIntVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FIntVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InInt = { UE4CodeGen_Private::EPropertyClass::Int, "InInt", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntToIntVector_Parms, InInt), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InInt,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToIntVector (int)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts an integer to an IntVector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_IntToIntVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_IntToIntVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_IntVectorToVector()
	{
		struct KismetMathLibrary_eventConv_IntVectorToVector_Parms
		{
			FIntVector InIntVector;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntVectorToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InIntVector_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InIntVector = { UE4CodeGen_Private::EPropertyClass::Struct, "InIntVector", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_IntVectorToVector_Parms, InIntVector), Z_Construct_UScriptStruct_FIntVector, METADATA_PARAMS(NewProp_InIntVector_MetaData, ARRAY_COUNT(NewProp_InIntVector_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InIntVector,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToVector (IntVector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert an IntVector to a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_IntVectorToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventConv_IntVectorToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToColor()
	{
		struct KismetMathLibrary_eventConv_LinearColorToColor_Parms
		{
			FLinearColor InLinearColor;
			FColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_LinearColorToColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InLinearColor = { UE4CodeGen_Private::EPropertyClass::Struct, "InLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_LinearColorToColor_Parms, InLinearColor), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InLinearColor,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToColor (linear color)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a LinearColor to a color" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_LinearColorToColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_LinearColorToColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToVector()
	{
		struct KismetMathLibrary_eventConv_LinearColorToVector_Parms
		{
			FLinearColor InLinearColor;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_LinearColorToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InLinearColor = { UE4CodeGen_Private::EPropertyClass::Struct, "InLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_LinearColorToVector_Parms, InLinearColor), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InLinearColor,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToVector (linear color)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a LinearColor to a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_LinearColorToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_LinearColorToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_RotatorToVector()
	{
		struct KismetMathLibrary_eventConv_RotatorToVector_Parms
		{
			FRotator InRot;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_RotatorToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_RotatorToVector_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "GetRotationXVector" },
				{ "Keywords", "rotation rotate cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Get the X direction vector after this rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_RotatorToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_RotatorToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_Vector2DToVector()
	{
		struct KismetMathLibrary_eventConv_Vector2DToVector_Parms
		{
			FVector2D InVector2D;
			float Z;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_Vector2DToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Float, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_Vector2DToVector_Parms, Z), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVector2D = { UE4CodeGen_Private::EPropertyClass::Struct, "InVector2D", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_Vector2DToVector_Parms, InVector2D), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVector2D,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "CPP_Default_Z", "0.000000" },
				{ "DisplayName", "ToVector (Vector2D)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert a Vector2D to a Vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_Vector2DToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_Vector2DToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToLinearColor()
	{
		struct KismetMathLibrary_eventConv_VectorToLinearColor_Parms
		{
			FVector InVec;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToLinearColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVec = { UE4CodeGen_Private::EPropertyClass::Struct, "InVec", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToLinearColor_Parms, InVec), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVec,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToLinearColor (vector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a vector to LinearColor" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_VectorToLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_VectorToLinearColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToRotator()
	{
		struct KismetMathLibrary_eventConv_VectorToRotator_Parms
		{
			FVector InVec;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVec = { UE4CodeGen_Private::EPropertyClass::Struct, "InVec", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToRotator_Parms, InVec), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVec,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "RotationFromXVector" },
				{ "Keywords", "rotation rotate cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Create a rotator which orients X along the supplied direction vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_VectorToRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_VectorToRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToTransform()
	{
		struct KismetMathLibrary_eventConv_VectorToTransform_Parms
		{
			FVector InLocation;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToTransform_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InLocation = { UE4CodeGen_Private::EPropertyClass::Struct, "InLocation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToTransform_Parms, InLocation), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InLocation,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToTransform (vector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert a vector to a transform. Uses vector as location" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_VectorToTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_VectorToTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToVector2D()
	{
		struct KismetMathLibrary_eventConv_VectorToVector2D_Parms
		{
			FVector InVector;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVector = { UE4CodeGen_Private::EPropertyClass::Struct, "InVector", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConv_VectorToVector2D_Parms, InVector), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVector,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Conversions" },
				{ "CompactNodeTitle", "->" },
				{ "DisplayName", "ToVector2D (Vector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Convert a Vector to a Vector2D" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Conv_VectorToVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventConv_VectorToVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ConvertTransformToRelative()
	{
		struct KismetMathLibrary_eventConvertTransformToRelative_Parms
		{
			FTransform Transform;
			FTransform ParentTransform;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConvertTransformToRelative_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ParentTransform_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ParentTransform = { UE4CodeGen_Private::EPropertyClass::Struct, "ParentTransform", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConvertTransformToRelative_Parms, ParentTransform), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_ParentTransform_MetaData, ARRAY_COUNT(NewProp_ParentTransform_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Transform_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Transform = { UE4CodeGen_Private::EPropertyClass::Struct, "Transform", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventConvertTransformToRelative_Parms, Transform), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_Transform_MetaData, ARRAY_COUNT(NewProp_Transform_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ParentTransform,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Transform,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the given transform, converted to be relative to the given ParentTransform.\n\nExample: AToB = ConvertTransformToRelative(AToWorld, BToWorld) to compute A relative to B.\n\n@param               Transform               The transform you wish to convert\n@param               ParentTransform The transform the conversion is relative to (in the same space as Transform)\n@return              The new relative transform" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ConvertTransformToRelative", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventConvertTransformToRelative_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cos()
	{
		struct KismetMathLibrary_eventCos_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCos_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCos_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "COS" },
				{ "DisplayName", "Cos (Radians)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the cosine of A (expects Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Cos", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventCos_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_CreateVectorFromYawPitch()
	{
		struct KismetMathLibrary_eventCreateVectorFromYawPitch_Parms
		{
			float Yaw;
			float Pitch;
			float Length;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCreateVectorFromYawPitch_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Length = { UE4CodeGen_Private::EPropertyClass::Float, "Length", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCreateVectorFromYawPitch_Parms, Length), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Pitch = { UE4CodeGen_Private::EPropertyClass::Float, "Pitch", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCreateVectorFromYawPitch_Parms, Pitch), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Yaw = { UE4CodeGen_Private::EPropertyClass::Float, "Yaw", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCreateVectorFromYawPitch_Parms, Yaw), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Length,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Pitch,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Yaw,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CPP_Default_Length", "1.000000" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Creates a directional vector from rotation values {Pitch, Yaw} supplied in degrees with specified Length" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "CreateVectorFromYawPitch", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventCreateVectorFromYawPitch_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Cross_VectorVector()
	{
		struct KismetMathLibrary_eventCross_VectorVector_Parms
		{
			FVector A;
			FVector B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCross_VectorVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCross_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCross_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "cross" },
				{ "DisplayName", "Cross Product" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the cross product of two 3d vectors" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Cross_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventCross_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_CrossProduct2D()
	{
		struct KismetMathLibrary_eventCrossProduct2D_Parms
		{
			FVector2D A;
			FVector2D B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCrossProduct2D_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCrossProduct2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventCrossProduct2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "cross" },
				{ "DisplayName", "Cross Product (2D)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the cross product of two 2d vectors" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "CrossProduct2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventCrossProduct2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromIsoString()
	{
		struct KismetMathLibrary_eventDateTimeFromIsoString_Parms
		{
			FString IsoString;
			FDateTime Result;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventDateTimeFromIsoString_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventDateTimeFromIsoString_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Result = { UE4CodeGen_Private::EPropertyClass::Struct, "Result", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeFromIsoString_Parms, Result), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_IsoString = { UE4CodeGen_Private::EPropertyClass::Str, "IsoString", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeFromIsoString_Parms, IsoString), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Result,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IsoString,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a date string in ISO-8601 format to a DateTime object" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DateTimeFromIsoString", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventDateTimeFromIsoString_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromString()
	{
		struct KismetMathLibrary_eventDateTimeFromString_Parms
		{
			FString DateTimeString;
			FDateTime Result;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventDateTimeFromString_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventDateTimeFromString_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Result = { UE4CodeGen_Private::EPropertyClass::Struct, "Result", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeFromString_Parms, Result), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_DateTimeString = { UE4CodeGen_Private::EPropertyClass::Str, "DateTimeString", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeFromString_Parms, DateTimeString), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Result,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DateTimeString,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a date string to a DateTime object" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DateTimeFromString", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventDateTimeFromString_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMaxValue()
	{
		struct KismetMathLibrary_eventDateTimeMaxValue_Parms
		{
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeMaxValue_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "MaxValue" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the maximum date and time value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DateTimeMaxValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDateTimeMaxValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DateTimeMinValue()
	{
		struct KismetMathLibrary_eventDateTimeMinValue_Parms
		{
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDateTimeMinValue_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "MinValue" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minimum date and time value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DateTimeMinValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDateTimeMinValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInMonth()
	{
		struct KismetMathLibrary_eventDaysInMonth_Parms
		{
			int32 Year;
			int32 Month;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDaysInMonth_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Month = { UE4CodeGen_Private::EPropertyClass::Int, "Month", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDaysInMonth_Parms, Month), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Year = { UE4CodeGen_Private::EPropertyClass::Int, "Year", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDaysInMonth_Parms, Year), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Month,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Year,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "DaysInMonth" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the number of days in the given year and month" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DaysInMonth", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDaysInMonth_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DaysInYear()
	{
		struct KismetMathLibrary_eventDaysInYear_Parms
		{
			int32 Year;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDaysInYear_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Year = { UE4CodeGen_Private::EPropertyClass::Int, "Year", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDaysInYear_Parms, Year), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Year,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "DaysInYear" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the number of days in the given year" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DaysInYear", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDaysInYear_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAcos()
	{
		struct KismetMathLibrary_eventDegAcos_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAcos_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAcos_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "ACOSd" },
				{ "DisplayName", "Acos (Degrees)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse cos (arccos) of A (result is in Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegAcos", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegAcos_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAsin()
	{
		struct KismetMathLibrary_eventDegAsin_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAsin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAsin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "ASINd" },
				{ "DisplayName", "Asin (Degrees)" },
				{ "Keywords", "sine" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse sin (arcsin) of A (result is in Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegAsin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegAsin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan()
	{
		struct KismetMathLibrary_eventDegAtan_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAtan_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAtan_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "DisplayName", "Atan (Degrees)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse tan (atan) (result is in Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegAtan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegAtan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegAtan2()
	{
		struct KismetMathLibrary_eventDegAtan2_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAtan2_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAtan2_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegAtan2_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "DisplayName", "Atan2 (Degrees)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse tan (atan2) of A/B (result is in Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegAtan2", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegAtan2_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegCos()
	{
		struct KismetMathLibrary_eventDegCos_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegCos_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegCos_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "COSd" },
				{ "DisplayName", "Cos (Degrees)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the cos of A (expects Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegCos", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegCos_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegreesToRadians()
	{
		struct KismetMathLibrary_eventDegreesToRadians_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegreesToRadians_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegreesToRadians_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "D2R" },
				{ "DisplayName", "Degrees To Radians" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns radians value based on the input degrees" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegreesToRadians", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegreesToRadians_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegSin()
	{
		struct KismetMathLibrary_eventDegSin_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegSin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegSin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "SINd" },
				{ "DisplayName", "Sin (Degrees)" },
				{ "Keywords", "sine" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the sin of A (expects Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegSin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegSin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DegTan()
	{
		struct KismetMathLibrary_eventDegTan_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegTan_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDegTan_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "TANd" },
				{ "DisplayName", "Tan (Degrees)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the tan of A (expects Degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DegTan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDegTan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_ByteByte()
	{
		struct KismetMathLibrary_eventDivide_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_ByteByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "Byte / Byte" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Division (A / B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDivide_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_FloatFloat()
	{
		struct KismetMathLibrary_eventDivide_FloatFloat_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1.000000" },
				{ "CustomThunk", "true" },
				{ "DisplayName", "float / float" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Division (A / B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDivide_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_IntInt()
	{
		struct KismetMathLibrary_eventDivide_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "integer / integer" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Division (A / B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventDivide_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_TimespanFloat()
	{
		struct KismetMathLibrary_eventDivide_TimespanFloat_Parms
		{
			FTimespan A;
			float Scalar;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_TimespanFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Scalar = { UE4CodeGen_Private::EPropertyClass::Float, "Scalar", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_TimespanFloat_Parms, Scalar), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_TimespanFloat_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Scalar,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "/" },
				{ "DisplayName", "Timespan * float" },
				{ "Keywords", "/ divide" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Scalar division (A * s)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_TimespanFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_TimespanFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DFloat()
	{
		struct KismetMathLibrary_eventDivide_Vector2DFloat_Parms
		{
			FVector2D A;
			float B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DFloat_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1.000000" },
				{ "DisplayName", "vector2d / float" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Vector A divided by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_Vector2DFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_Vector2DFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventDivide_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "/" },
				{ "DisplayName", "vector2d / vector2d" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise Vector divide (Result = {A.x/B.x, A.y/B.y})" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorFloat()
	{
		struct KismetMathLibrary_eventDivide_VectorFloat_Parms
		{
			FVector A;
			float B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorFloat_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1.000000" },
				{ "DisplayName", "vector / float" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Vector divide by a float" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_VectorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_VectorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorInt()
	{
		struct KismetMathLibrary_eventDivide_VectorInt_Parms
		{
			FVector A;
			int32 B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorInt_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorInt_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "vector / int" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Vector divide by an integer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_VectorInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_VectorInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorVector()
	{
		struct KismetMathLibrary_eventDivide_VectorVector_Parms
		{
			FVector A;
			FVector B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDivide_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "/" },
				{ "CPP_Default_B", "1.000000,1.000000,1.000000" },
				{ "DisplayName", "vector / vector" },
				{ "Keywords", "/ divide division" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise Vector division (Result = {A.x/B.x, A.y/B.y, A.z/B.z})" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Divide_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDivide_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Dot_VectorVector()
	{
		struct KismetMathLibrary_eventDot_VectorVector_Parms
		{
			FVector A;
			FVector B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDot_VectorVector_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDot_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDot_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "dot" },
				{ "DisplayName", "Dot Product" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the dot product of two 3d vectors" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Dot_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDot_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_DotProduct2D()
	{
		struct KismetMathLibrary_eventDotProduct2D_Parms
		{
			FVector2D A;
			FVector2D B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDotProduct2D_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDotProduct2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventDotProduct2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "dot" },
				{ "DisplayName", "Dot Product (2D)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the dot product of two 2d vectors" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "DotProduct2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventDotProduct2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Ease()
	{
		struct KismetMathLibrary_eventEase_Parms
		{
			float A;
			float B;
			float Alpha;
			TEnumAsByte<EEasingFunc::Type> EasingFunc;
			float BlendExp;
			int32 Steps;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Steps = { UE4CodeGen_Private::EPropertyClass::Int, "Steps", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, Steps), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_BlendExp = { UE4CodeGen_Private::EPropertyClass::Float, "BlendExp", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, BlendExp), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_EasingFunc = { UE4CodeGen_Private::EPropertyClass::Byte, "EasingFunc", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, EasingFunc), Z_Construct_UEnum_Engine_EEasingFunc, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEase_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Steps,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BlendExp,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_EasingFunc,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintInternalUseOnly", "true" },
				{ "Category", "Math|Interpolation" },
				{ "CPP_Default_BlendExp", "2.000000" },
				{ "CPP_Default_Steps", "2" },
				{ "DisplayName", "Ease" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Easeing  between A and B using a specified easing function" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Ease", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEase_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_BoolBool()
	{
		struct KismetMathLibrary_eventEqualEqual_BoolBool_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_BoolBool_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_BoolBool_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_BoolBool_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal Boolean" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_BoolBool", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_BoolBool_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ByteByte()
	{
		struct KismetMathLibrary_eventEqualEqual_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (Byte)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is equal to B (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ClassClass()
	{
		struct KismetMathLibrary_eventEqualEqual_ClassClass_Parms
		{
			UClass* A;
			UClass* B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_ClassClass_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_ClassClass_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Class, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ClassClass_Parms, B), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Class, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ClassClass_Parms, A), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (Class)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_ClassClass", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_ClassClass_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (DateTime)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventEqualEqual_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_FloatFloat()
	{
		struct KismetMathLibrary_eventEqualEqual_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (float)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is exactly equal to B (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_IntInt()
	{
		struct KismetMathLibrary_eventEqualEqual_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (integer)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is equal to B (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_NameName()
	{
		struct KismetMathLibrary_eventEqualEqual_NameName_Parms
		{
			FName A;
			FName B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_NameName_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_NameName_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FNamePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Name, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_NameName_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FNamePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Name, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_NameName_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities|Name" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (Name)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_NameName", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_NameName_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ObjectObject()
	{
		struct KismetMathLibrary_eventEqualEqual_ObjectObject_Parms
		{
			UObject* A;
			UObject* B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_ObjectObject_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_ObjectObject_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Object, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ObjectObject_Parms, B), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Object, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_ObjectObject_Parms, A), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (Object)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_ObjectObject", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventEqualEqual_ObjectObject_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_RotatorRotator()
	{
		struct KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms
		{
			FRotator A;
			FRotator B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "CompactNodeTitle", "==" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Equal (Rotator)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if rotator A is equal to rotator B (A == B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_RotatorRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventEqualEqual_RotatorRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TimespanTimespan()
	{
		struct KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal (Timespan)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are equal (A == B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventEqualEqual_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TransformTransform()
	{
		struct KismetMathLibrary_eventEqualEqual_TransformTransform_Parms
		{
			FTransform A;
			FTransform B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_TransformTransform_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_TransformTransform_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_TransformTransform_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_TransformTransform_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "CompactNodeTitle", "==" },
				{ "DisplayName", "Equal Transform" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if transform A is equal to transform B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_TransformTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventEqualEqual_TransformTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "==" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Equal (vector2D)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if vector2D A is equal to vector2D B (A == B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventEqualEqual_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_VectorVector()
	{
		struct KismetMathLibrary_eventEqualEqual_VectorVector_Parms
		{
			FVector A;
			FVector B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventEqualEqual_VectorVector_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventEqualEqual_VectorVector_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_VectorVector_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventEqualEqual_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "==" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Equal (vector)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if vector A is equal to vector B (A == B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "EqualEqual_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventEqualEqual_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Exp()
	{
		struct KismetMathLibrary_eventExp_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventExp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventExp_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "e" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns exponential(e) to the power A (e^A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Exp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventExp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FCeil()
	{
		struct KismetMathLibrary_eventFCeil_Parms
		{
			float A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFCeil_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFCeil_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rounds A to the smallest following integer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FCeil", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFCeil_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FClamp()
	{
		struct KismetMathLibrary_eventFClamp_Parms
		{
			float Value;
			float Min;
			float Max;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFClamp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Float, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFClamp_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Float, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFClamp_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFClamp_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Clamp (float)" },
				{ "Max", "1.0" },
				{ "Min", "0.0" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Value clamped between A and B (inclusive)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FClamp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFClamp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FFloor()
	{
		struct KismetMathLibrary_eventFFloor_Parms
		{
			float A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFFloor_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFFloor_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Floor" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rounds A to the largest previous integer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FFloor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFFloor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnLine()
	{
		struct KismetMathLibrary_eventFindClosestPointOnLine_Parms
		{
			FVector Point;
			FVector LineOrigin;
			FVector LineDirection;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnLine_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineDirection = { UE4CodeGen_Private::EPropertyClass::Struct, "LineDirection", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnLine_Parms, LineDirection), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineOrigin = { UE4CodeGen_Private::EPropertyClass::Struct, "LineOrigin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnLine_Parms, LineOrigin), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnLine_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineDirection,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineOrigin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the closest point on an infinite line to a given point.\n\n@param Point                 Point for which we find the closest point on the line.\n@param LineOrigin    Point of reference on the line.\n@param LineDirection Direction of the line. Not required to be normalized.\n@return The closest point on the line to the given point." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FindClosestPointOnLine", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFindClosestPointOnLine_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnSegment()
	{
		struct KismetMathLibrary_eventFindClosestPointOnSegment_Parms
		{
			FVector Point;
			FVector SegmentStart;
			FVector SegmentEnd;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnSegment_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SegmentEnd = { UE4CodeGen_Private::EPropertyClass::Struct, "SegmentEnd", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnSegment_Parms, SegmentEnd), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SegmentStart = { UE4CodeGen_Private::EPropertyClass::Struct, "SegmentStart", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnSegment_Parms, SegmentStart), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindClosestPointOnSegment_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SegmentEnd,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SegmentStart,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the closest point on a segment to a given point.\n\n@param Point                 Point for which we find the closest point on the segment.\n@param SegmentStart  Start of the segment.\n@param SegmentEnd    End of the segment.\n@return The closest point on the segment to the given point." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FindClosestPointOnSegment", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFindClosestPointOnSegment_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindLookAtRotation()
	{
		struct KismetMathLibrary_eventFindLookAtRotation_Parms
		{
			FVector Start;
			FVector Target;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindLookAtRotation_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Target_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindLookAtRotation_Parms, Target), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Target_MetaData, ARRAY_COUNT(NewProp_Target_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Start_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Start = { UE4CodeGen_Private::EPropertyClass::Struct, "Start", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindLookAtRotation_Parms, Start), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Start_MetaData, ARRAY_COUNT(NewProp_Start_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Start,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find a rotation for an object at Start location to point at Target location." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FindLookAtRotation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventFindLookAtRotation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FindNearestPointsOnLineSegments()
	{
		struct KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms
		{
			FVector Segment1Start;
			FVector Segment1End;
			FVector Segment2Start;
			FVector Segment2End;
			FVector Segment1Point;
			FVector Segment2Point;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment2Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment2Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment2Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment1Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment1Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment1Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment2End = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment2End", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment2End), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment2Start = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment2Start", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment2Start), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment1End = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment1End", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment1End), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Segment1Start = { UE4CodeGen_Private::EPropertyClass::Struct, "Segment1Start", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms, Segment1Start), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment2Point,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment1Point,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment2End,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment2Start,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment1End,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Segment1Start,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find closest points between 2 segments.\n\n@param       Segment1Start   Start of the 1st segment.\n@param       Segment1End             End of the 1st segment.\n@param       Segment2Start   Start of the 2nd segment.\n@param       Segment2End             End of the 2nd segment.\n@param       Segment1Point   Closest point on segment 1 to segment 2.\n@param       Segment2Point   Closest point on segment 2 to segment 1." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FindNearestPointsOnLineSegments", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventFindNearestPointsOnLineSegments_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpEaseInOut()
	{
		struct KismetMathLibrary_eventFInterpEaseInOut_Parms
		{
			float A;
			float B;
			float Alpha;
			float Exponent;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpEaseInOut_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Exponent = { UE4CodeGen_Private::EPropertyClass::Float, "Exponent", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpEaseInOut_Parms, Exponent), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpEaseInOut_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpEaseInOut_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpEaseInOut_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Exponent,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Interpolate between A and B, applying an ease in/out function.  Exp controls the degree of the curve." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FInterpEaseInOut", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFInterpEaseInOut_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo()
	{
		struct KismetMathLibrary_eventFInterpTo_Parms
		{
			float Current;
			float Target;
			float DeltaTime;
			float InterpSpeed;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Float, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Parms, Target), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Float, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Parms, Current), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target based on distance from Current position, giving a nice smooth feeling when tracking a position.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FInterpTo_Constant()
	{
		struct KismetMathLibrary_eventFInterpTo_Constant_Parms
		{
			float Current;
			float Target;
			float DeltaTime;
			float InterpSpeed;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Constant_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Constant_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Constant_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Float, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Constant_Parms, Target), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Float, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFInterpTo_Constant_Parms, Current), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target at a constant rate.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FInterpTo_Constant", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFInterpTo_Constant_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FixedTurn()
	{
		struct KismetMathLibrary_eventFixedTurn_Parms
		{
			float InCurrent;
			float InDesired;
			float InDeltaRate;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFixedTurn_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InDeltaRate = { UE4CodeGen_Private::EPropertyClass::Float, "InDeltaRate", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFixedTurn_Parms, InDeltaRate), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InDesired = { UE4CodeGen_Private::EPropertyClass::Float, "InDesired", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFixedTurn_Parms, InDesired), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InCurrent = { UE4CodeGen_Private::EPropertyClass::Float, "InCurrent", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFixedTurn_Parms, InCurrent), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InDeltaRate,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InDesired,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InCurrent,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a new rotation component value\n\n@param InCurrent is the current rotation value\n@param InDesired is the desired rotation value\n@param  is the rotation amount to apply\n\n@return a new rotation component value clamped in the range (-360,360)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FixedTurn", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFixedTurn_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FloatSpringInterp()
	{
		struct KismetMathLibrary_eventFloatSpringInterp_Parms
		{
			float Current;
			float Target;
			FFloatSpringState SpringState;
			float Stiffness;
			float CriticalDampingFactor;
			float DeltaTime;
			float Mass;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Mass = { UE4CodeGen_Private::EPropertyClass::Float, "Mass", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, Mass), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_CriticalDampingFactor = { UE4CodeGen_Private::EPropertyClass::Float, "CriticalDampingFactor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, CriticalDampingFactor), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Stiffness = { UE4CodeGen_Private::EPropertyClass::Float, "Stiffness", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, Stiffness), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SpringState = { UE4CodeGen_Private::EPropertyClass::Struct, "SpringState", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, SpringState), Z_Construct_UScriptStruct_FFloatSpringState, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Float, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, Target), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Float, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFloatSpringInterp_Parms, Current), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Mass,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_CriticalDampingFactor,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stiffness,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SpringState,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Spring" },
				{ "CPP_Default_Mass", "1.000000" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Uses a simple spring model to interpolate a float from Current to Target.\n\n@param Current                               Current value\n@param Target                                Target value\n@param SpringState                   Data related to spring model (velocity, error, etc..) - Create a unique variable per spring\n@param Stiffness                             How stiff the spring model is (more stiffness means more oscillation around the target value)\n@param CriticalDampingFactor How much damping to apply to the spring (0 means no damping, 1 means critically damped which means no oscillation)\n@param Mass                                  Multiplier that acts like mass on a spring" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FloatSpringInterp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04422401, sizeof(KismetMathLibrary_eventFloatSpringInterp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMax()
	{
		struct KismetMathLibrary_eventFMax_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMax_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMax_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMax_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MAX" },
				{ "DisplayName", "Max (float)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the maximum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FMax", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFMax_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMin()
	{
		struct KismetMathLibrary_eventFMin_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMin_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MIN" },
				{ "DisplayName", "Min (float)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minimum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FMin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFMin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FMod()
	{
		struct KismetMathLibrary_eventFMod_Parms
		{
			float Dividend;
			float Divisor;
			float Remainder;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMod_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Remainder = { UE4CodeGen_Private::EPropertyClass::Float, "Remainder", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMod_Parms, Remainder), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Divisor = { UE4CodeGen_Private::EPropertyClass::Float, "Divisor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMod_Parms, Divisor), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Dividend = { UE4CodeGen_Private::EPropertyClass::Float, "Dividend", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFMod_Parms, Dividend), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Remainder,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Divisor,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Dividend,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Division (whole and remainder)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the number of times Divisor will go into Dividend (i.e., Dividend divided by Divisor), as well as the remainder" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FMod", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventFMod_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Fraction()
	{
		struct KismetMathLibrary_eventFraction_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFraction_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFraction_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the fractional part of a float." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Fraction", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFraction_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromDays()
	{
		struct KismetMathLibrary_eventFromDays_Parms
		{
			float Days;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromDays_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Days = { UE4CodeGen_Private::EPropertyClass::Float, "Days", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromDays_Parms, Days), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Days,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "FromDays" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a time span that represents the specified number of days" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FromDays", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFromDays_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromHours()
	{
		struct KismetMathLibrary_eventFromHours_Parms
		{
			float Hours;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromHours_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Hours = { UE4CodeGen_Private::EPropertyClass::Float, "Hours", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromHours_Parms, Hours), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hours,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "FromHours" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a time span that represents the specified number of hours" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FromHours", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFromHours_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMilliseconds()
	{
		struct KismetMathLibrary_eventFromMilliseconds_Parms
		{
			float Milliseconds;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromMilliseconds_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Milliseconds = { UE4CodeGen_Private::EPropertyClass::Float, "Milliseconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromMilliseconds_Parms, Milliseconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Milliseconds,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "FromMilliseconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a time span that represents the specified number of milliseconds" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FromMilliseconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFromMilliseconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromMinutes()
	{
		struct KismetMathLibrary_eventFromMinutes_Parms
		{
			float Minutes;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromMinutes_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Minutes = { UE4CodeGen_Private::EPropertyClass::Float, "Minutes", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromMinutes_Parms, Minutes), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minutes,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "FromMinutes" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a time span that represents the specified number of minutes" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FromMinutes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFromMinutes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FromSeconds()
	{
		struct KismetMathLibrary_eventFromSeconds_Parms
		{
			float Seconds;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromSeconds_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Seconds = { UE4CodeGen_Private::EPropertyClass::Float, "Seconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFromSeconds_Parms, Seconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Seconds,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "FromSeconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a time span that represents the specified number of seconds" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FromSeconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventFromSeconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTrunc()
	{
		struct KismetMathLibrary_eventFTrunc_Parms
		{
			float A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFTrunc_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFTrunc_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Float" },
				{ "DisplayName", "Truncate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rounds A to an integer with truncation towards zero.  (e.g. -1.7 truncated to -1, 2.8 truncated to 2)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FTrunc", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventFTrunc_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_FTruncVector()
	{
		struct KismetMathLibrary_eventFTruncVector_Parms
		{
			FVector InVector;
			FIntVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFTruncVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FIntVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InVector_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVector = { UE4CodeGen_Private::EPropertyClass::Struct, "InVector", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventFTruncVector_Parms, InVector), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_InVector_MetaData, ARRAY_COUNT(NewProp_InVector_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVector,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintAutocast", "" },
				{ "Category", "Math|Float" },
				{ "DisplayName", "Truncate Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rounds A to an integer with truncation towards zero for each element in a vector.  (e.g. -1.7 truncated to -1, 2.8 truncated to 2)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "FTruncVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventFTruncVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetAxes()
	{
		struct KismetMathLibrary_eventGetAxes_Parms
		{
			FRotator A;
			FVector X;
			FVector Y;
			FVector Z;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAxes_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAxes_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAxes_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAxes_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Get the reference frame direction vectors (axes) described by this rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetAxes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventGetAxes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetAzimuthAndElevation()
	{
		struct KismetMathLibrary_eventGetAzimuthAndElevation_Parms
		{
			FVector InDirection;
			FTransform ReferenceFrame;
			float Azimuth;
			float Elevation;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Elevation = { UE4CodeGen_Private::EPropertyClass::Float, "Elevation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAzimuthAndElevation_Parms, Elevation), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Azimuth = { UE4CodeGen_Private::EPropertyClass::Float, "Azimuth", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAzimuthAndElevation_Parms, Azimuth), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ReferenceFrame_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReferenceFrame = { UE4CodeGen_Private::EPropertyClass::Struct, "ReferenceFrame", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAzimuthAndElevation_Parms, ReferenceFrame), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_ReferenceFrame_MetaData, ARRAY_COUNT(NewProp_ReferenceFrame_MetaData)) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InDirection = { UE4CodeGen_Private::EPropertyClass::Struct, "InDirection", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetAzimuthAndElevation_Parms, InDirection), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Elevation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Azimuth,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReferenceFrame,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InDirection,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a direction vector apart into Azimuth (Yaw) and Elevation (Pitch) rotation values given in degrees. (non-clamped)\n       Relative to the provided reference frame (an Actor's WorldTransform for example)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetAzimuthAndElevation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventGetAzimuthAndElevation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDate()
	{
		struct KismetMathLibrary_eventGetDate_Parms
		{
			FDateTime A;
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDate_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDate_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetDate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the date component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDate", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDate_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDay()
	{
		struct KismetMathLibrary_eventGetDay_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDay_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDay_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetDay" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the day component of A (1 to 31)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDay", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDay_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDayOfYear()
	{
		struct KismetMathLibrary_eventGetDayOfYear_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDayOfYear_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDayOfYear_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetDayOfYear" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the day of year of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDayOfYear", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDayOfYear_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDays()
	{
		struct KismetMathLibrary_eventGetDays_Parms
		{
			FTimespan A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDays_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDays_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetDays" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the days component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDays", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDays_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDirectionUnitVector()
	{
		struct KismetMathLibrary_eventGetDirectionUnitVector_Parms
		{
			FVector From;
			FVector To;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDirectionUnitVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_To = { UE4CodeGen_Private::EPropertyClass::Struct, "To", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDirectionUnitVector_Parms, To), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_From = { UE4CodeGen_Private::EPropertyClass::Struct, "From", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDirectionUnitVector_Parms, From), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_To,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_From,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "Get Unit Direction Vector" },
				{ "Keywords", "Unit Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the unit direction vector from one position to another." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDirectionUnitVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDirectionUnitVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetDuration()
	{
		struct KismetMathLibrary_eventGetDuration_Parms
		{
			FTimespan A;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDuration_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetDuration_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetDuration" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the absolute value of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetDuration", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetDuration_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetForwardVector()
	{
		struct KismetMathLibrary_eventGetForwardVector_Parms
		{
			FRotator InRot;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetForwardVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetForwardVector_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rotate the world forward vector by the given rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetForwardVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetForwardVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour()
	{
		struct KismetMathLibrary_eventGetHour_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHour_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHour_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetHour" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the hour component of A (24h format)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetHour", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetHour_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHour12()
	{
		struct KismetMathLibrary_eventGetHour12_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHour12_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHour12_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetHour12" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the hour component of A (12h format)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetHour12", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetHour12_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetHours()
	{
		struct KismetMathLibrary_eventGetHours_Parms
		{
			FTimespan A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHours_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetHours_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetHours" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the hours component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetHours", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetHours_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMaxElement()
	{
		struct KismetMathLibrary_eventGetMaxElement_Parms
		{
			FVector A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMaxElement_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMaxElement_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the maximum element (X, Y or Z) of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMaxElement", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMaxElement_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMillisecond()
	{
		struct KismetMathLibrary_eventGetMillisecond_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMillisecond_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMillisecond_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetMillisecond" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the millisecond component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMillisecond", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMillisecond_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMilliseconds()
	{
		struct KismetMathLibrary_eventGetMilliseconds_Parms
		{
			FTimespan A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMilliseconds_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMilliseconds_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetMilliseconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the milliseconds component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMilliseconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMilliseconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinElement()
	{
		struct KismetMathLibrary_eventGetMinElement_Parms
		{
			FVector A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinElement_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinElement_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the minimum element (X, Y or Z) of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMinElement", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMinElement_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinute()
	{
		struct KismetMathLibrary_eventGetMinute_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinute_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinute_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetMinute" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minute component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMinute", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMinute_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMinutes()
	{
		struct KismetMathLibrary_eventGetMinutes_Parms
		{
			FTimespan A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinutes_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMinutes_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetMinutes" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minutes component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMinutes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMinutes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetMonth()
	{
		struct KismetMathLibrary_eventGetMonth_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMonth_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetMonth_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetMonth" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the month component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetMonth", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetMonth_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPI()
	{
		struct KismetMathLibrary_eventGetPI_Parms
		{
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPI_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "PI" },
				{ "DisplayName", "Get PI" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the value of PI" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetPI", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGetPI_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToLine()
	{
		struct KismetMathLibrary_eventGetPointDistanceToLine_Parms
		{
			FVector Point;
			FVector LineOrigin;
			FVector LineDirection;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToLine_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineDirection = { UE4CodeGen_Private::EPropertyClass::Struct, "LineDirection", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToLine_Parms, LineDirection), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineOrigin = { UE4CodeGen_Private::EPropertyClass::Struct, "LineOrigin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToLine_Parms, LineOrigin), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToLine_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineDirection,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineOrigin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the distance from a point to the closest point on an infinite line.\n\n@param Point                  Point for which we find the distance to the closest point on the line.\n@param LineOrigin             Point of reference on the line.\n@param LineDirection  Direction of the line. Not required to be normalized.\n@return The distance from the given point to the closest point on the line." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetPointDistanceToLine", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetPointDistanceToLine_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToSegment()
	{
		struct KismetMathLibrary_eventGetPointDistanceToSegment_Parms
		{
			FVector Point;
			FVector SegmentStart;
			FVector SegmentEnd;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToSegment_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SegmentEnd = { UE4CodeGen_Private::EPropertyClass::Struct, "SegmentEnd", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToSegment_Parms, SegmentEnd), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SegmentStart = { UE4CodeGen_Private::EPropertyClass::Struct, "SegmentStart", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToSegment_Parms, SegmentStart), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetPointDistanceToSegment_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SegmentEnd,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SegmentStart,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the distance from a point to the closest point on a segment.\n\n@param Point                  Point for which we find the distance to the closest point on the segment.\n@param SegmentStart   Start of the segment.\n@param SegmentEnd             End of the segment.\n@return The distance from the given point to the closest point on the segment." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetPointDistanceToSegment", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetPointDistanceToSegment_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetReflectionVector()
	{
		struct KismetMathLibrary_eventGetReflectionVector_Parms
		{
			FVector Direction;
			FVector SurfaceNormal;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetReflectionVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SurfaceNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "SurfaceNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetReflectionVector_Parms, SurfaceNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Direction = { UE4CodeGen_Private::EPropertyClass::Struct, "Direction", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetReflectionVector_Parms, Direction), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SurfaceNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Direction,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "Reflection" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Given a direction vector and a surface normal, returns the vector reflected across the surface normal.\nProduces a result like shining a laser at a mirror!\n\n@param Direction Direction vector the ray is coming from.\n@param SurfaceNormal A normal of the surface the ray should be reflected on.\n\n@returns Reflected vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetReflectionVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetReflectionVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetRightVector()
	{
		struct KismetMathLibrary_eventGetRightVector_Parms
		{
			FRotator InRot;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetRightVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetRightVector_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rotate the world right vector by the given rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetRightVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetRightVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSecond()
	{
		struct KismetMathLibrary_eventGetSecond_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetSecond_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetSecond_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetSecond" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the second component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetSecond", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetSecond_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetSeconds()
	{
		struct KismetMathLibrary_eventGetSeconds_Parms
		{
			FTimespan A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetSeconds_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetSeconds_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetSeconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the seconds component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetSeconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetSeconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTAU()
	{
		struct KismetMathLibrary_eventGetTAU_Parms
		{
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTAU_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "TAU" },
				{ "DisplayName", "Get TAU" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the value of TAU (= 2 * PI)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTAU", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGetTAU_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTimeOfDay()
	{
		struct KismetMathLibrary_eventGetTimeOfDay_Parms
		{
			FDateTime A;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTimeOfDay_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTimeOfDay_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetTimeOfDay" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the time elapsed since midnight of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTimeOfDay", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTimeOfDay_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalDays()
	{
		struct KismetMathLibrary_eventGetTotalDays_Parms
		{
			FTimespan A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalDays_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalDays_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetTotalDays" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the total number of days in A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTotalDays", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTotalDays_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalHours()
	{
		struct KismetMathLibrary_eventGetTotalHours_Parms
		{
			FTimespan A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalHours_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalHours_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetTotalHours" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the total number of hours in A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTotalHours", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTotalHours_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMilliseconds()
	{
		struct KismetMathLibrary_eventGetTotalMilliseconds_Parms
		{
			FTimespan A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalMilliseconds_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalMilliseconds_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetTotalMilliseconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the total number of milliseconds in A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTotalMilliseconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTotalMilliseconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalMinutes()
	{
		struct KismetMathLibrary_eventGetTotalMinutes_Parms
		{
			FTimespan A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalMinutes_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalMinutes_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetTotalMinutes" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the total number of minutes in A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTotalMinutes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTotalMinutes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetTotalSeconds()
	{
		struct KismetMathLibrary_eventGetTotalSeconds_Parms
		{
			FTimespan A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalSeconds_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetTotalSeconds_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "GetTotalSeconds" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the total number of seconds in A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetTotalSeconds", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetTotalSeconds_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetUpVector()
	{
		struct KismetMathLibrary_eventGetUpVector_Parms
		{
			FRotator InRot;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetUpVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InRot = { UE4CodeGen_Private::EPropertyClass::Struct, "InRot", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetUpVector_Parms, InRot), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRot,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rotate the world up vector by the given rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetUpVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetUpVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetVectorArrayAverage()
	{
		struct KismetMathLibrary_eventGetVectorArrayAverage_Parms
		{
			TArray<FVector> Vectors;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetVectorArrayAverage_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Vectors_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Vectors = { UE4CodeGen_Private::EPropertyClass::Array, "Vectors", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetVectorArrayAverage_Parms, Vectors), METADATA_PARAMS(NewProp_Vectors_MetaData, ARRAY_COUNT(NewProp_Vectors_MetaData)) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Vectors_Inner = { UE4CodeGen_Private::EPropertyClass::Struct, "Vectors", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Vectors,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Vectors_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Find the average of an array of vectors" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetVectorArrayAverage", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventGetVectorArrayAverage_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYawPitchFromVector()
	{
		struct KismetMathLibrary_eventGetYawPitchFromVector_Parms
		{
			FVector InVec;
			float Yaw;
			float Pitch;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Pitch = { UE4CodeGen_Private::EPropertyClass::Float, "Pitch", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetYawPitchFromVector_Parms, Pitch), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Yaw = { UE4CodeGen_Private::EPropertyClass::Float, "Yaw", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetYawPitchFromVector_Parms, Yaw), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVec = { UE4CodeGen_Private::EPropertyClass::Struct, "InVec", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetYawPitchFromVector_Parms, InVec), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Pitch,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Yaw,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVec,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeBreakFunc", "" },
				{ "ToolTip", "Breaks a vector apart into Yaw, Pitch rotation values given in degrees. (non-clamped)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetYawPitchFromVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventGetYawPitchFromVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GetYear()
	{
		struct KismetMathLibrary_eventGetYear_Parms
		{
			FDateTime A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetYear_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGetYear_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "GetYear" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the year component of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GetYear", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGetYear_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_ByteByte()
	{
		struct KismetMathLibrary_eventGreater_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreater_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreater_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", ">" },
				{ "DisplayName", "Byte > Byte" },
				{ "Keywords", "> greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than B (A > B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Greater_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreater_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventGreater_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreater_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreater_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", ">" },
				{ "DisplayName", "DateTime > DateTime" },
				{ "Keywords", "> greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than B (A > B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Greater_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGreater_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_FloatFloat()
	{
		struct KismetMathLibrary_eventGreater_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreater_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreater_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", ">" },
				{ "DisplayName", "float > float" },
				{ "Keywords", "> greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than B (A > B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Greater_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreater_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_IntInt()
	{
		struct KismetMathLibrary_eventGreater_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreater_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreater_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", ">" },
				{ "DisplayName", "integer > integer" },
				{ "Keywords", "> greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than B (A > B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Greater_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreater_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Greater_TimespanTimespan()
	{
		struct KismetMathLibrary_eventGreater_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreater_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreater_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreater_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", ">" },
				{ "DisplayName", "Timespan > Timespan" },
				{ "Keywords", "> greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than B (A > B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Greater_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGreater_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_ByteByte()
	{
		struct KismetMathLibrary_eventGreaterEqual_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreaterEqual_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreaterEqual_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", ">=" },
				{ "DisplayName", "Byte >= Byte" },
				{ "Keywords", ">= greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than or equal to B (A >= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterEqual_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreaterEqual_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", ">=" },
				{ "DisplayName", "DateTime >= DateTime" },
				{ "Keywords", ">= greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than or equal to B (A >= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterEqual_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGreaterEqual_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_FloatFloat()
	{
		struct KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", ">=" },
				{ "DisplayName", "float >= float" },
				{ "Keywords", ">= greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than or equal to B (A >= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterEqual_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreaterEqual_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_IntInt()
	{
		struct KismetMathLibrary_eventGreaterEqual_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreaterEqual_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreaterEqual_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", ">=" },
				{ "DisplayName", "integer >= integer" },
				{ "Keywords", ">= greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than or equal to B (A >= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterEqual_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGreaterEqual_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_TimespanTimespan()
	{
		struct KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", ">=" },
				{ "DisplayName", "Timespan >= Timespan" },
				{ "Keywords", ">= greater" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is greater than or equal to B (A >= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterEqual_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGreaterEqual_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GreaterGreater_VectorRotator()
	{
		struct KismetMathLibrary_eventGreaterGreater_VectorRotator_Parms
		{
			FVector A;
			FRotator B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterGreater_VectorRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterGreater_VectorRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGreaterGreater_VectorRotator_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "RotateVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns result of vector A rotated by Rotator B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GreaterGreater_VectorRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventGreaterGreater_VectorRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_GridSnap_Float()
	{
		struct KismetMathLibrary_eventGridSnap_Float_Parms
		{
			float Location;
			float GridSize;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGridSnap_Float_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_GridSize = { UE4CodeGen_Private::EPropertyClass::Float, "GridSize", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGridSnap_Float_Parms, GridSize), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Location = { UE4CodeGen_Private::EPropertyClass::Float, "Location", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventGridSnap_Float_Parms, Location), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_GridSize,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Location,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Snap to grid (float)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Snaps a value to the nearest grid multiple. E.g.,\n            Location = 5.1, GridSize = 10.0 : return value = 10.0\nIf GridSize is 0 Location is returned\nif GridSize is very small precision issues may occur." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "GridSnap_Float", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventGridSnap_Float_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB()
	{
		struct KismetMathLibrary_eventHSVToRGB_Parms
		{
			float H;
			float S;
			float V;
			float A;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_V = { UE4CodeGen_Private::EPropertyClass::Float, "V", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Parms, V), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_S = { UE4CodeGen_Private::EPropertyClass::Float, "S", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Parms, S), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_H = { UE4CodeGen_Private::EPropertyClass::Float, "H", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Parms, H), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_V,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_S,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_H,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "CPP_Default_A", "1.000000" },
				{ "DisplayName", "HSV to RGB" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Make a color from individual color components (HSV space)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "HSVToRGB", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventHSVToRGB_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB_Vector()
	{
		struct KismetMathLibrary_eventHSVToRGB_Vector_Parms
		{
			FLinearColor HSV;
			FLinearColor RGB;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_RGB = { UE4CodeGen_Private::EPropertyClass::Struct, "RGB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Vector_Parms, RGB), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_HSV_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_HSV = { UE4CodeGen_Private::EPropertyClass::Struct, "HSV", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000082, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHSVToRGB_Vector_Parms, HSV), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(NewProp_HSV_MetaData, ARRAY_COUNT(NewProp_HSV_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RGB,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_HSV,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "DisplayName", "HSV to RGB (vector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a HSV linear color (where H is in R, S is in G, and V is in B) to RGB" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "HSVToRGB_Vector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventHSVToRGB_Vector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Hypotenuse()
	{
		struct KismetMathLibrary_eventHypotenuse_Parms
		{
			float Width;
			float Height;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHypotenuse_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Height = { UE4CodeGen_Private::EPropertyClass::Float, "Height", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHypotenuse_Parms, Height), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Width = { UE4CodeGen_Private::EPropertyClass::Float, "Width", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventHypotenuse_Parms, Width), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Height,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Width,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "Keywords", "pythagorean theorem" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the hypotenuse of a right-angled triangle given the width and height." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Hypotenuse", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventHypotenuse_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InRange_FloatFloat()
	{
		struct KismetMathLibrary_eventInRange_FloatFloat_Parms
		{
			float Value;
			float Min;
			float Max;
			bool InclusiveMin;
			bool InclusiveMax;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InclusiveMax_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_FloatFloat_Parms*)Obj)->InclusiveMax = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InclusiveMax = { UE4CodeGen_Private::EPropertyClass::Bool, "InclusiveMax", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InclusiveMax_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InclusiveMin_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_FloatFloat_Parms*)Obj)->InclusiveMin = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InclusiveMin = { UE4CodeGen_Private::EPropertyClass::Bool, "InclusiveMin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InclusiveMin_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Float, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_FloatFloat_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Float, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_FloatFloat_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_FloatFloat_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InclusiveMax,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InclusiveMin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CPP_Default_InclusiveMax", "true" },
				{ "CPP_Default_InclusiveMin", "true" },
				{ "DisplayName", "InRange (float)" },
				{ "Max", "1.0" },
				{ "Min", "0.0" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if value is between Min and Max (V >= Min && V <= Max)\nIf InclusiveMin is true, value needs to be equal or larger than Min, else it needs to be larger\nIf InclusiveMax is true, value needs to be smaller or equal than Max, else it needs to be smaller" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InRange_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventInRange_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InRange_IntInt()
	{
		struct KismetMathLibrary_eventInRange_IntInt_Parms
		{
			int32 Value;
			int32 Min;
			int32 Max;
			bool InclusiveMin;
			bool InclusiveMax;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InclusiveMax_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_IntInt_Parms*)Obj)->InclusiveMax = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InclusiveMax = { UE4CodeGen_Private::EPropertyClass::Bool, "InclusiveMax", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InclusiveMax_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_InclusiveMin_SetBit = [](void* Obj){ ((KismetMathLibrary_eventInRange_IntInt_Parms*)Obj)->InclusiveMin = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_InclusiveMin = { UE4CodeGen_Private::EPropertyClass::Bool, "InclusiveMin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventInRange_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_InclusiveMin_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_IntInt_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Int, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_IntInt_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Int, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInRange_IntInt_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InclusiveMax,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InclusiveMin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CPP_Default_InclusiveMax", "true" },
				{ "CPP_Default_InclusiveMin", "true" },
				{ "DisplayName", "InRange (integer)" },
				{ "Max", "10" },
				{ "Min", "0" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if value is between Min and Max (V >= Min && V <= Max)\nIf InclusiveMin is true, value needs to be equal or larger than Min, else it needs to be larger\nIf InclusiveMax is true, value needs to be smaller or equal than Max, else it needs to be smaller" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InRange_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventInRange_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseLerp()
	{
		struct KismetMathLibrary_eventInverseLerp_Parms
		{
			float A;
			float B;
			float Value;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseLerp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseLerp_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseLerp_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseLerp_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "Keywords", "percentage normalize range" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the fraction (alpha) of the range B-A that corresponds to Value, e.g.,\n      inputs A = 0, B = 8, Value = 3 : outputs Return Value = 3/8, indicating Value is 3/8 from A to B\n      inputs A = 8, B = 0, Value = 3 : outputs Return Value = 5/8, indicating Value is 5/8 from A to B\nNamed InverseLerp because Lerp( A, B, InverseLerp(A, B, Value) ) == Value\n@param A The \"from\" value this float could be, usually but not necessarily a minimum. Returned as 0.\n@param B The \"to\" value this float could be, usually but not necessarily a maximum. Returned as 1.\n@param Value A value intended to be normalized relative to B-A\n@return A normalized alpha value considering A and B." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InverseLerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventInverseLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformDirection()
	{
		struct KismetMathLibrary_eventInverseTransformDirection_Parms
		{
			FTransform T;
			FVector Direction;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformDirection_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Direction = { UE4CodeGen_Private::EPropertyClass::Struct, "Direction", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformDirection_Parms, Direction), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformDirection_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Direction,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a direction vector by the inverse of the supplied transform - will not change its length.\nFor example, if T was an object's transform, this would transform a direction from world space to local space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InverseTransformDirection", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventInverseTransformDirection_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformLocation()
	{
		struct KismetMathLibrary_eventInverseTransformLocation_Parms
		{
			FTransform T;
			FVector Location;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformLocation_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Location = { UE4CodeGen_Private::EPropertyClass::Struct, "Location", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformLocation_Parms, Location), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformLocation_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Location,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "location" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a position by the inverse of the supplied transform.\nFor example, if T was an object's transform, this would transform a position from world space to local space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InverseTransformLocation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventInverseTransformLocation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InverseTransformRotation()
	{
		struct KismetMathLibrary_eventInverseTransformRotation_Parms
		{
			FTransform T;
			FRotator Rotation;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformRotation_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Rotation = { UE4CodeGen_Private::EPropertyClass::Struct, "Rotation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformRotation_Parms, Rotation), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInverseTransformRotation_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Rotation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a rotator by the inverse of the supplied transform.\nFor example, if T was an object's transform, this would transform a rotation from world space to local space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InverseTransformRotation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventInverseTransformRotation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_InvertTransform()
	{
		struct KismetMathLibrary_eventInvertTransform_Parms
		{
			FTransform T;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInvertTransform_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventInvertTransform_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "inverse" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the inverse of the given transform T.\n\nExample: Given a LocalToWorld transform, WorldToLocal will be returned.\n\n@param       T       The transform you wish to invert\n@return      The inverse of T." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "InvertTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventInvertTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsAfternoon()
	{
		struct KismetMathLibrary_eventIsAfternoon_Parms
		{
			FDateTime A;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventIsAfternoon_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventIsAfternoon_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsAfternoon_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "IsAfternoon" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns whether A's time is in the afternoon" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "IsAfternoon", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventIsAfternoon_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsLeapYear()
	{
		struct KismetMathLibrary_eventIsLeapYear_Parms
		{
			int32 Year;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventIsLeapYear_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventIsLeapYear_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Year = { UE4CodeGen_Private::EPropertyClass::Int, "Year", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsLeapYear_Parms, Year), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Year,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "IsLeapYear" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns whether given year is a leap year" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "IsLeapYear", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventIsLeapYear_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsMorning()
	{
		struct KismetMathLibrary_eventIsMorning_Parms
		{
			FDateTime A;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventIsMorning_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventIsMorning_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsMorning_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "IsMorning" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns whether A's time is in the morning" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "IsMorning", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventIsMorning_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBox()
	{
		struct KismetMathLibrary_eventIsPointInBox_Parms
		{
			FVector Point;
			FVector BoxOrigin;
			FVector BoxExtent;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventIsPointInBox_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventIsPointInBox_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_BoxExtent = { UE4CodeGen_Private::EPropertyClass::Struct, "BoxExtent", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBox_Parms, BoxExtent), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_BoxOrigin = { UE4CodeGen_Private::EPropertyClass::Struct, "BoxOrigin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBox_Parms, BoxOrigin), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBox_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BoxExtent,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BoxOrigin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Geometry" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Determines whether the given point is in a box. Includes points on the box.\n\n@param Point                 Point to test\n@param BoxOrigin             Origin of the box\n@param BoxExtent             Extents of the box (distance in each axis from origin)\n@return Whether the point is in the box." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "IsPointInBox", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventIsPointInBox_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_IsPointInBoxWithTransform()
	{
		struct KismetMathLibrary_eventIsPointInBoxWithTransform_Parms
		{
			FVector Point;
			FTransform BoxWorldTransform;
			FVector BoxExtent;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventIsPointInBoxWithTransform_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventIsPointInBoxWithTransform_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_BoxExtent = { UE4CodeGen_Private::EPropertyClass::Struct, "BoxExtent", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBoxWithTransform_Parms, BoxExtent), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BoxWorldTransform_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_BoxWorldTransform = { UE4CodeGen_Private::EPropertyClass::Struct, "BoxWorldTransform", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBoxWithTransform_Parms, BoxWorldTransform), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_BoxWorldTransform_MetaData, ARRAY_COUNT(NewProp_BoxWorldTransform_MetaData)) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventIsPointInBoxWithTransform_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BoxExtent,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BoxWorldTransform,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Geometry" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Determines whether a given point is in a box with a given transform. Includes points on the box.\n\n@param Point                          Point to test\n@param BoxWorldTransform      Component-to-World transform of the box.\n@param BoxExtent                      Extents of the box (distance in each axis from origin), in component space.\n@return Whether the point is in the box." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "IsPointInBoxWithTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventIsPointInBoxWithTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Lerp()
	{
		struct KismetMathLibrary_eventLerp_Parms
		{
			float A;
			float B;
			float Alpha;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLerp_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLerp_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLerp_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLerp_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between A and B based on Alpha (100% of A when Alpha=0 and 100% of B when Alpha=1)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Lerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_ByteByte()
	{
		struct KismetMathLibrary_eventLess_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLess_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLess_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "<" },
				{ "DisplayName", "Byte < Byte" },
				{ "Keywords", "< less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than B (A < B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Less_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLess_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventLess_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLess_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLess_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "<" },
				{ "DisplayName", "DateTime < DateTime" },
				{ "Keywords", "< less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than B (A < B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Less_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLess_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_FloatFloat()
	{
		struct KismetMathLibrary_eventLess_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLess_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLess_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "<" },
				{ "DisplayName", "float < float" },
				{ "Keywords", "< less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is Less than B (A < B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Less_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLess_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_IntInt()
	{
		struct KismetMathLibrary_eventLess_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLess_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLess_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "<" },
				{ "DisplayName", "integer < integer" },
				{ "Keywords", "< less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than B (A < B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Less_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLess_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Less_TimespanTimespan()
	{
		struct KismetMathLibrary_eventLess_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLess_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLess_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLess_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "<" },
				{ "DisplayName", "Timespan < Timespan" },
				{ "Keywords", "< less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than B (A < B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Less_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLess_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_ByteByte()
	{
		struct KismetMathLibrary_eventLessEqual_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLessEqual_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLessEqual_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "<=" },
				{ "DisplayName", "Byte <= Byte" },
				{ "Keywords", "<= less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than or equal to B (A <= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessEqual_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLessEqual_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "<=" },
				{ "DisplayName", "DateTime <= DateTime" },
				{ "Keywords", "<= less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than or equal to B (A <= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessEqual_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLessEqual_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_FloatFloat()
	{
		struct KismetMathLibrary_eventLessEqual_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLessEqual_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLessEqual_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "<=" },
				{ "DisplayName", "float <= float" },
				{ "Keywords", "<= less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is Less than or equal to B (A <= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessEqual_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLessEqual_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_IntInt()
	{
		struct KismetMathLibrary_eventLessEqual_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLessEqual_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLessEqual_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "<=" },
				{ "DisplayName", "integer <= integer" },
				{ "Keywords", "<= less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than or equal to B (A <= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessEqual_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLessEqual_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessEqual_TimespanTimespan()
	{
		struct KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "<=" },
				{ "DisplayName", "Timespan <= Timespan" },
				{ "Keywords", "<= less" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is less than or equal to B (A <= B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessEqual_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLessEqual_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LessLess_VectorRotator()
	{
		struct KismetMathLibrary_eventLessLess_VectorRotator_Parms
		{
			FVector A;
			FRotator B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessLess_VectorRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessLess_VectorRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLessLess_VectorRotator_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "UnrotateVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns result of vector A rotated by the inverse of Rotator B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LessLess_VectorRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLessLess_VectorRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerp()
	{
		struct KismetMathLibrary_eventLinearColorLerp_Parms
		{
			FLinearColor A;
			FLinearColor B;
			float Alpha;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerp_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerp_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerp_Parms, B), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerp_Parms, A), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "DisplayName", "Lerp (LinearColor)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between A and B based on Alpha (100% of A when Alpha=0 and 100% of B when Alpha=1)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LinearColorLerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLinearColorLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerpUsingHSV()
	{
		struct KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms
		{
			FLinearColor A;
			FLinearColor B;
			float Alpha;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms, B), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms, A), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "DisplayName", "Lerp Using HSV (LinearColor)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between two colors by the specified Alpha amount (100% of A when Alpha=0 and 100% of B when Alpha=1).  The interpolation is performed in HSV color space taking the shortest path to the new color's hue.  This can give better results than a normal lerp, but is much more expensive.  The incoming colors are in RGB space, and the output color will be RGB.  The alpha value will also be interpolated.\n\n@param       A               The color and alpha to interpolate from as linear RGBA\n@param       B               The color and alpha to interpolate to as linear RGBA\n@param       Alpha   Scalar interpolation amount (usually between 0.0 and 1.0 inclusive)\n\n@return      The interpolated color in linear RGB space along with the interpolated alpha value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LinearColorLerpUsingHSV", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventLinearColorLerpUsingHSV_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection()
	{
		struct KismetMathLibrary_eventLinePlaneIntersection_Parms
		{
			FVector LineStart;
			FVector LineEnd;
			FPlane APlane;
			float T;
			FVector Intersection;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLinePlaneIntersection_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLinePlaneIntersection_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Intersection = { UE4CodeGen_Private::EPropertyClass::Struct, "Intersection", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_Parms, Intersection), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Float, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_Parms, T), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_APlane_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_APlane = { UE4CodeGen_Private::EPropertyClass::Struct, "APlane", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_Parms, APlane), Z_Construct_UScriptStruct_FPlane, METADATA_PARAMS(NewProp_APlane_MetaData, ARRAY_COUNT(NewProp_APlane_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LineEnd_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineEnd = { UE4CodeGen_Private::EPropertyClass::Struct, "LineEnd", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_Parms, LineEnd), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_LineEnd_MetaData, ARRAY_COUNT(NewProp_LineEnd_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LineStart_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineStart = { UE4CodeGen_Private::EPropertyClass::Struct, "LineStart", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_Parms, LineStart), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_LineStart_MetaData, ARRAY_COUNT(NewProp_LineStart_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Intersection,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_APlane,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineEnd,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineStart,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Intersection" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Computes the intersection point between a line and a plane.\n@param               T - The t of the intersection between the line and the plane\n@param               Intersection - The point of intersection between the line and the plane\n@return              True if the intersection test was successful." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LinePlaneIntersection", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventLinePlaneIntersection_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection_OriginNormal()
	{
		struct KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms
		{
			FVector LineStart;
			FVector LineEnd;
			FVector PlaneOrigin;
			FVector PlaneNormal;
			float T;
			FVector Intersection;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Intersection = { UE4CodeGen_Private::EPropertyClass::Struct, "Intersection", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, Intersection), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Float, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, T), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_PlaneNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "PlaneNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, PlaneNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_PlaneOrigin = { UE4CodeGen_Private::EPropertyClass::Struct, "PlaneOrigin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, PlaneOrigin), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LineEnd_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineEnd = { UE4CodeGen_Private::EPropertyClass::Struct, "LineEnd", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, LineEnd), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_LineEnd_MetaData, ARRAY_COUNT(NewProp_LineEnd_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_LineStart_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_LineStart = { UE4CodeGen_Private::EPropertyClass::Struct, "LineStart", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms, LineStart), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_LineStart_MetaData, ARRAY_COUNT(NewProp_LineStart_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Intersection,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_PlaneNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_PlaneOrigin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineEnd,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LineStart,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Intersection" },
				{ "DisplayName", "Line Plane Intersection (Origin & Normal)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Computes the intersection point between a line and a plane.\n@param               T - The t of the intersection between the line and the plane\n@param               Intersection - The point of intersection between the line and the plane\n@return              True if the intersection test was successful." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "LinePlaneIntersection_OriginNormal", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventLinePlaneIntersection_OriginNormal_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Log()
	{
		struct KismetMathLibrary_eventLog_Parms
		{
			float A;
			float Base;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLog_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Base = { UE4CodeGen_Private::EPropertyClass::Float, "Base", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLog_Parms, Base), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLog_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Base,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CPP_Default_Base", "1.000000" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns log of A base B (if B^R == A, returns R)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Log", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLog_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Loge()
	{
		struct KismetMathLibrary_eventLoge_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLoge_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventLoge_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns natural log of A (if e^R == A, returns R)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Loge", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventLoge_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox()
	{
		struct KismetMathLibrary_eventMakeBox_Parms
		{
			FVector Min;
			FVector Max;
			FBox ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox_Parms, ReturnValue), Z_Construct_UScriptStruct_FBox, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Struct, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox_Parms, Max), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Struct, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox_Parms, Min), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Box" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes an FBox from Min and Max and sets IsValid to true" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeBox", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeBox_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeBox2D()
	{
		struct KismetMathLibrary_eventMakeBox2D_Parms
		{
			FVector2D Min;
			FVector2D Max;
			FBox2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FBox2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Struct, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox2D_Parms, Max), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Struct, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeBox2D_Parms, Min), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Box2D" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes an FBox2D from Min and Max and sets IsValid to true" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeBox2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeBox2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeColor()
	{
		struct KismetMathLibrary_eventMakeColor_Parms
		{
			float R;
			float G;
			float B;
			float A;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeColor_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeColor_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_G = { UE4CodeGen_Private::EPropertyClass::Float, "G", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeColor_Parms, G), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_R = { UE4CodeGen_Private::EPropertyClass::Float, "R", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeColor_Parms, R), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_G,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_R,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "CPP_Default_A", "1.000000" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Make a color from individual color components (RGB space)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeDateTime()
	{
		struct KismetMathLibrary_eventMakeDateTime_Parms
		{
			int32 Year;
			int32 Month;
			int32 Day;
			int32 Hour;
			int32 Minute;
			int32 Second;
			int32 Millisecond;
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Millisecond = { UE4CodeGen_Private::EPropertyClass::Int, "Millisecond", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010040000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Millisecond), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Second = { UE4CodeGen_Private::EPropertyClass::Int, "Second", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010040000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Second), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minute = { UE4CodeGen_Private::EPropertyClass::Int, "Minute", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010040000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Minute), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hour = { UE4CodeGen_Private::EPropertyClass::Int, "Hour", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010040000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Hour), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Day = { UE4CodeGen_Private::EPropertyClass::Int, "Day", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Day), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Month = { UE4CodeGen_Private::EPropertyClass::Int, "Month", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Month), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Year = { UE4CodeGen_Private::EPropertyClass::Int, "Year", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeDateTime_Parms, Year), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Millisecond,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Second,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minute,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hour,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Day,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Month,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Year,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "AdvancedDisplay", "3" },
				{ "Category", "Math|DateTime" },
				{ "CPP_Default_Hour", "0" },
				{ "CPP_Default_Millisecond", "0" },
				{ "CPP_Default_Minute", "0" },
				{ "CPP_Default_Second", "0" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a DateTime struct" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePlaneFromPointAndNormal()
	{
		struct KismetMathLibrary_eventMakePlaneFromPointAndNormal_Parms
		{
			FVector Point;
			FVector Normal;
			FPlane ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePlaneFromPointAndNormal_Parms, ReturnValue), Z_Construct_UScriptStruct_FPlane, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Normal = { UE4CodeGen_Private::EPropertyClass::Struct, "Normal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePlaneFromPointAndNormal_Parms, Normal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePlaneFromPointAndNormal_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Normal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Plane" },
				{ "Keywords", "make plane" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Creates a plane with a facing direction of Normal at the given Point\n\n@param Point  A point on the plane\n@param Normal  The Normal of the plane at Point\n@return Plane instance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakePlaneFromPointAndNormal", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakePlaneFromPointAndNormal_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakePulsatingValue()
	{
		struct KismetMathLibrary_eventMakePulsatingValue_Parms
		{
			float InCurrentTime;
			float InPulsesPerSecond;
			float InPhase;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePulsatingValue_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InPhase = { UE4CodeGen_Private::EPropertyClass::Float, "InPhase", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePulsatingValue_Parms, InPhase), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InPulsesPerSecond = { UE4CodeGen_Private::EPropertyClass::Float, "InPulsesPerSecond", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePulsatingValue_Parms, InPulsesPerSecond), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InCurrentTime = { UE4CodeGen_Private::EPropertyClass::Float, "InCurrentTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakePulsatingValue_Parms, InCurrentTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InPhase,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InPulsesPerSecond,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InCurrentTime,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CPP_Default_InPhase", "0.000000" },
				{ "CPP_Default_InPulsesPerSecond", "1.000000" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Simple function to create a pulsating scalar value\n\n@param  InCurrentTime  Current absolute time\n@param  InPulsesPerSecond  How many full pulses per second?\n@param  InPhase  Optional phase amount, between 0.0 and 1.0 (to synchronize pulses)\n\n@return  Pulsating value (0.0-1.0)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakePulsatingValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMakePulsatingValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRandomStream()
	{
		struct KismetMathLibrary_eventMakeRandomStream_Parms
		{
			int32 InitialSeed;
			FRandomStream ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRandomStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_InitialSeed = { UE4CodeGen_Private::EPropertyClass::Int, "InitialSeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRandomStream_Parms, InitialSeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InitialSeed,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a SRand-based random number generator" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRandomStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeRandomStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotationFromAxes()
	{
		struct KismetMathLibrary_eventMakeRotationFromAxes_Parms
		{
			FVector Forward;
			FVector Right;
			FVector Up;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotationFromAxes_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Up = { UE4CodeGen_Private::EPropertyClass::Struct, "Up", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotationFromAxes_Parms, Up), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Right = { UE4CodeGen_Private::EPropertyClass::Struct, "Right", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotationFromAxes_Parms, Right), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Forward = { UE4CodeGen_Private::EPropertyClass::Struct, "Forward", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotationFromAxes_Parms, Forward), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Up,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Right,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Forward,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Build a reference frame from three axes" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotationFromAxes", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeRotationFromAxes_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotator()
	{
		struct KismetMathLibrary_eventMakeRotator_Parms
		{
			float Roll;
			float Pitch;
			float Yaw;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Yaw_MetaData[] = {
				{ "DisplayName", "Z (Yaw)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Yaw = { UE4CodeGen_Private::EPropertyClass::Float, "Yaw", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotator_Parms, Yaw), METADATA_PARAMS(NewProp_Yaw_MetaData, ARRAY_COUNT(NewProp_Yaw_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Pitch_MetaData[] = {
				{ "DisplayName", "Y (Pitch)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Pitch = { UE4CodeGen_Private::EPropertyClass::Float, "Pitch", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotator_Parms, Pitch), METADATA_PARAMS(NewProp_Pitch_MetaData, ARRAY_COUNT(NewProp_Pitch_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Roll_MetaData[] = {
				{ "DisplayName", "X (Roll)" },
			};
#endif
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Roll = { UE4CodeGen_Private::EPropertyClass::Float, "Roll", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotator_Parms, Roll), METADATA_PARAMS(NewProp_Roll_MetaData, ARRAY_COUNT(NewProp_Roll_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Yaw,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Pitch,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Roll,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a rotator {Roll, Pitch, Yaw} from rotation values supplied in degrees" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromX()
	{
		struct KismetMathLibrary_eventMakeRotFromX_Parms
		{
			FVector X;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromX_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_X_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromX_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_X_MetaData, ARRAY_COUNT(NewProp_X_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a rotator given only a XAxis. Y and Z are unspecified but will be orthonormal. XAxis need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromX", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromX_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXY()
	{
		struct KismetMathLibrary_eventMakeRotFromXY_Parms
		{
			FVector X;
			FVector Y;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXY_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Y_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXY_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Y_MetaData, ARRAY_COUNT(NewProp_Y_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_X_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXY_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_X_MetaData, ARRAY_COUNT(NewProp_X_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given X and Y axes. X will remain fixed, Y may be changed minimally to enforce orthogonality. Z will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromXY", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromXY_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXZ()
	{
		struct KismetMathLibrary_eventMakeRotFromXZ_Parms
		{
			FVector X;
			FVector Z;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXZ_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Z_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXZ_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Z_MetaData, ARRAY_COUNT(NewProp_Z_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_X_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromXZ_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_X_MetaData, ARRAY_COUNT(NewProp_X_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given X and Z axes. X will remain fixed, Z may be changed minimally to enforce orthogonality. Y will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromXZ", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromXZ_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromY()
	{
		struct KismetMathLibrary_eventMakeRotFromY_Parms
		{
			FVector Y;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromY_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Y_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromY_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Y_MetaData, ARRAY_COUNT(NewProp_Y_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a rotation matrix given only a YAxis. X and Z are unspecified but will be orthonormal. YAxis need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromY", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromY_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYX()
	{
		struct KismetMathLibrary_eventMakeRotFromYX_Parms
		{
			FVector Y;
			FVector X;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYX_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_X_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYX_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_X_MetaData, ARRAY_COUNT(NewProp_X_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Y_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYX_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Y_MetaData, ARRAY_COUNT(NewProp_Y_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given Y and X axes. Y will remain fixed, X may be changed minimally to enforce orthogonality. Z will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromYX", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromYX_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYZ()
	{
		struct KismetMathLibrary_eventMakeRotFromYZ_Parms
		{
			FVector Y;
			FVector Z;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYZ_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Z_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYZ_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Z_MetaData, ARRAY_COUNT(NewProp_Z_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Y_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromYZ_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Y_MetaData, ARRAY_COUNT(NewProp_Y_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given Y and Z axes. Y will remain fixed, Z may be changed minimally to enforce orthogonality. X will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromYZ", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromYZ_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZ()
	{
		struct KismetMathLibrary_eventMakeRotFromZ_Parms
		{
			FVector Z;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZ_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Z_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZ_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Z_MetaData, ARRAY_COUNT(NewProp_Z_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a rotation matrix given only a ZAxis. X and Y are unspecified but will be orthonormal. ZAxis need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromZ", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromZ_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZX()
	{
		struct KismetMathLibrary_eventMakeRotFromZX_Parms
		{
			FVector Z;
			FVector X;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZX_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_X_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Struct, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZX_Parms, X), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_X_MetaData, ARRAY_COUNT(NewProp_X_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Z_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZX_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Z_MetaData, ARRAY_COUNT(NewProp_Z_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given Z and X axes. Z will remain fixed, X may be changed minimally to enforce orthogonality. Y will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromZX", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromZX_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZY()
	{
		struct KismetMathLibrary_eventMakeRotFromZY_Parms
		{
			FVector Z;
			FVector Y;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZY_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Y_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Struct, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZY_Parms, Y), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Y_MetaData, ARRAY_COUNT(NewProp_Y_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Z_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Struct, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeRotFromZY_Parms, Z), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Z_MetaData, ARRAY_COUNT(NewProp_Z_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "construct build rotation rotate rotator makerotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Builds a matrix with given Z and Y axes. Z will remain fixed, Y may be changed minimally to enforce orthogonality. X will be computed. Inputs need not be normalized." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeRotFromZY", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventMakeRotFromZY_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan()
	{
		struct KismetMathLibrary_eventMakeTimespan_Parms
		{
			int32 Days;
			int32 Hours;
			int32 Minutes;
			int32 Seconds;
			int32 Milliseconds;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Milliseconds = { UE4CodeGen_Private::EPropertyClass::Int, "Milliseconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, Milliseconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Seconds = { UE4CodeGen_Private::EPropertyClass::Int, "Seconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, Seconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minutes = { UE4CodeGen_Private::EPropertyClass::Int, "Minutes", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, Minutes), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hours = { UE4CodeGen_Private::EPropertyClass::Int, "Hours", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, Hours), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Days = { UE4CodeGen_Private::EPropertyClass::Int, "Days", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan_Parms, Days), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Milliseconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Seconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minutes,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hours,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Days,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a Timespan struct" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan2()
	{
		struct KismetMathLibrary_eventMakeTimespan2_Parms
		{
			int32 Days;
			int32 Hours;
			int32 Minutes;
			int32 Seconds;
			int32 FractionNano;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_FractionNano = { UE4CodeGen_Private::EPropertyClass::Int, "FractionNano", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, FractionNano), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Seconds = { UE4CodeGen_Private::EPropertyClass::Int, "Seconds", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, Seconds), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Minutes = { UE4CodeGen_Private::EPropertyClass::Int, "Minutes", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, Minutes), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Hours = { UE4CodeGen_Private::EPropertyClass::Int, "Hours", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, Hours), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Days = { UE4CodeGen_Private::EPropertyClass::Int, "Days", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTimespan2_Parms, Days), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FractionNano,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Seconds,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Minutes,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Hours,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Days,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a Timespan struct" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeTimespan2", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeTimespan2_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeTransform()
	{
		struct KismetMathLibrary_eventMakeTransform_Parms
		{
			FVector Location;
			FRotator Rotation;
			FVector Scale;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTransform_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Scale = { UE4CodeGen_Private::EPropertyClass::Struct, "Scale", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTransform_Parms, Scale), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Rotation = { UE4CodeGen_Private::EPropertyClass::Struct, "Rotation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTransform_Parms, Rotation), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Location = { UE4CodeGen_Private::EPropertyClass::Struct, "Location", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeTransform_Parms, Location), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Scale,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Rotation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Location,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "Scale", "1,1,1" },
				{ "ToolTip", "Make a transform from location, rotation and scale" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector()
	{
		struct KismetMathLibrary_eventMakeVector_Parms
		{
			float X;
			float Y;
			float Z;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Z = { UE4CodeGen_Private::EPropertyClass::Float, "Z", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector_Parms, Z), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Float, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector_Parms, Y), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Float, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector_Parms, X), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Z,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a vector {X, Y, Z}" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MakeVector2D()
	{
		struct KismetMathLibrary_eventMakeVector2D_Parms
		{
			float X;
			float Y;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Y = { UE4CodeGen_Private::EPropertyClass::Float, "Y", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector2D_Parms, Y), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_X = { UE4CodeGen_Private::EPropertyClass::Float, "X", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMakeVector2D_Parms, X), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Y,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_X,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "Keywords", "construct build" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NativeMakeFunc", "" },
				{ "ToolTip", "Makes a 2d vector {X, Y}" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MakeVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMakeVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeClamped()
	{
		struct KismetMathLibrary_eventMapRangeClamped_Parms
		{
			float Value;
			float InRangeA;
			float InRangeB;
			float OutRangeA;
			float OutRangeB;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutRangeB = { UE4CodeGen_Private::EPropertyClass::Float, "OutRangeB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, OutRangeB), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutRangeA = { UE4CodeGen_Private::EPropertyClass::Float, "OutRangeA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, OutRangeA), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InRangeB = { UE4CodeGen_Private::EPropertyClass::Float, "InRangeB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, InRangeB), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InRangeA = { UE4CodeGen_Private::EPropertyClass::Float, "InRangeA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, InRangeA), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeClamped_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRangeB,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRangeA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRangeB,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRangeA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "Keywords", "get mapped value" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Value mapped from one range into another where the Value is clamped to the Input Range.  (e.g. 0.5 normalized from the range 0->1 to 0->50 would result in 25)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MapRangeClamped", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMapRangeClamped_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MapRangeUnclamped()
	{
		struct KismetMathLibrary_eventMapRangeUnclamped_Parms
		{
			float Value;
			float InRangeA;
			float InRangeB;
			float OutRangeA;
			float OutRangeB;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutRangeB = { UE4CodeGen_Private::EPropertyClass::Float, "OutRangeB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, OutRangeB), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutRangeA = { UE4CodeGen_Private::EPropertyClass::Float, "OutRangeA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, OutRangeA), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InRangeB = { UE4CodeGen_Private::EPropertyClass::Float, "InRangeB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, InRangeB), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InRangeA = { UE4CodeGen_Private::EPropertyClass::Float, "InRangeA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, InRangeA), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMapRangeUnclamped_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRangeB,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRangeA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRangeB,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InRangeA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "Keywords", "get mapped value" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Value mapped from one range into another.  (e.g. 20 normalized from the range 10->50 to 20->40 would result in 25)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MapRangeUnclamped", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMapRangeUnclamped_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Max()
	{
		struct KismetMathLibrary_eventMax_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMax_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMax_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMax_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MAX" },
				{ "DisplayName", "Max (int)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the maximum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Max", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMax_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfByteArray()
	{
		struct KismetMathLibrary_eventMaxOfByteArray_Parms
		{
			TArray<uint8> ByteArray;
			int32 IndexOfMaxValue;
			uint8 MaxValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_MaxValue = { UE4CodeGen_Private::EPropertyClass::Byte, "MaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfByteArray_Parms, MaxValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMaxValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfByteArray_Parms, IndexOfMaxValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ByteArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_ByteArray = { UE4CodeGen_Private::EPropertyClass::Array, "ByteArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfByteArray_Parms, ByteArray), METADATA_PARAMS(NewProp_ByteArray_MetaData, ARRAY_COUNT(NewProp_ByteArray_MetaData)) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ByteArray_Inner = { UE4CodeGen_Private::EPropertyClass::Byte, "ByteArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ByteArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ByteArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns max of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MaxOfByteArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMaxOfByteArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfFloatArray()
	{
		struct KismetMathLibrary_eventMaxOfFloatArray_Parms
		{
			TArray<float> FloatArray;
			int32 IndexOfMaxValue;
			float MaxValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxValue = { UE4CodeGen_Private::EPropertyClass::Float, "MaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfFloatArray_Parms, MaxValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMaxValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfFloatArray_Parms, IndexOfMaxValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FloatArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_FloatArray = { UE4CodeGen_Private::EPropertyClass::Array, "FloatArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfFloatArray_Parms, FloatArray), METADATA_PARAMS(NewProp_FloatArray_MetaData, ARRAY_COUNT(NewProp_FloatArray_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_FloatArray_Inner = { UE4CodeGen_Private::EPropertyClass::Float, "FloatArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FloatArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FloatArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns max of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MaxOfFloatArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMaxOfFloatArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MaxOfIntArray()
	{
		struct KismetMathLibrary_eventMaxOfIntArray_Parms
		{
			TArray<int32> IntArray;
			int32 IndexOfMaxValue;
			int32 MaxValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_MaxValue = { UE4CodeGen_Private::EPropertyClass::Int, "MaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfIntArray_Parms, MaxValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMaxValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMaxValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfIntArray_Parms, IndexOfMaxValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IntArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_IntArray = { UE4CodeGen_Private::EPropertyClass::Array, "IntArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMaxOfIntArray_Parms, IntArray), METADATA_PARAMS(NewProp_IntArray_MetaData, ARRAY_COUNT(NewProp_IntArray_MetaData)) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IntArray_Inner = { UE4CodeGen_Private::EPropertyClass::Int, "IntArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMaxValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IntArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IntArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns max of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MaxOfIntArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMaxOfIntArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Min()
	{
		struct KismetMathLibrary_eventMin_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMin_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "MIN" },
				{ "DisplayName", "Min (int)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minimum value of A and B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Min", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinimumAreaRectangle()
	{
		struct KismetMathLibrary_eventMinimumAreaRectangle_Parms
		{
			UObject* WorldContextObject;
			TArray<FVector> InVerts;
			FVector SampleSurfaceNormal;
			FVector OutRectCenter;
			FRotator OutRectRotation;
			float OutSideLengthX;
			float OutSideLengthY;
			bool bDebugDraw;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_bDebugDraw_SetBit = [](void* Obj){ ((KismetMathLibrary_eventMinimumAreaRectangle_Parms*)Obj)->bDebugDraw = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bDebugDraw = { UE4CodeGen_Private::EPropertyClass::Bool, "bDebugDraw", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventMinimumAreaRectangle_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bDebugDraw_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutSideLengthY = { UE4CodeGen_Private::EPropertyClass::Float, "OutSideLengthY", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, OutSideLengthY), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_OutSideLengthX = { UE4CodeGen_Private::EPropertyClass::Float, "OutSideLengthX", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, OutSideLengthX), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_OutRectRotation = { UE4CodeGen_Private::EPropertyClass::Struct, "OutRectRotation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, OutRectRotation), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_OutRectCenter = { UE4CodeGen_Private::EPropertyClass::Struct, "OutRectCenter", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, OutRectCenter), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_SampleSurfaceNormal_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SampleSurfaceNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "SampleSurfaceNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, SampleSurfaceNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_SampleSurfaceNormal_MetaData, ARRAY_COUNT(NewProp_SampleSurfaceNormal_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InVerts_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_InVerts = { UE4CodeGen_Private::EPropertyClass::Array, "InVerts", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, InVerts), METADATA_PARAMS(NewProp_InVerts_MetaData, ARRAY_COUNT(NewProp_InVerts_MetaData)) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVerts_Inner = { UE4CodeGen_Private::EPropertyClass::Struct, "InVerts", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_WorldContextObject = { UE4CodeGen_Private::EPropertyClass::Object, "WorldContextObject", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinimumAreaRectangle_Parms, WorldContextObject), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bDebugDraw,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutSideLengthY,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutSideLengthX,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRectRotation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_OutRectCenter,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SampleSurfaceNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVerts,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVerts_Inner,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_WorldContextObject,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "CallableWithoutWorldContext", "" },
				{ "Category", "Math|Geometry" },
				{ "CPP_Default_bDebugDraw", "false" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Finds the minimum area rectangle that encloses all of the points in InVerts\nUses algorithm found in http://www.geometrictools.com/Documentation/MinimumAreaRectangle.pdf\n\n@param               InVerts - Points to enclose in the rectangle\n@outparam    OutRectCenter - Center of the enclosing rectangle\n@outparam    OutRectSideA - Vector oriented and sized to represent one edge of the enclosing rectangle, orthogonal to OutRectSideB\n@outparam    OutRectSideB - Vector oriented and sized to represent one edge of the enclosing rectangle, orthogonal to OutRectSideA" },
				{ "WorldContext", "WorldContextObject" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MinimumAreaRectangle", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04C22405, sizeof(KismetMathLibrary_eventMinimumAreaRectangle_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfByteArray()
	{
		struct KismetMathLibrary_eventMinOfByteArray_Parms
		{
			TArray<uint8> ByteArray;
			int32 IndexOfMinValue;
			uint8 MinValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_MinValue = { UE4CodeGen_Private::EPropertyClass::Byte, "MinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfByteArray_Parms, MinValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMinValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfByteArray_Parms, IndexOfMinValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ByteArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_ByteArray = { UE4CodeGen_Private::EPropertyClass::Array, "ByteArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfByteArray_Parms, ByteArray), METADATA_PARAMS(NewProp_ByteArray_MetaData, ARRAY_COUNT(NewProp_ByteArray_MetaData)) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ByteArray_Inner = { UE4CodeGen_Private::EPropertyClass::Byte, "ByteArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ByteArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ByteArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns min of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MinOfByteArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMinOfByteArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfFloatArray()
	{
		struct KismetMathLibrary_eventMinOfFloatArray_Parms
		{
			TArray<float> FloatArray;
			int32 IndexOfMinValue;
			float MinValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MinValue = { UE4CodeGen_Private::EPropertyClass::Float, "MinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfFloatArray_Parms, MinValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMinValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfFloatArray_Parms, IndexOfMinValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_FloatArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_FloatArray = { UE4CodeGen_Private::EPropertyClass::Array, "FloatArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfFloatArray_Parms, FloatArray), METADATA_PARAMS(NewProp_FloatArray_MetaData, ARRAY_COUNT(NewProp_FloatArray_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_FloatArray_Inner = { UE4CodeGen_Private::EPropertyClass::Float, "FloatArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FloatArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_FloatArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns min of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MinOfFloatArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMinOfFloatArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MinOfIntArray()
	{
		struct KismetMathLibrary_eventMinOfIntArray_Parms
		{
			TArray<int32> IntArray;
			int32 IndexOfMinValue;
			int32 MinValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_MinValue = { UE4CodeGen_Private::EPropertyClass::Int, "MinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfIntArray_Parms, MinValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IndexOfMinValue = { UE4CodeGen_Private::EPropertyClass::Int, "IndexOfMinValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfIntArray_Parms, IndexOfMinValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_IntArray_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_IntArray = { UE4CodeGen_Private::EPropertyClass::Array, "IntArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMinOfIntArray_Parms, IntArray), METADATA_PARAMS(NewProp_IntArray_MetaData, ARRAY_COUNT(NewProp_IntArray_MetaData)) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_IntArray_Inner = { UE4CodeGen_Private::EPropertyClass::Int, "IntArray", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IndexOfMinValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IntArray,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_IntArray_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns min of all array entries and the index at which it was found. Returns value of 0 and index of -1 if the supplied array is empty." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MinOfIntArray", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventMinOfIntArray_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MirrorVectorByNormal()
	{
		struct KismetMathLibrary_eventMirrorVectorByNormal_Parms
		{
			FVector InVect;
			FVector InNormal;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMirrorVectorByNormal_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "InNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMirrorVectorByNormal_Parms, InNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVect = { UE4CodeGen_Private::EPropertyClass::Struct, "InVect", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMirrorVectorByNormal_Parms, InVect), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVect,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Mirrors a vector by a normal" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MirrorVectorByNormal", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMirrorVectorByNormal_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_ByteByte()
	{
		struct KismetMathLibrary_eventMultiply_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_ByteByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "Byte * Byte" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Multiplication (A * B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiply_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_FloatFloat()
	{
		struct KismetMathLibrary_eventMultiply_FloatFloat_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "float * float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Multiplication (A * B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiply_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntFloat()
	{
		struct KismetMathLibrary_eventMultiply_IntFloat_Parms
		{
			int32 A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "int * float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Multiplication (A * B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_IntFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiply_IntFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntInt()
	{
		struct KismetMathLibrary_eventMultiply_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "integer * integer" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Multiplication (A * B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiply_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorFloat()
	{
		struct KismetMathLibrary_eventMultiply_LinearColorFloat_Parms
		{
			FLinearColor A;
			float B;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorFloat_Parms, A), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "LinearColor * Float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise multiplication of a linear color by a float (F*R, F*G, F*B, F*A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_LinearColorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_LinearColorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorLinearColor()
	{
		struct KismetMathLibrary_eventMultiply_LinearColorLinearColor_Parms
		{
			FLinearColor A;
			FLinearColor B;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorLinearColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorLinearColor_Parms, B), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_LinearColorLinearColor_Parms, A), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "LinearColor * (LinearColor)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise multiplication of two linear colors (R*R, G*G, B*B, A*A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_LinearColorLinearColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_LinearColorLinearColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorFloat()
	{
		struct KismetMathLibrary_eventMultiply_RotatorFloat_Parms
		{
			FRotator A;
			float B;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorFloat_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "ScaleRotator" },
				{ "Keywords", "* multiply rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns rotator representing rotator A scaled by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_RotatorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_RotatorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorInt()
	{
		struct KismetMathLibrary_eventMultiply_RotatorInt_Parms
		{
			FRotator A;
			int32 B;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorInt_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_RotatorInt_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "ScaleRotator (int)" },
				{ "Keywords", "* multiply rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns rotator representing rotator A scaled by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_RotatorInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_RotatorInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_TimespanFloat()
	{
		struct KismetMathLibrary_eventMultiply_TimespanFloat_Parms
		{
			FTimespan A;
			float Scalar;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_TimespanFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Scalar = { UE4CodeGen_Private::EPropertyClass::Float, "Scalar", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_TimespanFloat_Parms, Scalar), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_TimespanFloat_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Scalar,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "Timespan * float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Scalar multiplication (A * s)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_TimespanFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_TimespanFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DFloat()
	{
		struct KismetMathLibrary_eventMultiply_Vector2DFloat_Parms
		{
			FVector2D A;
			float B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DFloat_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "vector2d * float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Vector A scaled by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_Vector2DFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_Vector2DFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventMultiply_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "vector2d * vector2d" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise Vector multiplication (Result = {A.x*B.x, A.y*B.y})" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorFloat()
	{
		struct KismetMathLibrary_eventMultiply_VectorFloat_Parms
		{
			FVector A;
			float B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorFloat_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "vector * float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Scales Vector A by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_VectorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_VectorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorInt()
	{
		struct KismetMathLibrary_eventMultiply_VectorInt_Parms
		{
			FVector A;
			int32 B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorInt_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorInt_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "vector * int" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Scales Vector A by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_VectorInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_VectorInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorVector()
	{
		struct KismetMathLibrary_eventMultiply_VectorVector_Parms
		{
			FVector A;
			FVector B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiply_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "*" },
				{ "DisplayName", "vector * vector" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Element-wise Vector multiplication (Result = {A.x*B.x, A.y*B.y, A.z*B.z})" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Multiply_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventMultiply_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyByPi()
	{
		struct KismetMathLibrary_eventMultiplyByPi_Parms
		{
			float Value;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiplyByPi_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiplyByPi_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "Keywords", "* multiply" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Multiplies the input value by pi." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MultiplyByPi", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiplyByPi_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_MultiplyMultiply_FloatFloat()
	{
		struct KismetMathLibrary_eventMultiplyMultiply_FloatFloat_Parms
		{
			float Base;
			float Exp;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiplyMultiply_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Exp = { UE4CodeGen_Private::EPropertyClass::Float, "Exp", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiplyMultiply_FloatFloat_Parms, Exp), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Base = { UE4CodeGen_Private::EPropertyClass::Float, "Base", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventMultiplyMultiply_FloatFloat_Parms, Base), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Exp,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Base,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Power" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Power (Base to the Exp-th power)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "MultiplyMultiply_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventMultiplyMultiply_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_FloatFloat()
	{
		struct KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms
		{
			float A;
			float B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CPP_Default_ErrorTolerance", "0.000001" },
				{ "DisplayName", "Nearly Equal (float)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is nearly equal to B (|A - B| < ErrorTolerance)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NearlyEqual_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNearlyEqual_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_TransformTransform()
	{
		struct KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms
		{
			FTransform A;
			FTransform B;
			float LocationTolerance;
			float RotationTolerance;
			float Scale3DTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Scale3DTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "Scale3DTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms, Scale3DTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_RotationTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "RotationTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms, RotationTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_LocationTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "LocationTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms, LocationTolerance), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Scale3DTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RotationTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_LocationTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "CPP_Default_LocationTolerance", "0.000100" },
				{ "CPP_Default_RotationTolerance", "0.000100" },
				{ "CPP_Default_Scale3DTolerance", "0.000100" },
				{ "DisplayName", "Nearly Equal (transform)" },
				{ "Keywords", "== equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if transform A is nearly equal to B\n@param LocationTolerance        How close position of transforms need to be to be considered equal\n@param RotationTolerance        How close rotations of transforms need to be to be considered equal\n@param Scale3DTolerance         How close scale of transforms need to be to be considered equal" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NearlyEqual_TransformTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventNearlyEqual_TransformTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateRotator()
	{
		struct KismetMathLibrary_eventNegateRotator_Parms
		{
			FRotator A;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNegateRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNegateRotator_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "InvertRotator" },
				{ "Keywords", "rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Negate a rotator" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NegateRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNegateRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NegateVector()
	{
		struct KismetMathLibrary_eventNegateVector_Parms
		{
			FVector A;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNegateVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNegateVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Negate a vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NegateVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNegateVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal()
	{
		struct KismetMathLibrary_eventNormal_Parms
		{
			FVector A;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormal_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormal_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "Normalize" },
				{ "Keywords", "Unit Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a unit normal version of the FVector A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Normal", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNormal_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Normal2D()
	{
		struct KismetMathLibrary_eventNormal2D_Parms
		{
			FVector2D A;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormal2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormal2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "DisplayName", "Normalize2D" },
				{ "Keywords", "Unit Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a unit normal version of the vector2d A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Normal2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNormal2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeAxis()
	{
		struct KismetMathLibrary_eventNormalizeAxis_Parms
		{
			float Angle;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeAxis_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Angle = { UE4CodeGen_Private::EPropertyClass::Float, "Angle", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeAxis_Parms, Angle), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Angle,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Clamps an angle to the range of [-180, 180].\n\n@param Angle The Angle to clamp.\n@return The clamped angle." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NormalizeAxis", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNormalizeAxis_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizedDeltaRotator()
	{
		struct KismetMathLibrary_eventNormalizedDeltaRotator_Parms
		{
			FRotator A;
			FRotator B;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizedDeltaRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizedDeltaRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizedDeltaRotator_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "Delta (Rotator)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Normalized A-B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NormalizedDeltaRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNormalizedDeltaRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NormalizeToRange()
	{
		struct KismetMathLibrary_eventNormalizeToRange_Parms
		{
			float Value;
			float RangeMin;
			float RangeMax;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeToRange_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_RangeMax = { UE4CodeGen_Private::EPropertyClass::Float, "RangeMax", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeToRange_Parms, RangeMax), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_RangeMin = { UE4CodeGen_Private::EPropertyClass::Float, "RangeMin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeToRange_Parms, RangeMin), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Value = { UE4CodeGen_Private::EPropertyClass::Float, "Value", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNormalizeToRange_Parms, Value), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RangeMax,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RangeMin,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Value,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Value normalized to the given range.  (e.g. 20 normalized to the range 10->50 would result in 0.25)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NormalizeToRange", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNormalizeToRange_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_Int()
	{
		struct KismetMathLibrary_eventNot_Int_Parms
		{
			int32 A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNot_Int_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNot_Int_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "~" },
				{ "DisplayName", "Bitwise NOT" },
				{ "Keywords", "~ not" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Bitwise NOT (~A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Not_Int", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNot_Int_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Not_PreBool()
	{
		struct KismetMathLibrary_eventNot_PreBool_Parms
		{
			bool A;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNot_PreBool_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNot_PreBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNot_PreBool_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNot_PreBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CompactNodeTitle", "NOT" },
				{ "DisplayName", "NOT Boolean" },
				{ "Keywords", "! not negate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the logical complement of the Boolean value (NOT A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Not_PreBool", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNot_PreBool_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_BoolBool()
	{
		struct KismetMathLibrary_eventNotEqual_BoolBool_Parms
		{
			bool A;
			bool B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_BoolBool_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_B_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_BoolBool_Parms*)Obj)->B = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Bool, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_B_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_A_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_BoolBool_Parms*)Obj)->A = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Bool, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_BoolBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_A_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Boolean" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual Boolean" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_BoolBool", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_BoolBool_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ByteByte()
	{
		struct KismetMathLibrary_eventNotEqual_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_ByteByte_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_ByteByte_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (Byte)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is not equal to B (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ClassClass()
	{
		struct KismetMathLibrary_eventNotEqual_ClassClass_Parms
		{
			UClass* A;
			UClass* B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_ClassClass_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_ClassClass_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Class, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ClassClass_Parms, B), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Class, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ClassClass_Parms, A), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (Class)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_ClassClass", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_ClassClass_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (DateTime)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNotEqual_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_FloatFloat()
	{
		struct KismetMathLibrary_eventNotEqual_FloatFloat_Parms
		{
			float A;
			float B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_FloatFloat_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_FloatFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (float)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A does not equal B (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_IntInt()
	{
		struct KismetMathLibrary_eventNotEqual_IntInt_Parms
		{
			int32 A;
			int32 B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_IntInt_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_IntInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (integer)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A is not equal to B (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_NameName()
	{
		struct KismetMathLibrary_eventNotEqual_NameName_Parms
		{
			FName A;
			FName B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_NameName_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_NameName_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FNamePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Name, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_NameName_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FNamePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Name, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_NameName_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities|Name" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (Name)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_NameName", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_NameName_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ObjectObject()
	{
		struct KismetMathLibrary_eventNotEqual_ObjectObject_Parms
		{
			UObject* A;
			UObject* B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_ObjectObject_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_ObjectObject_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Object, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ObjectObject_Parms, B), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Object, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_ObjectObject_Parms, A), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (Object)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if A and B are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_ObjectObject", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventNotEqual_ObjectObject_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_RotatorRotator()
	{
		struct KismetMathLibrary_eventNotEqual_RotatorRotator_Parms
		{
			FRotator A;
			FRotator B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_RotatorRotator_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_RotatorRotator_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_RotatorRotator_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_RotatorRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_RotatorRotator_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "CompactNodeTitle", "!=" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Not Equal (Rotator)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if rotator A is not equal to rotator B (A != B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_RotatorRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNotEqual_RotatorRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_TimespanTimespan()
	{
		struct KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "!=" },
				{ "DisplayName", "NotEqual (Timespan)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if the values are not equal (A != B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNotEqual_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "!=" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Not Equal (vector2D)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if vector2D A is not equal to vector2D B (A != B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNotEqual_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_NotEqual_VectorVector()
	{
		struct KismetMathLibrary_eventNotEqual_VectorVector_Parms
		{
			FVector A;
			FVector B;
			float ErrorTolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventNotEqual_VectorVector_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventNotEqual_VectorVector_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ErrorTolerance = { UE4CodeGen_Private::EPropertyClass::Float, "ErrorTolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_VectorVector_Parms, ErrorTolerance), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNotEqual_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ErrorTolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "!=" },
				{ "CPP_Default_ErrorTolerance", "0.000100" },
				{ "DisplayName", "Not Equal (vector)" },
				{ "Keywords", "!= not equal" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns true if vector A is not equal to vector B (A != B) within a specified error tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "NotEqual_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNotEqual_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Now()
	{
		struct KismetMathLibrary_eventNow_Parms
		{
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventNow_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "Now" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the local date and time on this computer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Now", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventNow_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Or_IntInt()
	{
		struct KismetMathLibrary_eventOr_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventOr_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventOr_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventOr_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CommutativeAssociativeBinaryOperator", "true" },
				{ "CompactNodeTitle", "|" },
				{ "DisplayName", "Bitwise OR" },
				{ "Keywords", "| or" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Bitwise OR (A | B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Or_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventOr_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_ByteByte()
	{
		struct KismetMathLibrary_eventPercent_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_ByteByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "%" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "% (Byte)" },
				{ "Keywords", "% modulus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Modulo (A % B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Percent_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventPercent_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_FloatFloat()
	{
		struct KismetMathLibrary_eventPercent_FloatFloat_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "%" },
				{ "CPP_Default_B", "1.000000" },
				{ "CustomThunk", "true" },
				{ "DisplayName", "% (float)" },
				{ "Keywords", "% modulus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Modulo (A % B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Percent_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventPercent_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Percent_IntInt()
	{
		struct KismetMathLibrary_eventPercent_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPercent_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "%" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "% (integer)" },
				{ "Keywords", "% modulus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Modulo (A % B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Percent_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventPercent_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_PointsAreCoplanar()
	{
		struct KismetMathLibrary_eventPointsAreCoplanar_Parms
		{
			TArray<FVector> Points;
			float Tolerance;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventPointsAreCoplanar_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventPointsAreCoplanar_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Tolerance = { UE4CodeGen_Private::EPropertyClass::Float, "Tolerance", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPointsAreCoplanar_Parms, Tolerance), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Points_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FArrayPropertyParams NewProp_Points = { UE4CodeGen_Private::EPropertyClass::Array, "Points", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventPointsAreCoplanar_Parms, Points), METADATA_PARAMS(NewProp_Points_MetaData, ARRAY_COUNT(NewProp_Points_MetaData)) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Points_Inner = { UE4CodeGen_Private::EPropertyClass::Struct, "Points", RF_Public|RF_Transient|RF_MarkAsNative, 0x0000000000000000, 1, nullptr, 0, Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Tolerance,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Points,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Points_Inner,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Geometry" },
				{ "CPP_Default_Tolerance", "0.100000" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Determines whether a given set of points are coplanar, with a tolerance. Any three points or less are always coplanar.\n\n@param Points - The set of points to determine coplanarity for.\n@param Tolerance - Larger numbers means more variance is allowed.\n\n@return Whether the points are relatively coplanar, based on the tolerance" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "PointsAreCoplanar", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14422401, sizeof(KismetMathLibrary_eventPointsAreCoplanar_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectPointOnToPlane()
	{
		struct KismetMathLibrary_eventProjectPointOnToPlane_Parms
		{
			FVector Point;
			FVector PlaneBase;
			FVector PlaneNormal;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectPointOnToPlane_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_PlaneNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "PlaneNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectPointOnToPlane_Parms, PlaneNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_PlaneBase = { UE4CodeGen_Private::EPropertyClass::Struct, "PlaneBase", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectPointOnToPlane_Parms, PlaneBase), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Point = { UE4CodeGen_Private::EPropertyClass::Struct, "Point", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectPointOnToPlane_Parms, Point), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_PlaneNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_PlaneBase,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Point,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "ProjectOnTo" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Projects a point onto a plane defined by a point on the plane and a plane normal.\n\n@param  Point Point to project onto the plane.\n@param  PlaneBase A point on the plane.\n@param  PlaneNormal Normal of the plane.\n@return Point projected onto the plane." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ProjectPointOnToPlane", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventProjectPointOnToPlane_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToPlane()
	{
		struct KismetMathLibrary_eventProjectVectorOnToPlane_Parms
		{
			FVector V;
			FVector PlaneNormal;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToPlane_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_PlaneNormal = { UE4CodeGen_Private::EPropertyClass::Struct, "PlaneNormal", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToPlane_Parms, PlaneNormal), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_V = { UE4CodeGen_Private::EPropertyClass::Struct, "V", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToPlane_Parms, V), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_PlaneNormal,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_V,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "ProjectOnTo" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Projects a vector onto a plane defined by a normalized vector (PlaneNormal).\n\n@param  V Vector to project onto the plane.\n@param  PlaneNormal Normal of the plane.\n@return Vector projected onto the plane." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ProjectVectorOnToPlane", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventProjectVectorOnToPlane_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToVector()
	{
		struct KismetMathLibrary_eventProjectVectorOnToVector_Parms
		{
			FVector V;
			FVector Target;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToVector_Parms, Target), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_V = { UE4CodeGen_Private::EPropertyClass::Struct, "V", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventProjectVectorOnToVector_Parms, V), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_V,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "Keywords", "ProjectOnTo" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Projects one vector (V) onto another (Target) and returns the projected vector.\nIf Target is nearly zero in length, returns the zero vector.\n\n@param  V Vector to project.\n@param  Target Vector on which we are projecting.\n@return V projected on to Target." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ProjectVectorOnToVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventProjectVectorOnToVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RadiansToDegrees()
	{
		struct KismetMathLibrary_eventRadiansToDegrees_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRadiansToDegrees_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRadiansToDegrees_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "R2D" },
				{ "DisplayName", "Radians To Degrees" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns degrees value based on the input radians" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RadiansToDegrees", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRadiansToDegrees_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBool()
	{
		struct KismetMathLibrary_eventRandomBool_Parms
		{
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomBool_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomBool_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a uniformly distributed random bool" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomBool", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomBool_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolFromStream()
	{
		struct KismetMathLibrary_eventRandomBoolFromStream_Parms
		{
			FRandomStream Stream;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomBoolFromStream_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomBoolFromStream_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomBoolFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random bool" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomBoolFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomBoolFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeight()
	{
		struct KismetMathLibrary_eventRandomBoolWithWeight_Parms
		{
			float Weight;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomBoolWithWeight_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomBoolWithWeight_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Weight = { UE4CodeGen_Private::EPropertyClass::Float, "Weight", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomBoolWithWeight_Parms, Weight), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Weight,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Get a random chance with the specified weight. Range of weight is 0.0 - 1.0 E.g.,\n             Weight = .6 return value = True 60% of the time" },
				{ "Weight", "0.5" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomBoolWithWeight", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomBoolWithWeight_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeightFromStream()
	{
		struct KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms
		{
			float Weight;
			FRandomStream RandomStream;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RandomStream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_RandomStream = { UE4CodeGen_Private::EPropertyClass::Struct, "RandomStream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms, RandomStream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_RandomStream_MetaData, ARRAY_COUNT(NewProp_RandomStream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Weight = { UE4CodeGen_Private::EPropertyClass::Float, "Weight", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms, Weight), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RandomStream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Weight,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Get a random chance with the specified weight. Range of weight is 0.0 - 1.0 E.g.,\n              Weight = .6 return value = True 60% of the time" },
				{ "Weight", "0.5" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomBoolWithWeightFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomBoolWithWeightFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloat()
	{
		struct KismetMathLibrary_eventRandomFloat_Parms
		{
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random float between 0 and 1" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatFromStream()
	{
		struct KismetMathLibrary_eventRandomFloatFromStream_Parms
		{
			FRandomStream Stream;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatFromStream_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random float between 0 and 1" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomFloatFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomFloatFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRange()
	{
		struct KismetMathLibrary_eventRandomFloatInRange_Parms
		{
			float Min;
			float Max;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRange_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Float, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRange_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Float, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRange_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Generate a random number between Min and Max" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomFloatInRange", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomFloatInRange_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRangeFromStream()
	{
		struct KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms
		{
			float Min;
			float Max;
			FRandomStream Stream;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Float, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Float, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Generate a random number between Min and Max" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomFloatInRangeFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomFloatInRangeFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomInteger()
	{
		struct KismetMathLibrary_eventRandomInteger_Parms
		{
			int32 Max;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomInteger_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomInteger_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a uniformly distributed random number between 0 and Max - 1" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomInteger", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomInteger_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerFromStream()
	{
		struct KismetMathLibrary_eventRandomIntegerFromStream_Parms
		{
			int32 Max;
			FRandomStream Stream;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerFromStream_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerFromStream_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a uniformly distributed random number between 0 and Max - 1" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomIntegerFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomIntegerFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRange()
	{
		struct KismetMathLibrary_eventRandomIntegerInRange_Parms
		{
			int32 Min;
			int32 Max;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRange_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRange_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Int, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRange_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Return a random integer between Min and Max (>= Min and <= Max)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomIntegerInRange", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRandomIntegerInRange_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRangeFromStream()
	{
		struct KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms
		{
			int32 Min;
			int32 Max;
			FRandomStream Stream;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Max = { UE4CodeGen_Private::EPropertyClass::Int, "Max", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms, Max), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Min = { UE4CodeGen_Private::EPropertyClass::Int, "Min", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms, Min), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Max,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Min,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Return a random integer between Min and Max (>= Min and <= Max)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomIntegerInRangeFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomIntegerInRangeFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomPointInBoundingBox()
	{
		struct KismetMathLibrary_eventRandomPointInBoundingBox_Parms
		{
			FVector Origin;
			FVector BoxExtent;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomPointInBoundingBox_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_BoxExtent_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_BoxExtent = { UE4CodeGen_Private::EPropertyClass::Struct, "BoxExtent", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomPointInBoundingBox_Parms, BoxExtent), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_BoxExtent_MetaData, ARRAY_COUNT(NewProp_BoxExtent_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Origin_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Origin = { UE4CodeGen_Private::EPropertyClass::Struct, "Origin", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomPointInBoundingBox_Parms, Origin), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_Origin_MetaData, ARRAY_COUNT(NewProp_Origin_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BoxExtent,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Origin,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random point within the specified bounding box" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomPointInBoundingBox", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomPointInBoundingBox_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotator()
	{
		struct KismetMathLibrary_eventRandomRotator_Parms
		{
			bool bRoll;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bRoll_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomRotator_Parms*)Obj)->bRoll = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bRoll = { UE4CodeGen_Private::EPropertyClass::Bool, "bRoll", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomRotator_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bRoll_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bRoll,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "CPP_Default_bRoll", "false" },
				{ "Keywords", "rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Generates a random rotation, with optional random roll." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomRotatorFromStream()
	{
		struct KismetMathLibrary_eventRandomRotatorFromStream_Parms
		{
			bool bRoll;
			FRandomStream Stream;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomRotatorFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomRotatorFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			auto NewProp_bRoll_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRandomRotatorFromStream_Parms*)Obj)->bRoll = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bRoll = { UE4CodeGen_Private::EPropertyClass::Bool, "bRoll", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRandomRotatorFromStream_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bRoll_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bRoll,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Create a random rotation" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomRotatorFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomRotatorFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVector()
	{
		struct KismetMathLibrary_eventRandomUnitVector_Parms
		{
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random vector with length of 1" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomUnitVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorFromStream()
	{
		struct KismetMathLibrary_eventRandomUnitVectorFromStream_Parms
		{
			FRandomStream Stream;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random vector with length of 1.0" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomUnitVectorFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegrees()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInConeInDegrees_Parms
		{
			FVector ConeDir;
			float ConeHalfAngleInDegrees;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegrees_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ConeHalfAngleInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "ConeHalfAngleInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegrees_Parms, ConeHalfAngleInDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegrees_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeHalfAngleInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\n@param ConeDir                                       The base \"center\" direction of the cone.\n@param ConeHalfAngleInDegrees        The half-angle of the cone (from ConeDir to edge), in degrees." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInConeInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomUnitVectorInConeInDegrees_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegreesFromStream()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms
		{
			FVector ConeDir;
			float ConeHalfAngleInDegrees;
			FRandomStream Stream;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ConeHalfAngleInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "ConeHalfAngleInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms, ConeHalfAngleInDegrees), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConeDir_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_ConeDir_MetaData, ARRAY_COUNT(NewProp_ConeDir_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeHalfAngleInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\n@param ConeDir                                       The base \"center\" direction of the cone.\n@param ConeHalfAngleInDegrees        The half-angle of the cone (from ConeDir to edge), in degrees.\n@param Stream                                        The random stream from which to obtain the vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInConeInDegreesFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomUnitVectorInConeInDegreesFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadians()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInConeInRadians_Parms
		{
			FVector ConeDir;
			float ConeHalfAngleInRadians;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadians_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ConeHalfAngleInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "ConeHalfAngleInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadians_Parms, ConeHalfAngleInRadians), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadians_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeHalfAngleInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\n@param ConeDir                                       The base \"center\" direction of the cone.\n@param ConeHalfAngleInRadians        The half-angle of the cone (from ConeDir to edge), in radians." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInConeInRadians", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomUnitVectorInConeInRadians_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadiansFromStream()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms
		{
			FVector ConeDir;
			float ConeHalfAngleInRadians;
			FRandomStream Stream;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ConeHalfAngleInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "ConeHalfAngleInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms, ConeHalfAngleInRadians), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConeDir_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_ConeDir_MetaData, ARRAY_COUNT(NewProp_ConeDir_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeHalfAngleInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\n@param ConeDir                                       The base \"center\" direction of the cone.\n@param ConeHalfAngleInRadians        The half-angle of the cone (from ConeDir to edge), in radians.\n@param Stream                                        The random stream from which to obtain the vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInConeInRadiansFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomUnitVectorInConeInRadiansFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegrees()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms
		{
			FVector ConeDir;
			float MaxYawInDegrees;
			float MaxPitchInDegrees;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxPitchInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MaxPitchInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms, MaxPitchInDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxYawInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MaxYawInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms, MaxYawInDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxPitchInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxYawInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector Pitch Yaw" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\nThe shape of the cone can be modified according to the yaw and pitch angles.\n\n@param MaxYawInDegrees        The yaw angle of the cone (from ConeDir to horizontal edge), in degrees.\n@param MaxPitchInDegrees      The pitch angle of the cone (from ConeDir to vertical edge), in degrees." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInEllipticalConeInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegrees_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegreesFromStream()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms
		{
			FVector ConeDir;
			float MaxYawInDegrees;
			float MaxPitchInDegrees;
			FRandomStream Stream;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxPitchInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MaxPitchInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms, MaxPitchInDegrees), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxYawInDegrees = { UE4CodeGen_Private::EPropertyClass::Float, "MaxYawInDegrees", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms, MaxYawInDegrees), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConeDir_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_ConeDir_MetaData, ARRAY_COUNT(NewProp_ConeDir_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxPitchInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxYawInDegrees,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\nThe shape of the cone can be modified according to the yaw and pitch angles.\n\n@param MaxYawInDegrees        The yaw angle of the cone (from ConeDir to horizontal edge), in degrees.\n@param MaxPitchInDegrees      The pitch angle of the cone (from ConeDir to vertical edge), in degrees.\n@param Stream                         The random stream from which to obtain the vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInEllipticalConeInDegreesFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInDegreesFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadians()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms
		{
			FVector ConeDir;
			float MaxYawInRadians;
			float MaxPitchInRadians;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxPitchInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "MaxPitchInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms, MaxPitchInRadians), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxYawInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "MaxYawInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms, MaxYawInRadians), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxPitchInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxYawInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector Pitch Yaw" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "NotBlueprintThreadSafe", "" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\nThe shape of the cone can be modified according to the yaw and pitch angles.\n\n@param MaxYawInRadians        The yaw angle of the cone (from ConeDir to horizontal edge), in radians.\n@param MaxPitchInRadians      The pitch angle of the cone (from ConeDir to vertical edge), in radians." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInEllipticalConeInRadians", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadians_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadiansFromStream()
	{
		struct KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms
		{
			FVector ConeDir;
			float MaxYawInRadians;
			float MaxPitchInRadians;
			FRandomStream Stream;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxPitchInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "MaxPitchInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms, MaxPitchInRadians), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_MaxYawInRadians = { UE4CodeGen_Private::EPropertyClass::Float, "MaxYawInRadians", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms, MaxYawInRadians), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_ConeDir_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ConeDir = { UE4CodeGen_Private::EPropertyClass::Struct, "ConeDir", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms, ConeDir), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(NewProp_ConeDir_MetaData, ARRAY_COUNT(NewProp_ConeDir_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxPitchInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_MaxYawInRadians,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ConeDir,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "Keywords", "RandomVector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a random vector with length of 1, within the specified cone, with uniform random distribution.\nThe shape of the cone can be modified according to the yaw and pitch angles.\n\n@param MaxYawInRadians        The yaw angle of the cone (from ConeDir to horizontal edge), in radians.\n@param MaxPitchInRadians      The pitch angle of the cone (from ConeDir to vertical edge), in radians.\n@param Stream                         The random stream from which to obtain the vector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RandomUnitVectorInEllipticalConeInRadiansFromStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRandomUnitVectorInEllipticalConeInRadiansFromStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_REase()
	{
		struct KismetMathLibrary_eventREase_Parms
		{
			FRotator A;
			FRotator B;
			float Alpha;
			bool bShortestPath;
			TEnumAsByte<EEasingFunc::Type> EasingFunc;
			float BlendExp;
			int32 Steps;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Steps = { UE4CodeGen_Private::EPropertyClass::Int, "Steps", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, Steps), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_BlendExp = { UE4CodeGen_Private::EPropertyClass::Float, "BlendExp", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, BlendExp), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_EasingFunc = { UE4CodeGen_Private::EPropertyClass::Byte, "EasingFunc", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, EasingFunc), Z_Construct_UEnum_Engine_EEasingFunc, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bShortestPath_SetBit = [](void* Obj){ ((KismetMathLibrary_eventREase_Parms*)Obj)->bShortestPath = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bShortestPath = { UE4CodeGen_Private::EPropertyClass::Bool, "bShortestPath", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventREase_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bShortestPath_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventREase_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Steps,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BlendExp,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_EasingFunc,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bShortestPath,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintInternalUseOnly", "true" },
				{ "Category", "Math|Interpolation" },
				{ "CPP_Default_BlendExp", "2.000000" },
				{ "CPP_Default_Steps", "2" },
				{ "DisplayName", "Ease (Rotator)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Easeing  between A and B using a specified easing function" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "REase", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventREase_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetFloatSpringState()
	{
		struct KismetMathLibrary_eventResetFloatSpringState_Parms
		{
			FFloatSpringState SpringState;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SpringState = { UE4CodeGen_Private::EPropertyClass::Struct, "SpringState", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventResetFloatSpringState_Parms, SpringState), Z_Construct_UScriptStruct_FFloatSpringState, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SpringState,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Spring" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Resets the state of a given spring" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ResetFloatSpringState", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04422401, sizeof(KismetMathLibrary_eventResetFloatSpringState_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetRandomStream()
	{
		struct KismetMathLibrary_eventResetRandomStream_Parms
		{
			FRandomStream Stream;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Stream_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventResetRandomStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(NewProp_Stream_MetaData, ARRAY_COUNT(NewProp_Stream_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Reset a random stream" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ResetRandomStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04C22401, sizeof(KismetMathLibrary_eventResetRandomStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_ResetVectorSpringState()
	{
		struct KismetMathLibrary_eventResetVectorSpringState_Parms
		{
			FVectorSpringState SpringState;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SpringState = { UE4CodeGen_Private::EPropertyClass::Struct, "SpringState", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventResetVectorSpringState_Parms, SpringState), Z_Construct_UScriptStruct_FVectorSpringState, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SpringState,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Spring" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Resets the state of a given spring" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "ResetVectorSpringState", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04422401, sizeof(KismetMathLibrary_eventResetVectorSpringState_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV()
	{
		struct KismetMathLibrary_eventRGBToHSV_Parms
		{
			FLinearColor InColor;
			float H;
			float S;
			float V;
			float A;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_V = { UE4CodeGen_Private::EPropertyClass::Float, "V", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Parms, V), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_S = { UE4CodeGen_Private::EPropertyClass::Float, "S", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Parms, S), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_H = { UE4CodeGen_Private::EPropertyClass::Float, "H", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Parms, H), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_InColor_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InColor = { UE4CodeGen_Private::EPropertyClass::Struct, "InColor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000082, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Parms, InColor), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(NewProp_InColor_MetaData, ARRAY_COUNT(NewProp_InColor_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_V,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_S,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_H,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InColor,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "DisplayName", "RGB to HSV" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Breaks apart a color into individual HSV components (as well as alpha)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RGBToHSV", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRGBToHSV_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV_Vector()
	{
		struct KismetMathLibrary_eventRGBToHSV_Vector_Parms
		{
			FLinearColor RGB;
			FLinearColor HSV;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_HSV = { UE4CodeGen_Private::EPropertyClass::Struct, "HSV", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Vector_Parms, HSV), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_RGB_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_RGB = { UE4CodeGen_Private::EPropertyClass::Struct, "RGB", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000082, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRGBToHSV_Vector_Parms, RGB), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(NewProp_RGB_MetaData, ARRAY_COUNT(NewProp_RGB_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_HSV,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_RGB,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "DisplayName", "RGB to HSV (vector)" },
				{ "Keywords", "cast convert" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a RGB linear color to HSV (where H is in R, S is in G, and V is in B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RGBToHSV_Vector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventRGBToHSV_Vector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo()
	{
		struct KismetMathLibrary_eventRInterpTo_Parms
		{
			FRotator Current;
			FRotator Target;
			float DeltaTime;
			float InterpSpeed;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Parms, Target), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Parms, Current), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target rotation based on Current rotation, giving a nice smooth feeling when rotating to Target rotation.\n\n@param               Current                 Actual rotation\n@param               Target                  Target rotation\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RInterpTo_Constant()
	{
		struct KismetMathLibrary_eventRInterpTo_Constant_Parms
		{
			FRotator Current;
			FRotator Target;
			float DeltaTime;
			float InterpSpeed;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Constant_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Constant_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Constant_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Constant_Parms, Target), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRInterpTo_Constant_Parms, Current), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target rotation at a constant rate.\n\n@param               Current                 Actual rotation\n@param               Target                  Target rotation\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RInterpTo_Constant", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRInterpTo_Constant_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RLerp()
	{
		struct KismetMathLibrary_eventRLerp_Parms
		{
			FRotator A;
			FRotator B;
			float Alpha;
			bool bShortestPath;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRLerp_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bShortestPath_SetBit = [](void* Obj){ ((KismetMathLibrary_eventRLerp_Parms*)Obj)->bShortestPath = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bShortestPath = { UE4CodeGen_Private::EPropertyClass::Bool, "bShortestPath", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventRLerp_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bShortestPath_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRLerp_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRLerp_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRLerp_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bShortestPath,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "DisplayName", "Lerp (Rotator)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between A and B based on Alpha (100% of A when Alpha=0 and 100% of B when Alpha=1)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RLerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotateAngleAxis()
	{
		struct KismetMathLibrary_eventRotateAngleAxis_Parms
		{
			FVector InVect;
			float AngleDeg;
			FVector Axis;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotateAngleAxis_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Axis = { UE4CodeGen_Private::EPropertyClass::Struct, "Axis", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotateAngleAxis_Parms, Axis), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_AngleDeg = { UE4CodeGen_Private::EPropertyClass::Float, "AngleDeg", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotateAngleAxis_Parms, AngleDeg), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_InVect = { UE4CodeGen_Private::EPropertyClass::Struct, "InVect", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotateAngleAxis_Parms, InVect), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Axis,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_AngleDeg,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InVect,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "RotateVectorAroundAxis" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns result of vector A rotated by AngleDeg around Axis" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RotateAngleAxis", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRotateAngleAxis_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_RotatorFromAxisAndAngle()
	{
		struct KismetMathLibrary_eventRotatorFromAxisAndAngle_Parms
		{
			FVector Axis;
			float Angle;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotatorFromAxisAndAngle_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Angle = { UE4CodeGen_Private::EPropertyClass::Float, "Angle", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotatorFromAxisAndAngle_Parms, Angle), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Axis = { UE4CodeGen_Private::EPropertyClass::Struct, "Axis", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRotatorFromAxisAndAngle_Parms, Axis), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Angle,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Axis,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "make construct build rotate rotation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Create a rotation from an axis and and angle (in degrees)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "RotatorFromAxisAndAngle", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventRotatorFromAxisAndAngle_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Round()
	{
		struct KismetMathLibrary_eventRound_Parms
		{
			float A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRound_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventRound_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Rounds A to the nearest integer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Round", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventRound_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SeedRandomStream()
	{
		struct KismetMathLibrary_eventSeedRandomStream_Parms
		{
			FRandomStream Stream;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSeedRandomStream_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Create a new random seed for a random stream" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SeedRandomStream", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04C22401, sizeof(KismetMathLibrary_eventSeedRandomStream_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectClass()
	{
		struct KismetMathLibrary_eventSelectClass_Parms
		{
			UClass* A;
			UClass* B;
			bool bSelectA;
			UClass* ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Class, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectClass_Parms, ReturnValue), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bSelectA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectClass_Parms*)Obj)->bSelectA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bSelectA = { UE4CodeGen_Private::EPropertyClass::Bool, "bSelectA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectClass_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bSelectA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Class, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectClass_Parms, B), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FClassPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Class, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectClass_Parms, A), Z_Construct_UClass_UObject_NoRegister, Z_Construct_UClass_UClass, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bSelectA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectClass", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSelectClass_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectColor()
	{
		struct KismetMathLibrary_eventSelectColor_Parms
		{
			FLinearColor A;
			FLinearColor B;
			bool bPickA;
			FLinearColor ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectColor_Parms, ReturnValue), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectColor_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectColor_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectColor_Parms, B), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectColor_Parms, A), Z_Construct_UScriptStruct_FLinearColor, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Color" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectColor", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSelectColor_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectFloat()
	{
		struct KismetMathLibrary_eventSelectFloat_Parms
		{
			float A;
			float B;
			bool bPickA;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectFloat_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectFloat_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSelectFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectInt()
	{
		struct KismetMathLibrary_eventSelectInt_Parms
		{
			int32 A;
			int32 B;
			bool bPickA;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectInt_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectInt_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSelectInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectObject()
	{
		struct KismetMathLibrary_eventSelectObject_Parms
		{
			UObject* A;
			UObject* B;
			bool bSelectA;
			UObject* ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Object, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectObject_Parms, ReturnValue), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bSelectA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectObject_Parms*)Obj)->bSelectA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bSelectA = { UE4CodeGen_Private::EPropertyClass::Bool, "bSelectA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectObject_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bSelectA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Object, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectObject_Parms, B), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FObjectPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Object, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectObject_Parms, A), Z_Construct_UClass_UObject_NoRegister, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bSelectA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectObject", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSelectObject_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectRotator()
	{
		struct KismetMathLibrary_eventSelectRotator_Parms
		{
			FRotator A;
			FRotator B;
			bool bPickA;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectRotator_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectRotator_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectRotator_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectRotator_Parms, B), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectRotator_Parms, A), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Rotator" },
				{ "Keywords", "rotation rotate" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectRotator", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSelectRotator_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectString()
	{
		struct KismetMathLibrary_eventSelectString_Parms
		{
			FString A;
			FString B;
			bool bPickA;
			FString ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Str, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectString_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectString_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectString_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Str, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectString_Parms, B), METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Str, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectString_Parms, A), METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Utilities|String" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectString", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSelectString_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectTransform()
	{
		struct KismetMathLibrary_eventSelectTransform_Parms
		{
			FTransform A;
			FTransform B;
			bool bPickA;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectTransform_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectTransform_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectTransform_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectTransform_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectTransform_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectTransform", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventSelectTransform_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SelectVector()
	{
		struct KismetMathLibrary_eventSelectVector_Parms
		{
			FVector A;
			FVector B;
			bool bPickA;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			auto NewProp_bPickA_SetBit = [](void* Obj){ ((KismetMathLibrary_eventSelectVector_Parms*)Obj)->bPickA = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_bPickA = { UE4CodeGen_Private::EPropertyClass::Bool, "bPickA", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventSelectVector_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_bPickA_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSelectVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_bPickA,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "If bPickA is true, A is returned, otherwise B is" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SelectVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSelectVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SetRandomStreamSeed()
	{
		struct KismetMathLibrary_eventSetRandomStreamSeed_Parms
		{
			FRandomStream Stream;
			int32 NewSeed;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_NewSeed = { UE4CodeGen_Private::EPropertyClass::Int, "NewSeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSetRandomStreamSeed_Parms, NewSeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Stream = { UE4CodeGen_Private::EPropertyClass::Struct, "Stream", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSetRandomStreamSeed_Parms, Stream), Z_Construct_UScriptStruct_FRandomStream, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_NewSeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stream,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Random" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Set the seed of a random stream to a specific number" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SetRandomStreamSeed", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04C22401, sizeof(KismetMathLibrary_eventSetRandomStreamSeed_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfFloat()
	{
		struct KismetMathLibrary_eventSignOfFloat_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSignOfFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSignOfFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "DisplayName", "Sign (float)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Sign (float, returns -1 if A < 0, 0 if A is zero, and +1 if A > 0)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SignOfFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSignOfFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_SignOfInteger()
	{
		struct KismetMathLibrary_eventSignOfInteger_Parms
		{
			int32 A;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSignOfInteger_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSignOfInteger_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "DisplayName", "Sign (int)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Sign (integer, returns -1 if A < 0, 0 if A is zero, and +1 if A > 0)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "SignOfInteger", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSignOfInteger_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sin()
	{
		struct KismetMathLibrary_eventSin_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSin_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSin_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "SIN" },
				{ "DisplayName", "Sin (Radians)" },
				{ "Keywords", "sine" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the sine of A (expects Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Sin", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSin_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Sqrt()
	{
		struct KismetMathLibrary_eventSqrt_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSqrt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSqrt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "SQRT" },
				{ "Keywords", "square root" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns square root of A" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Sqrt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSqrt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Square()
	{
		struct KismetMathLibrary_eventSquare_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSquare_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSquare_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "^2" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns square of A (A*A)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Square", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSquare_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_ByteByte()
	{
		struct KismetMathLibrary_eventSubtract_ByteByte_Parms
		{
			uint8 A;
			uint8 B;
			uint8 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Byte, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_ByteByte_Parms, ReturnValue), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Byte, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_ByteByte_Parms, B), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Byte, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_ByteByte_Parms, A), nullptr, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Byte" },
				{ "CompactNodeTitle", "-" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "Byte - Byte" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_ByteByte", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSubtract_ByteByte_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeDateTime()
	{
		struct KismetMathLibrary_eventSubtract_DateTimeDateTime_Parms
		{
			FDateTime A;
			FDateTime B;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeDateTime_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeDateTime_Parms, B), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeDateTime_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "DateTime - DateTime" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_DateTimeDateTime", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_DateTimeDateTime_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeTimespan()
	{
		struct KismetMathLibrary_eventSubtract_DateTimeTimespan_Parms
		{
			FDateTime A;
			FTimespan B;
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeTimespan_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_DateTimeTimespan_Parms, A), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "DateTime - Timespan" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_DateTimeTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_DateTimeTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_FloatFloat()
	{
		struct KismetMathLibrary_eventSubtract_FloatFloat_Parms
		{
			float A;
			float B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_FloatFloat_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_FloatFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_FloatFloat_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Float" },
				{ "CompactNodeTitle", "-" },
				{ "CPP_Default_B", "1.000000" },
				{ "DisplayName", "float - float" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_FloatFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSubtract_FloatFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_IntInt()
	{
		struct KismetMathLibrary_eventSubtract_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "-" },
				{ "CPP_Default_B", "1" },
				{ "DisplayName", "integer - integer" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventSubtract_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_TimespanTimespan()
	{
		struct KismetMathLibrary_eventSubtract_TimespanTimespan_Parms
		{
			FTimespan A;
			FTimespan B;
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_TimespanTimespan_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_TimespanTimespan_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_TimespanTimespan_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "Timespan - Timespan" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtraction (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_TimespanTimespan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_TimespanTimespan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DFloat()
	{
		struct KismetMathLibrary_eventSubtract_Vector2DFloat_Parms
		{
			FVector2D A;
			float B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DFloat_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "vector2d - float" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns Vector A subtracted by B" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_Vector2DFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_Vector2DFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DVector2D()
	{
		struct KismetMathLibrary_eventSubtract_Vector2DVector2D_Parms
		{
			FVector2D A;
			FVector2D B;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DVector2D_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DVector2D_Parms, B), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_Vector2DVector2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "vector2d - vector2d" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns subtraction of Vector B from Vector A (A - B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_Vector2DVector2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_Vector2DVector2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorFloat()
	{
		struct KismetMathLibrary_eventSubtract_VectorFloat_Parms
		{
			FVector A;
			float B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorFloat_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Float, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorFloat_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorFloat_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "vector - float" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtracts a float from each component of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_VectorFloat", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_VectorFloat_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorInt()
	{
		struct KismetMathLibrary_eventSubtract_VectorInt_Parms
		{
			FVector A;
			int32 B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorInt_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorInt_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "vector - int" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Subtracts an integer from each component of a vector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_VectorInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_VectorInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorVector()
	{
		struct KismetMathLibrary_eventSubtract_VectorVector_Parms
		{
			FVector A;
			FVector B;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorVector_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorVector_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventSubtract_VectorVector_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "CompactNodeTitle", "-" },
				{ "DisplayName", "vector - vector" },
				{ "Keywords", "- subtract minus" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Vector subtraction" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Subtract_VectorVector", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventSubtract_VectorVector_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Tan()
	{
		struct KismetMathLibrary_eventTan_Parms
		{
			float A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTan_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Float, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTan_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Trig" },
				{ "CompactNodeTitle", "TAN" },
				{ "DisplayName", "Tan (Radians)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the tan of A (expects Radians)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Tan", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventTan_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TEase()
	{
		struct KismetMathLibrary_eventTEase_Parms
		{
			FTransform A;
			FTransform B;
			float Alpha;
			TEnumAsByte<EEasingFunc::Type> EasingFunc;
			float BlendExp;
			int32 Steps;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Steps = { UE4CodeGen_Private::EPropertyClass::Int, "Steps", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, Steps), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_BlendExp = { UE4CodeGen_Private::EPropertyClass::Float, "BlendExp", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, BlendExp), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_EasingFunc = { UE4CodeGen_Private::EPropertyClass::Byte, "EasingFunc", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, EasingFunc), Z_Construct_UEnum_Engine_EEasingFunc, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTEase_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Steps,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BlendExp,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_EasingFunc,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintInternalUseOnly", "true" },
				{ "Category", "Math|Interpolation" },
				{ "CPP_Default_BlendExp", "2.000000" },
				{ "CPP_Default_Steps", "2" },
				{ "DisplayName", "Ease (Transform)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Ease between A and B using a specified easing function." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TEase", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTEase_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanFromString()
	{
		struct KismetMathLibrary_eventTimespanFromString_Parms
		{
			FString TimespanString;
			FTimespan Result;
			bool ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			auto NewProp_ReturnValue_SetBit = [](void* Obj){ ((KismetMathLibrary_eventTimespanFromString_Parms*)Obj)->ReturnValue = 1; };
			static const UE4CodeGen_Private::FBoolPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Bool, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, sizeof(bool), UE4CodeGen_Private::ENativeBool::Native, sizeof(KismetMathLibrary_eventTimespanFromString_Parms), &UE4CodeGen_Private::TBoolSetBitWrapper<decltype(NewProp_ReturnValue_SetBit)>::SetBit, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Result = { UE4CodeGen_Private::EPropertyClass::Struct, "Result", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanFromString_Parms, Result), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStrPropertyParams NewProp_TimespanString = { UE4CodeGen_Private::EPropertyClass::Str, "TimespanString", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanFromString_Parms, TimespanString), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Result,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_TimespanString,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Converts a time span string to a Timespan object" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TimespanFromString", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTimespanFromString_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMaxValue()
	{
		struct KismetMathLibrary_eventTimespanMaxValue_Parms
		{
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanMaxValue_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "MaxValue" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the maximum time span value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TimespanMaxValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventTimespanMaxValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanMinValue()
	{
		struct KismetMathLibrary_eventTimespanMinValue_Parms
		{
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanMinValue_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "MinValue" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the minimum time span value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TimespanMinValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventTimespanMinValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanRatio()
	{
		struct KismetMathLibrary_eventTimespanRatio_Parms
		{
			FTimespan A;
			FTimespan B;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanRatio_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanRatio_Parms, B), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanRatio_Parms, A), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "TimespanRatio" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the ratio between two time spans (A / B), handles zero values" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TimespanRatio", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventTimespanRatio_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TimespanZeroValue()
	{
		struct KismetMathLibrary_eventTimespanZeroValue_Parms
		{
			FTimespan ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTimespanZeroValue_Parms, ReturnValue), Z_Construct_UScriptStruct_FTimespan, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Timespan" },
				{ "DisplayName", "ZeroValue" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns a zero time span value" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TimespanZeroValue", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventTimespanZeroValue_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TInterpTo()
	{
		struct KismetMathLibrary_eventTInterpTo_Parms
		{
			FTransform Current;
			FTransform Target;
			float DeltaTime;
			float InterpSpeed;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTInterpTo_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Target_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTInterpTo_Parms, Target), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_Target_MetaData, ARRAY_COUNT(NewProp_Target_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_Current_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTInterpTo_Parms, Current), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_Current_MetaData, ARRAY_COUNT(NewProp_Current_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach a target transform." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TLerp()
	{
		struct KismetMathLibrary_eventTLerp_Parms
		{
			FTransform A;
			FTransform B;
			float Alpha;
			TEnumAsByte<ELerpInterpolationMode::Type> InterpMode;
			FTransform ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTLerp_Parms, ReturnValue), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_InterpMode = { UE4CodeGen_Private::EPropertyClass::Byte, "InterpMode", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010040000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTLerp_Parms, InterpMode), Z_Construct_UEnum_Engine_ELerpInterpolationMode, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTLerp_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_B_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTLerp_Parms, B), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_B_MetaData, ARRAY_COUNT(NewProp_B_MetaData)) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_A_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTLerp_Parms, A), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_A_MetaData, ARRAY_COUNT(NewProp_A_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpMode,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "AdvancedDisplay", "3" },
				{ "Category", "Math|Transform" },
				{ "CPP_Default_InterpMode", "QuatInterp" },
				{ "DisplayName", "Lerp (Transform)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between A and B based on Alpha (100% of A when Alpha=0 and 100% of B when Alpha=1)." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TLerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Today()
	{
		struct KismetMathLibrary_eventToday_Parms
		{
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventToday_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "Today" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the local date on this computer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Today", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventToday_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformDirection()
	{
		struct KismetMathLibrary_eventTransformDirection_Parms
		{
			FTransform T;
			FVector Direction;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformDirection_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Direction = { UE4CodeGen_Private::EPropertyClass::Struct, "Direction", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformDirection_Parms, Direction), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformDirection_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Direction,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a direction vector by the supplied transform - will not change its length.\nFor example, if T was an object's transform, this would transform a direction from local space to world space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TransformDirection", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTransformDirection_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformLocation()
	{
		struct KismetMathLibrary_eventTransformLocation_Parms
		{
			FTransform T;
			FVector Location;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformLocation_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Location = { UE4CodeGen_Private::EPropertyClass::Struct, "Location", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformLocation_Parms, Location), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformLocation_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Location,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "Keywords", "location" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a position by the supplied transform.\nFor example, if T was an object's transform, this would transform a position from local space to world space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TransformLocation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTransformLocation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_TransformRotation()
	{
		struct KismetMathLibrary_eventTransformRotation_Parms
		{
			FTransform T;
			FRotator Rotation;
			FRotator ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformRotation_Parms, ReturnValue), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Rotation = { UE4CodeGen_Private::EPropertyClass::Struct, "Rotation", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformRotation_Parms, Rotation), Z_Construct_UScriptStruct_FRotator, METADATA_PARAMS(nullptr, 0) };
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam NewProp_T_MetaData[] = {
				{ "NativeConst", "" },
			};
#endif
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_T = { UE4CodeGen_Private::EPropertyClass::Struct, "T", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000182, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventTransformRotation_Parms, T), Z_Construct_UScriptStruct_FTransform, METADATA_PARAMS(NewProp_T_MetaData, ARRAY_COUNT(NewProp_T_MetaData)) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Rotation,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_T,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Transform" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Transform a rotator by the supplied transform.\nFor example, if T was an object's transform, this would transform a rotation from local space to world space." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "TransformRotation", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14C22401, sizeof(KismetMathLibrary_eventTransformRotation_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_UtcNow()
	{
		struct KismetMathLibrary_eventUtcNow_Parms
		{
			FDateTime ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventUtcNow_Parms, ReturnValue), Z_Construct_UScriptStruct_FDateTime, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|DateTime" },
				{ "DisplayName", "UtcNow" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the UTC date and time on this computer" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "UtcNow", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventUtcNow_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VEase()
	{
		struct KismetMathLibrary_eventVEase_Parms
		{
			FVector A;
			FVector B;
			float Alpha;
			TEnumAsByte<EEasingFunc::Type> EasingFunc;
			float BlendExp;
			int32 Steps;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_Steps = { UE4CodeGen_Private::EPropertyClass::Int, "Steps", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, Steps), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_BlendExp = { UE4CodeGen_Private::EPropertyClass::Float, "BlendExp", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, BlendExp), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FBytePropertyParams NewProp_EasingFunc = { UE4CodeGen_Private::EPropertyClass::Byte, "EasingFunc", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, EasingFunc), Z_Construct_UEnum_Engine_EEasingFunc, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVEase_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Steps,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_BlendExp,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_EasingFunc,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "BlueprintInternalUseOnly", "true" },
				{ "Category", "Math|Interpolation" },
				{ "CPP_Default_BlendExp", "2.000000" },
				{ "CPP_Default_Steps", "2" },
				{ "DisplayName", "Ease (vector)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Easeing  between A and B using a specified easing function" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VEase", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVEase_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo()
	{
		struct KismetMathLibrary_eventVector2DInterpTo_Parms
		{
			FVector2D Current;
			FVector2D Target;
			float DeltaTime;
			float InterpSpeed;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Parms, Target), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Parms, Current), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "position" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target based on distance from Current position, giving a nice smooth feeling when tracking a position.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Vector2DInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVector2DInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo_Constant()
	{
		struct KismetMathLibrary_eventVector2DInterpTo_Constant_Parms
		{
			FVector2D Current;
			FVector2D Target;
			float DeltaTime;
			float InterpSpeed;
			FVector2D ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms, Target), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms, Current), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "position" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target at a constant rate.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Vector2DInterpTo_Constant", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVector2DInterpTo_Constant_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VectorSpringInterp()
	{
		struct KismetMathLibrary_eventVectorSpringInterp_Parms
		{
			FVector Current;
			FVector Target;
			FVectorSpringState SpringState;
			float Stiffness;
			float CriticalDampingFactor;
			float DeltaTime;
			float Mass;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Mass = { UE4CodeGen_Private::EPropertyClass::Float, "Mass", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, Mass), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_CriticalDampingFactor = { UE4CodeGen_Private::EPropertyClass::Float, "CriticalDampingFactor", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, CriticalDampingFactor), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Stiffness = { UE4CodeGen_Private::EPropertyClass::Float, "Stiffness", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, Stiffness), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_SpringState = { UE4CodeGen_Private::EPropertyClass::Struct, "SpringState", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000008000180, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, SpringState), Z_Construct_UScriptStruct_FVectorSpringState, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, Target), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVectorSpringInterp_Parms, Current), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Mass,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_CriticalDampingFactor,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Stiffness,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_SpringState,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Spring" },
				{ "CPP_Default_Mass", "1.000000" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Uses a simple spring model to interpolate a vector from Current to Target.\n\n@param Current                                Current value\n@param Target                                 Target value\n@param SpringState                    Data related to spring model (velocity, error, etc..) - Create a unique variable per spring\n@param Stiffness                              How stiff the spring model is (more stiffness means more oscillation around the target value)\n@param CriticalDampingFactor  How much damping to apply to the spring (0 means no damping, 1 means critically damped which means no oscillation)\n@param Mass                                   Multiplier that acts like mass on a spring" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VectorSpringInterp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x04C22401, sizeof(KismetMathLibrary_eventVectorSpringInterp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo()
	{
		struct KismetMathLibrary_eventVInterpTo_Parms
		{
			FVector Current;
			FVector Target;
			float DeltaTime;
			float InterpSpeed;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Parms, Target), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Parms, Current), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "position" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target based on distance from Current position, giving a nice smooth feeling when tracking a position.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VInterpTo", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVInterpTo_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VInterpTo_Constant()
	{
		struct KismetMathLibrary_eventVInterpTo_Constant_Parms
		{
			FVector Current;
			FVector Target;
			float DeltaTime;
			float InterpSpeed;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Constant_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_InterpSpeed = { UE4CodeGen_Private::EPropertyClass::Float, "InterpSpeed", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Constant_Parms, InterpSpeed), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_DeltaTime = { UE4CodeGen_Private::EPropertyClass::Float, "DeltaTime", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Constant_Parms, DeltaTime), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Target = { UE4CodeGen_Private::EPropertyClass::Struct, "Target", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Constant_Parms, Target), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_Current = { UE4CodeGen_Private::EPropertyClass::Struct, "Current", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVInterpTo_Constant_Parms, Current), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_InterpSpeed,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_DeltaTime,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Target,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Current,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Interpolation" },
				{ "Keywords", "position" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Tries to reach Target at a constant rate.\n\n@param               Current                 Actual position\n@param               Target                  Target position\n@param               DeltaTime               Time since last tick\n@param               InterpSpeed             Interpolation speed\n@return              New interpolated position" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VInterpTo_Constant", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVInterpTo_Constant_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VLerp()
	{
		struct KismetMathLibrary_eventVLerp_Parms
		{
			FVector A;
			FVector B;
			float Alpha;
			FVector ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Struct, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVLerp_Parms, ReturnValue), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_Alpha = { UE4CodeGen_Private::EPropertyClass::Float, "Alpha", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVLerp_Parms, Alpha), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Struct, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVLerp_Parms, B), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVLerp_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_Alpha,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "Lerp (vector)" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Linearly interpolates between A and B based on Alpha (100% of A when Alpha=0 and 100% of B when Alpha=1)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VLerp", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVLerp_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize()
	{
		struct KismetMathLibrary_eventVSize_Parms
		{
			FVector A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "VectorLength" },
				{ "Keywords", "magnitude" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the length of the FVector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VSize", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVSize_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2D()
	{
		struct KismetMathLibrary_eventVSize2D_Parms
		{
			FVector2D A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize2D_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize2D_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "DisplayName", "Vector2dLength" },
				{ "Keywords", "magnitude" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the length of a 2d FVector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VSize2D", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVSize2D_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSize2DSquared()
	{
		struct KismetMathLibrary_eventVSize2DSquared_Parms
		{
			FVector2D A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize2DSquared_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSize2DSquared_Parms, A), Z_Construct_UScriptStruct_FVector2D, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector2D" },
				{ "DisplayName", "Vector2dLengthSquared" },
				{ "Keywords", "magnitude" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the squared length of a 2d FVector." },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VSize2DSquared", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVSize2DSquared_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_VSizeSquared()
	{
		struct KismetMathLibrary_eventVSizeSquared_Parms
		{
			FVector A;
			float ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FFloatPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Float, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSizeSquared_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FStructPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Struct, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventVSizeSquared_Parms, A), Z_Construct_UScriptStruct_FVector, METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Vector" },
				{ "DisplayName", "VectorLengthSquared" },
				{ "Keywords", "magnitude" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Returns the squared length of the FVector" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "VSizeSquared", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14822401, sizeof(KismetMathLibrary_eventVSizeSquared_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UFunction* Z_Construct_UFunction_UKismetMathLibrary_Xor_IntInt()
	{
		struct KismetMathLibrary_eventXor_IntInt_Parms
		{
			int32 A;
			int32 B;
			int32 ReturnValue;
		};
		static UFunction* ReturnFunction = nullptr;
		if (!ReturnFunction)
		{
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_ReturnValue = { UE4CodeGen_Private::EPropertyClass::Int, "ReturnValue", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000580, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventXor_IntInt_Parms, ReturnValue), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_B = { UE4CodeGen_Private::EPropertyClass::Int, "B", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventXor_IntInt_Parms, B), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FIntPropertyParams NewProp_A = { UE4CodeGen_Private::EPropertyClass::Int, "A", RF_Public|RF_Transient|RF_MarkAsNative, 0x0010000000000080, 1, nullptr, STRUCT_OFFSET(KismetMathLibrary_eventXor_IntInt_Parms, A), METADATA_PARAMS(nullptr, 0) };
			static const UE4CodeGen_Private::FPropertyParamsBase* const PropPointers[] = {
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_ReturnValue,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_B,
				(const UE4CodeGen_Private::FPropertyParamsBase*)&NewProp_A,
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Function_MetaDataParams[] = {
				{ "Category", "Math|Integer" },
				{ "CompactNodeTitle", "^" },
				{ "DisplayName", "Bitwise XOR" },
				{ "Keywords", "^ xor" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
				{ "ToolTip", "Bitwise XOR (A ^ B)" },
			};
#endif
			static const UE4CodeGen_Private::FFunctionParams FuncParams = { (UObject*(*)())Z_Construct_UClass_UKismetMathLibrary, "Xor_IntInt", RF_Public|RF_Transient|RF_MarkAsNative, nullptr, (EFunctionFlags)0x14022401, sizeof(KismetMathLibrary_eventXor_IntInt_Parms), PropPointers, ARRAY_COUNT(PropPointers), 0, 0, METADATA_PARAMS(Function_MetaDataParams, ARRAY_COUNT(Function_MetaDataParams)) };
			UE4CodeGen_Private::ConstructUFunction(ReturnFunction, FuncParams);
		}
		return ReturnFunction;
	}
	UClass* Z_Construct_UClass_UKismetMathLibrary_NoRegister()
	{
		return UKismetMathLibrary::StaticClass();
	}
	UClass* Z_Construct_UClass_UKismetMathLibrary()
	{
		static UClass* OuterClass = nullptr;
		if (!OuterClass)
		{
			static UObject* (*const DependentSingletons[])() = {
				(UObject* (*)())Z_Construct_UClass_UBlueprintFunctionLibrary,
				(UObject* (*)())Z_Construct_UPackage__Script_Engine,
			};
			static const FClassFunctionLinkInfo FuncInfo[] = {
				{ &Z_Construct_UFunction_UKismetMathLibrary_Abs, "Abs" }, // 2066295698
				{ &Z_Construct_UFunction_UKismetMathLibrary_Abs_Int, "Abs_Int" }, // 3610489732
				{ &Z_Construct_UFunction_UKismetMathLibrary_Acos, "Acos" }, // 2682322855
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_ByteByte, "Add_ByteByte" }, // 2334652766
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_DateTimeTimespan, "Add_DateTimeTimespan" }, // 3898724744
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_FloatFloat, "Add_FloatFloat" }, // 3161486754
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_IntInt, "Add_IntInt" }, // 1664282613
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_TimespanTimespan, "Add_TimespanTimespan" }, // 2820129295
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DFloat, "Add_Vector2DFloat" }, // 2651451484
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_Vector2DVector2D, "Add_Vector2DVector2D" }, // 1603121826
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_VectorFloat, "Add_VectorFloat" }, // 698791617
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_VectorInt, "Add_VectorInt" }, // 2723658480
				{ &Z_Construct_UFunction_UKismetMathLibrary_Add_VectorVector, "Add_VectorVector" }, // 3868824058
				{ &Z_Construct_UFunction_UKismetMathLibrary_And_IntInt, "And_IntInt" }, // 2678903501
				{ &Z_Construct_UFunction_UKismetMathLibrary_Asin, "Asin" }, // 4025919132
				{ &Z_Construct_UFunction_UKismetMathLibrary_Atan, "Atan" }, // 2015065411
				{ &Z_Construct_UFunction_UKismetMathLibrary_Atan2, "Atan2" }, // 2074900878
				{ &Z_Construct_UFunction_UKismetMathLibrary_BMax, "BMax" }, // 4207475412
				{ &Z_Construct_UFunction_UKismetMathLibrary_BMin, "BMin" }, // 3013880206
				{ &Z_Construct_UFunction_UKismetMathLibrary_BooleanAND, "BooleanAND" }, // 2650944331
				{ &Z_Construct_UFunction_UKismetMathLibrary_BooleanNAND, "BooleanNAND" }, // 1293241280
				{ &Z_Construct_UFunction_UKismetMathLibrary_BooleanNOR, "BooleanNOR" }, // 3950949589
				{ &Z_Construct_UFunction_UKismetMathLibrary_BooleanOR, "BooleanOR" }, // 990820810
				{ &Z_Construct_UFunction_UKismetMathLibrary_BooleanXOR, "BooleanXOR" }, // 1192397865
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakColor, "BreakColor" }, // 2903495748
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakDateTime, "BreakDateTime" }, // 1765589237
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakRandomStream, "BreakRandomStream" }, // 2978409881
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakRotator, "BreakRotator" }, // 2756336781
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakRotIntoAxes, "BreakRotIntoAxes" }, // 3446221828
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan, "BreakTimespan" }, // 2413907879
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakTimespan2, "BreakTimespan2" }, // 3751616175
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakTransform, "BreakTransform" }, // 28594472
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakVector, "BreakVector" }, // 472514210
				{ &Z_Construct_UFunction_UKismetMathLibrary_BreakVector2D, "BreakVector2D" }, // 2494050833
				{ &Z_Construct_UFunction_UKismetMathLibrary_CInterpTo, "CInterpTo" }, // 1974342846
				{ &Z_Construct_UFunction_UKismetMathLibrary_Clamp, "Clamp" }, // 557673241
				{ &Z_Construct_UFunction_UKismetMathLibrary_ClampAngle, "ClampAngle" }, // 4225685044
				{ &Z_Construct_UFunction_UKismetMathLibrary_ClampAxis, "ClampAxis" }, // 1978051774
				{ &Z_Construct_UFunction_UKismetMathLibrary_ClampVectorSize, "ClampVectorSize" }, // 390969307
				{ &Z_Construct_UFunction_UKismetMathLibrary_ClassIsChildOf, "ClassIsChildOf" }, // 1090697690
				{ &Z_Construct_UFunction_UKismetMathLibrary_ComposeRotators, "ComposeRotators" }, // 2837477450
				{ &Z_Construct_UFunction_UKismetMathLibrary_ComposeTransforms, "ComposeTransforms" }, // 3843862814
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToByte, "Conv_BoolToByte" }, // 297798731
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToFloat, "Conv_BoolToFloat" }, // 3326240053
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_BoolToInt, "Conv_BoolToInt" }, // 1500463170
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToFloat, "Conv_ByteToFloat" }, // 797800980
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_ByteToInt, "Conv_ByteToInt" }, // 2604296857
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_ColorToLinearColor, "Conv_ColorToLinearColor" }, // 2598429552
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToLinearColor, "Conv_FloatToLinearColor" }, // 3932898500
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_FloatToVector, "Conv_FloatToVector" }, // 3717401842
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToBool, "Conv_IntToBool" }, // 1635021411
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToByte, "Conv_IntToByte" }, // 1039028338
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToFloat, "Conv_IntToFloat" }, // 1904728206
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_IntToIntVector, "Conv_IntToIntVector" }, // 1914926759
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_IntVectorToVector, "Conv_IntVectorToVector" }, // 3508934143
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToColor, "Conv_LinearColorToColor" }, // 317100168
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_LinearColorToVector, "Conv_LinearColorToVector" }, // 3420144247
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_RotatorToVector, "Conv_RotatorToVector" }, // 3555315249
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_Vector2DToVector, "Conv_Vector2DToVector" }, // 2474506370
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToLinearColor, "Conv_VectorToLinearColor" }, // 718039558
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToRotator, "Conv_VectorToRotator" }, // 1073829708
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToTransform, "Conv_VectorToTransform" }, // 4190593549
				{ &Z_Construct_UFunction_UKismetMathLibrary_Conv_VectorToVector2D, "Conv_VectorToVector2D" }, // 332538703
				{ &Z_Construct_UFunction_UKismetMathLibrary_ConvertTransformToRelative, "ConvertTransformToRelative" }, // 1086670908
				{ &Z_Construct_UFunction_UKismetMathLibrary_Cos, "Cos" }, // 3727124451
				{ &Z_Construct_UFunction_UKismetMathLibrary_CreateVectorFromYawPitch, "CreateVectorFromYawPitch" }, // 2905396045
				{ &Z_Construct_UFunction_UKismetMathLibrary_Cross_VectorVector, "Cross_VectorVector" }, // 3640075589
				{ &Z_Construct_UFunction_UKismetMathLibrary_CrossProduct2D, "CrossProduct2D" }, // 1371356194
				{ &Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromIsoString, "DateTimeFromIsoString" }, // 3773366724
				{ &Z_Construct_UFunction_UKismetMathLibrary_DateTimeFromString, "DateTimeFromString" }, // 540554220
				{ &Z_Construct_UFunction_UKismetMathLibrary_DateTimeMaxValue, "DateTimeMaxValue" }, // 3809819569
				{ &Z_Construct_UFunction_UKismetMathLibrary_DateTimeMinValue, "DateTimeMinValue" }, // 1180120868
				{ &Z_Construct_UFunction_UKismetMathLibrary_DaysInMonth, "DaysInMonth" }, // 3281261390
				{ &Z_Construct_UFunction_UKismetMathLibrary_DaysInYear, "DaysInYear" }, // 1355686036
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegAcos, "DegAcos" }, // 2643922004
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegAsin, "DegAsin" }, // 3516319046
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegAtan, "DegAtan" }, // 306729649
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegAtan2, "DegAtan2" }, // 3130238397
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegCos, "DegCos" }, // 268192680
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegreesToRadians, "DegreesToRadians" }, // 1420324713
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegSin, "DegSin" }, // 3789297210
				{ &Z_Construct_UFunction_UKismetMathLibrary_DegTan, "DegTan" }, // 1473536151
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_ByteByte, "Divide_ByteByte" }, // 2225093497
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_FloatFloat, "Divide_FloatFloat" }, // 2373334730
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_IntInt, "Divide_IntInt" }, // 4125209417
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_TimespanFloat, "Divide_TimespanFloat" }, // 1613823339
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DFloat, "Divide_Vector2DFloat" }, // 2215023162
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_Vector2DVector2D, "Divide_Vector2DVector2D" }, // 2969412911
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorFloat, "Divide_VectorFloat" }, // 305632325
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorInt, "Divide_VectorInt" }, // 3131375964
				{ &Z_Construct_UFunction_UKismetMathLibrary_Divide_VectorVector, "Divide_VectorVector" }, // 4210697334
				{ &Z_Construct_UFunction_UKismetMathLibrary_Dot_VectorVector, "Dot_VectorVector" }, // 3363582831
				{ &Z_Construct_UFunction_UKismetMathLibrary_DotProduct2D, "DotProduct2D" }, // 628228534
				{ &Z_Construct_UFunction_UKismetMathLibrary_Ease, "Ease" }, // 589056984
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_BoolBool, "EqualEqual_BoolBool" }, // 4170828982
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ByteByte, "EqualEqual_ByteByte" }, // 389615900
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ClassClass, "EqualEqual_ClassClass" }, // 4246356239
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_DateTimeDateTime, "EqualEqual_DateTimeDateTime" }, // 1759722760
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_FloatFloat, "EqualEqual_FloatFloat" }, // 978252960
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_IntInt, "EqualEqual_IntInt" }, // 3486041234
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_NameName, "EqualEqual_NameName" }, // 109981664
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_ObjectObject, "EqualEqual_ObjectObject" }, // 1220048229
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_RotatorRotator, "EqualEqual_RotatorRotator" }, // 2234983422
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TimespanTimespan, "EqualEqual_TimespanTimespan" }, // 4062122042
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_TransformTransform, "EqualEqual_TransformTransform" }, // 3982409631
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_Vector2DVector2D, "EqualEqual_Vector2DVector2D" }, // 1751822294
				{ &Z_Construct_UFunction_UKismetMathLibrary_EqualEqual_VectorVector, "EqualEqual_VectorVector" }, // 822937771
				{ &Z_Construct_UFunction_UKismetMathLibrary_Exp, "Exp" }, // 892809680
				{ &Z_Construct_UFunction_UKismetMathLibrary_FCeil, "FCeil" }, // 3259540963
				{ &Z_Construct_UFunction_UKismetMathLibrary_FClamp, "FClamp" }, // 2310750528
				{ &Z_Construct_UFunction_UKismetMathLibrary_FFloor, "FFloor" }, // 3094724528
				{ &Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnLine, "FindClosestPointOnLine" }, // 930663946
				{ &Z_Construct_UFunction_UKismetMathLibrary_FindClosestPointOnSegment, "FindClosestPointOnSegment" }, // 3746847500
				{ &Z_Construct_UFunction_UKismetMathLibrary_FindLookAtRotation, "FindLookAtRotation" }, // 2102024929
				{ &Z_Construct_UFunction_UKismetMathLibrary_FindNearestPointsOnLineSegments, "FindNearestPointsOnLineSegments" }, // 3457943054
				{ &Z_Construct_UFunction_UKismetMathLibrary_FInterpEaseInOut, "FInterpEaseInOut" }, // 3440055975
				{ &Z_Construct_UFunction_UKismetMathLibrary_FInterpTo, "FInterpTo" }, // 3481672296
				{ &Z_Construct_UFunction_UKismetMathLibrary_FInterpTo_Constant, "FInterpTo_Constant" }, // 604241353
				{ &Z_Construct_UFunction_UKismetMathLibrary_FixedTurn, "FixedTurn" }, // 1093610085
				{ &Z_Construct_UFunction_UKismetMathLibrary_FloatSpringInterp, "FloatSpringInterp" }, // 3986131974
				{ &Z_Construct_UFunction_UKismetMathLibrary_FMax, "FMax" }, // 1780915632
				{ &Z_Construct_UFunction_UKismetMathLibrary_FMin, "FMin" }, // 313043092
				{ &Z_Construct_UFunction_UKismetMathLibrary_FMod, "FMod" }, // 2915251748
				{ &Z_Construct_UFunction_UKismetMathLibrary_Fraction, "Fraction" }, // 2678014716
				{ &Z_Construct_UFunction_UKismetMathLibrary_FromDays, "FromDays" }, // 1122948234
				{ &Z_Construct_UFunction_UKismetMathLibrary_FromHours, "FromHours" }, // 1180160875
				{ &Z_Construct_UFunction_UKismetMathLibrary_FromMilliseconds, "FromMilliseconds" }, // 2101324961
				{ &Z_Construct_UFunction_UKismetMathLibrary_FromMinutes, "FromMinutes" }, // 2943644710
				{ &Z_Construct_UFunction_UKismetMathLibrary_FromSeconds, "FromSeconds" }, // 3486212491
				{ &Z_Construct_UFunction_UKismetMathLibrary_FTrunc, "FTrunc" }, // 1251479102
				{ &Z_Construct_UFunction_UKismetMathLibrary_FTruncVector, "FTruncVector" }, // 1838244365
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetAxes, "GetAxes" }, // 1003948215
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetAzimuthAndElevation, "GetAzimuthAndElevation" }, // 2266029893
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDate, "GetDate" }, // 566820309
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDay, "GetDay" }, // 2302387261
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDayOfYear, "GetDayOfYear" }, // 478401651
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDays, "GetDays" }, // 2775548048
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDirectionUnitVector, "GetDirectionUnitVector" }, // 2797135777
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetDuration, "GetDuration" }, // 2230716180
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetForwardVector, "GetForwardVector" }, // 3543344283
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetHour, "GetHour" }, // 1900543275
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetHour12, "GetHour12" }, // 3537304541
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetHours, "GetHours" }, // 1455478290
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMaxElement, "GetMaxElement" }, // 2775242744
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMillisecond, "GetMillisecond" }, // 2835610401
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMilliseconds, "GetMilliseconds" }, // 299260210
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMinElement, "GetMinElement" }, // 3666782795
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMinute, "GetMinute" }, // 1861210298
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMinutes, "GetMinutes" }, // 1104914402
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetMonth, "GetMonth" }, // 1736677392
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetPI, "GetPI" }, // 1664268228
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToLine, "GetPointDistanceToLine" }, // 3527777479
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetPointDistanceToSegment, "GetPointDistanceToSegment" }, // 1683420061
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetReflectionVector, "GetReflectionVector" }, // 1553663070
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetRightVector, "GetRightVector" }, // 4094707794
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetSecond, "GetSecond" }, // 4041832697
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetSeconds, "GetSeconds" }, // 2981005272
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTAU, "GetTAU" }, // 3300159577
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTimeOfDay, "GetTimeOfDay" }, // 3217908947
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTotalDays, "GetTotalDays" }, // 632629081
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTotalHours, "GetTotalHours" }, // 2879990448
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTotalMilliseconds, "GetTotalMilliseconds" }, // 1309336805
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTotalMinutes, "GetTotalMinutes" }, // 1883791271
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetTotalSeconds, "GetTotalSeconds" }, // 322107388
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetUpVector, "GetUpVector" }, // 3013062916
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetVectorArrayAverage, "GetVectorArrayAverage" }, // 4114457261
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetYawPitchFromVector, "GetYawPitchFromVector" }, // 466301771
				{ &Z_Construct_UFunction_UKismetMathLibrary_GetYear, "GetYear" }, // 3412038346
				{ &Z_Construct_UFunction_UKismetMathLibrary_Greater_ByteByte, "Greater_ByteByte" }, // 312188570
				{ &Z_Construct_UFunction_UKismetMathLibrary_Greater_DateTimeDateTime, "Greater_DateTimeDateTime" }, // 484596161
				{ &Z_Construct_UFunction_UKismetMathLibrary_Greater_FloatFloat, "Greater_FloatFloat" }, // 4133164639
				{ &Z_Construct_UFunction_UKismetMathLibrary_Greater_IntInt, "Greater_IntInt" }, // 3423314189
				{ &Z_Construct_UFunction_UKismetMathLibrary_Greater_TimespanTimespan, "Greater_TimespanTimespan" }, // 1130727377
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_ByteByte, "GreaterEqual_ByteByte" }, // 917455816
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_DateTimeDateTime, "GreaterEqual_DateTimeDateTime" }, // 2808596
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_FloatFloat, "GreaterEqual_FloatFloat" }, // 2408406978
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_IntInt, "GreaterEqual_IntInt" }, // 4006291290
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterEqual_TimespanTimespan, "GreaterEqual_TimespanTimespan" }, // 4194188618
				{ &Z_Construct_UFunction_UKismetMathLibrary_GreaterGreater_VectorRotator, "GreaterGreater_VectorRotator" }, // 2513809304
				{ &Z_Construct_UFunction_UKismetMathLibrary_GridSnap_Float, "GridSnap_Float" }, // 329630346
				{ &Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB, "HSVToRGB" }, // 2070233095
				{ &Z_Construct_UFunction_UKismetMathLibrary_HSVToRGB_Vector, "HSVToRGB_Vector" }, // 2271986371
				{ &Z_Construct_UFunction_UKismetMathLibrary_Hypotenuse, "Hypotenuse" }, // 3701002218
				{ &Z_Construct_UFunction_UKismetMathLibrary_InRange_FloatFloat, "InRange_FloatFloat" }, // 3369270592
				{ &Z_Construct_UFunction_UKismetMathLibrary_InRange_IntInt, "InRange_IntInt" }, // 3128173327
				{ &Z_Construct_UFunction_UKismetMathLibrary_InverseLerp, "InverseLerp" }, // 1601383382
				{ &Z_Construct_UFunction_UKismetMathLibrary_InverseTransformDirection, "InverseTransformDirection" }, // 4136756645
				{ &Z_Construct_UFunction_UKismetMathLibrary_InverseTransformLocation, "InverseTransformLocation" }, // 3158084725
				{ &Z_Construct_UFunction_UKismetMathLibrary_InverseTransformRotation, "InverseTransformRotation" }, // 2707105948
				{ &Z_Construct_UFunction_UKismetMathLibrary_InvertTransform, "InvertTransform" }, // 2295920210
				{ &Z_Construct_UFunction_UKismetMathLibrary_IsAfternoon, "IsAfternoon" }, // 1080674276
				{ &Z_Construct_UFunction_UKismetMathLibrary_IsLeapYear, "IsLeapYear" }, // 915994561
				{ &Z_Construct_UFunction_UKismetMathLibrary_IsMorning, "IsMorning" }, // 2854371539
				{ &Z_Construct_UFunction_UKismetMathLibrary_IsPointInBox, "IsPointInBox" }, // 313289497
				{ &Z_Construct_UFunction_UKismetMathLibrary_IsPointInBoxWithTransform, "IsPointInBoxWithTransform" }, // 4073367926
				{ &Z_Construct_UFunction_UKismetMathLibrary_Lerp, "Lerp" }, // 3126054816
				{ &Z_Construct_UFunction_UKismetMathLibrary_Less_ByteByte, "Less_ByteByte" }, // 170953227
				{ &Z_Construct_UFunction_UKismetMathLibrary_Less_DateTimeDateTime, "Less_DateTimeDateTime" }, // 259168882
				{ &Z_Construct_UFunction_UKismetMathLibrary_Less_FloatFloat, "Less_FloatFloat" }, // 3147298158
				{ &Z_Construct_UFunction_UKismetMathLibrary_Less_IntInt, "Less_IntInt" }, // 1535282003
				{ &Z_Construct_UFunction_UKismetMathLibrary_Less_TimespanTimespan, "Less_TimespanTimespan" }, // 1996863211
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessEqual_ByteByte, "LessEqual_ByteByte" }, // 2039232538
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessEqual_DateTimeDateTime, "LessEqual_DateTimeDateTime" }, // 3041042462
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessEqual_FloatFloat, "LessEqual_FloatFloat" }, // 1166042235
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessEqual_IntInt, "LessEqual_IntInt" }, // 2661883834
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessEqual_TimespanTimespan, "LessEqual_TimespanTimespan" }, // 2760405635
				{ &Z_Construct_UFunction_UKismetMathLibrary_LessLess_VectorRotator, "LessLess_VectorRotator" }, // 3816561719
				{ &Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerp, "LinearColorLerp" }, // 938314078
				{ &Z_Construct_UFunction_UKismetMathLibrary_LinearColorLerpUsingHSV, "LinearColorLerpUsingHSV" }, // 3360867936
				{ &Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection, "LinePlaneIntersection" }, // 487618414
				{ &Z_Construct_UFunction_UKismetMathLibrary_LinePlaneIntersection_OriginNormal, "LinePlaneIntersection_OriginNormal" }, // 364243506
				{ &Z_Construct_UFunction_UKismetMathLibrary_Log, "Log" }, // 1011607461
				{ &Z_Construct_UFunction_UKismetMathLibrary_Loge, "Loge" }, // 1527862078
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeBox, "MakeBox" }, // 4101291554
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeBox2D, "MakeBox2D" }, // 1415296645
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeColor, "MakeColor" }, // 748262343
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeDateTime, "MakeDateTime" }, // 353574054
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakePlaneFromPointAndNormal, "MakePlaneFromPointAndNormal" }, // 3784610233
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakePulsatingValue, "MakePulsatingValue" }, // 1627669184
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRandomStream, "MakeRandomStream" }, // 3110395622
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotationFromAxes, "MakeRotationFromAxes" }, // 3634885663
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotator, "MakeRotator" }, // 854735713
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromX, "MakeRotFromX" }, // 3961416250
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXY, "MakeRotFromXY" }, // 1538134731
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromXZ, "MakeRotFromXZ" }, // 3833857748
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromY, "MakeRotFromY" }, // 2248834524
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYX, "MakeRotFromYX" }, // 3367047510
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromYZ, "MakeRotFromYZ" }, // 3778936273
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZ, "MakeRotFromZ" }, // 1309093458
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZX, "MakeRotFromZX" }, // 3329956953
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeRotFromZY, "MakeRotFromZY" }, // 1356719297
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan, "MakeTimespan" }, // 1198893555
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeTimespan2, "MakeTimespan2" }, // 1903180332
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeTransform, "MakeTransform" }, // 7756964
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeVector, "MakeVector" }, // 1742988755
				{ &Z_Construct_UFunction_UKismetMathLibrary_MakeVector2D, "MakeVector2D" }, // 3458729835
				{ &Z_Construct_UFunction_UKismetMathLibrary_MapRangeClamped, "MapRangeClamped" }, // 881507123
				{ &Z_Construct_UFunction_UKismetMathLibrary_MapRangeUnclamped, "MapRangeUnclamped" }, // 579666136
				{ &Z_Construct_UFunction_UKismetMathLibrary_Max, "Max" }, // 1023524249
				{ &Z_Construct_UFunction_UKismetMathLibrary_MaxOfByteArray, "MaxOfByteArray" }, // 2025059095
				{ &Z_Construct_UFunction_UKismetMathLibrary_MaxOfFloatArray, "MaxOfFloatArray" }, // 2408828234
				{ &Z_Construct_UFunction_UKismetMathLibrary_MaxOfIntArray, "MaxOfIntArray" }, // 4087589482
				{ &Z_Construct_UFunction_UKismetMathLibrary_Min, "Min" }, // 2726182448
				{ &Z_Construct_UFunction_UKismetMathLibrary_MinimumAreaRectangle, "MinimumAreaRectangle" }, // 1057561316
				{ &Z_Construct_UFunction_UKismetMathLibrary_MinOfByteArray, "MinOfByteArray" }, // 2715685703
				{ &Z_Construct_UFunction_UKismetMathLibrary_MinOfFloatArray, "MinOfFloatArray" }, // 1020987627
				{ &Z_Construct_UFunction_UKismetMathLibrary_MinOfIntArray, "MinOfIntArray" }, // 1850248126
				{ &Z_Construct_UFunction_UKismetMathLibrary_MirrorVectorByNormal, "MirrorVectorByNormal" }, // 4133874749
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_ByteByte, "Multiply_ByteByte" }, // 2642284032
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_FloatFloat, "Multiply_FloatFloat" }, // 1323909230
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntFloat, "Multiply_IntFloat" }, // 1105294548
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_IntInt, "Multiply_IntInt" }, // 361146112
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorFloat, "Multiply_LinearColorFloat" }, // 2812609679
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_LinearColorLinearColor, "Multiply_LinearColorLinearColor" }, // 1418687868
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorFloat, "Multiply_RotatorFloat" }, // 3855769845
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_RotatorInt, "Multiply_RotatorInt" }, // 568321837
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_TimespanFloat, "Multiply_TimespanFloat" }, // 1948174748
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DFloat, "Multiply_Vector2DFloat" }, // 387085039
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_Vector2DVector2D, "Multiply_Vector2DVector2D" }, // 3344555563
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorFloat, "Multiply_VectorFloat" }, // 3619275646
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorInt, "Multiply_VectorInt" }, // 1472530941
				{ &Z_Construct_UFunction_UKismetMathLibrary_Multiply_VectorVector, "Multiply_VectorVector" }, // 2509512451
				{ &Z_Construct_UFunction_UKismetMathLibrary_MultiplyByPi, "MultiplyByPi" }, // 1832389443
				{ &Z_Construct_UFunction_UKismetMathLibrary_MultiplyMultiply_FloatFloat, "MultiplyMultiply_FloatFloat" }, // 1889083441
				{ &Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_FloatFloat, "NearlyEqual_FloatFloat" }, // 314938562
				{ &Z_Construct_UFunction_UKismetMathLibrary_NearlyEqual_TransformTransform, "NearlyEqual_TransformTransform" }, // 1573239937
				{ &Z_Construct_UFunction_UKismetMathLibrary_NegateRotator, "NegateRotator" }, // 1623790768
				{ &Z_Construct_UFunction_UKismetMathLibrary_NegateVector, "NegateVector" }, // 532507502
				{ &Z_Construct_UFunction_UKismetMathLibrary_Normal, "Normal" }, // 1938696141
				{ &Z_Construct_UFunction_UKismetMathLibrary_Normal2D, "Normal2D" }, // 1018998424
				{ &Z_Construct_UFunction_UKismetMathLibrary_NormalizeAxis, "NormalizeAxis" }, // 861478960
				{ &Z_Construct_UFunction_UKismetMathLibrary_NormalizedDeltaRotator, "NormalizedDeltaRotator" }, // 371569353
				{ &Z_Construct_UFunction_UKismetMathLibrary_NormalizeToRange, "NormalizeToRange" }, // 1154392259
				{ &Z_Construct_UFunction_UKismetMathLibrary_Not_Int, "Not_Int" }, // 3038545366
				{ &Z_Construct_UFunction_UKismetMathLibrary_Not_PreBool, "Not_PreBool" }, // 144399511
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_BoolBool, "NotEqual_BoolBool" }, // 3401585710
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ByteByte, "NotEqual_ByteByte" }, // 3511946558
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ClassClass, "NotEqual_ClassClass" }, // 2911424083
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_DateTimeDateTime, "NotEqual_DateTimeDateTime" }, // 1986852789
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_FloatFloat, "NotEqual_FloatFloat" }, // 334070507
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_IntInt, "NotEqual_IntInt" }, // 535155711
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_NameName, "NotEqual_NameName" }, // 3242187484
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_ObjectObject, "NotEqual_ObjectObject" }, // 3982571171
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_RotatorRotator, "NotEqual_RotatorRotator" }, // 3977513458
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_TimespanTimespan, "NotEqual_TimespanTimespan" }, // 43947468
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_Vector2DVector2D, "NotEqual_Vector2DVector2D" }, // 1278973669
				{ &Z_Construct_UFunction_UKismetMathLibrary_NotEqual_VectorVector, "NotEqual_VectorVector" }, // 1721395257
				{ &Z_Construct_UFunction_UKismetMathLibrary_Now, "Now" }, // 3665914761
				{ &Z_Construct_UFunction_UKismetMathLibrary_Or_IntInt, "Or_IntInt" }, // 3179038753
				{ &Z_Construct_UFunction_UKismetMathLibrary_Percent_ByteByte, "Percent_ByteByte" }, // 1381973082
				{ &Z_Construct_UFunction_UKismetMathLibrary_Percent_FloatFloat, "Percent_FloatFloat" }, // 1675715001
				{ &Z_Construct_UFunction_UKismetMathLibrary_Percent_IntInt, "Percent_IntInt" }, // 2059558422
				{ &Z_Construct_UFunction_UKismetMathLibrary_PointsAreCoplanar, "PointsAreCoplanar" }, // 1082656932
				{ &Z_Construct_UFunction_UKismetMathLibrary_ProjectPointOnToPlane, "ProjectPointOnToPlane" }, // 138865569
				{ &Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToPlane, "ProjectVectorOnToPlane" }, // 1093548892
				{ &Z_Construct_UFunction_UKismetMathLibrary_ProjectVectorOnToVector, "ProjectVectorOnToVector" }, // 1725982030
				{ &Z_Construct_UFunction_UKismetMathLibrary_RadiansToDegrees, "RadiansToDegrees" }, // 3689375245
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomBool, "RandomBool" }, // 2652626413
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomBoolFromStream, "RandomBoolFromStream" }, // 1868434031
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeight, "RandomBoolWithWeight" }, // 2898214611
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomBoolWithWeightFromStream, "RandomBoolWithWeightFromStream" }, // 1309776181
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomFloat, "RandomFloat" }, // 2216425843
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomFloatFromStream, "RandomFloatFromStream" }, // 1611968726
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRange, "RandomFloatInRange" }, // 663729319
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomFloatInRangeFromStream, "RandomFloatInRangeFromStream" }, // 1343248620
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomInteger, "RandomInteger" }, // 734788740
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerFromStream, "RandomIntegerFromStream" }, // 3223861851
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRange, "RandomIntegerInRange" }, // 678254749
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomIntegerInRangeFromStream, "RandomIntegerInRangeFromStream" }, // 544114878
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomPointInBoundingBox, "RandomPointInBoundingBox" }, // 2204703613
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomRotator, "RandomRotator" }, // 3248044094
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomRotatorFromStream, "RandomRotatorFromStream" }, // 737434599
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVector, "RandomUnitVector" }, // 3475374445
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorFromStream, "RandomUnitVectorFromStream" }, // 3589013280
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegrees, "RandomUnitVectorInConeInDegrees" }, // 3260181793
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInDegreesFromStream, "RandomUnitVectorInConeInDegreesFromStream" }, // 3867741829
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadians, "RandomUnitVectorInConeInRadians" }, // 2829245268
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInConeInRadiansFromStream, "RandomUnitVectorInConeInRadiansFromStream" }, // 1351877983
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegrees, "RandomUnitVectorInEllipticalConeInDegrees" }, // 2480190422
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInDegreesFromStream, "RandomUnitVectorInEllipticalConeInDegreesFromStream" }, // 652078216
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadians, "RandomUnitVectorInEllipticalConeInRadians" }, // 4241347914
				{ &Z_Construct_UFunction_UKismetMathLibrary_RandomUnitVectorInEllipticalConeInRadiansFromStream, "RandomUnitVectorInEllipticalConeInRadiansFromStream" }, // 2719223595
				{ &Z_Construct_UFunction_UKismetMathLibrary_REase, "REase" }, // 3927707568
				{ &Z_Construct_UFunction_UKismetMathLibrary_ResetFloatSpringState, "ResetFloatSpringState" }, // 1675214480
				{ &Z_Construct_UFunction_UKismetMathLibrary_ResetRandomStream, "ResetRandomStream" }, // 3170033033
				{ &Z_Construct_UFunction_UKismetMathLibrary_ResetVectorSpringState, "ResetVectorSpringState" }, // 2963545288
				{ &Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV, "RGBToHSV" }, // 3381263542
				{ &Z_Construct_UFunction_UKismetMathLibrary_RGBToHSV_Vector, "RGBToHSV_Vector" }, // 3730310040
				{ &Z_Construct_UFunction_UKismetMathLibrary_RInterpTo, "RInterpTo" }, // 233688099
				{ &Z_Construct_UFunction_UKismetMathLibrary_RInterpTo_Constant, "RInterpTo_Constant" }, // 2537515281
				{ &Z_Construct_UFunction_UKismetMathLibrary_RLerp, "RLerp" }, // 2074364529
				{ &Z_Construct_UFunction_UKismetMathLibrary_RotateAngleAxis, "RotateAngleAxis" }, // 38184787
				{ &Z_Construct_UFunction_UKismetMathLibrary_RotatorFromAxisAndAngle, "RotatorFromAxisAndAngle" }, // 3793830454
				{ &Z_Construct_UFunction_UKismetMathLibrary_Round, "Round" }, // 330743511
				{ &Z_Construct_UFunction_UKismetMathLibrary_SeedRandomStream, "SeedRandomStream" }, // 2041817901
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectClass, "SelectClass" }, // 3122644002
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectColor, "SelectColor" }, // 2609919071
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectFloat, "SelectFloat" }, // 3178086026
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectInt, "SelectInt" }, // 2416565088
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectObject, "SelectObject" }, // 3261405543
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectRotator, "SelectRotator" }, // 2585816494
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectString, "SelectString" }, // 2892507605
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectTransform, "SelectTransform" }, // 770827970
				{ &Z_Construct_UFunction_UKismetMathLibrary_SelectVector, "SelectVector" }, // 2824549136
				{ &Z_Construct_UFunction_UKismetMathLibrary_SetRandomStreamSeed, "SetRandomStreamSeed" }, // 2272485983
				{ &Z_Construct_UFunction_UKismetMathLibrary_SignOfFloat, "SignOfFloat" }, // 1043771164
				{ &Z_Construct_UFunction_UKismetMathLibrary_SignOfInteger, "SignOfInteger" }, // 3522314327
				{ &Z_Construct_UFunction_UKismetMathLibrary_Sin, "Sin" }, // 1670378
				{ &Z_Construct_UFunction_UKismetMathLibrary_Sqrt, "Sqrt" }, // 2262287654
				{ &Z_Construct_UFunction_UKismetMathLibrary_Square, "Square" }, // 1600235435
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_ByteByte, "Subtract_ByteByte" }, // 404322844
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeDateTime, "Subtract_DateTimeDateTime" }, // 3732419114
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_DateTimeTimespan, "Subtract_DateTimeTimespan" }, // 299083635
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_FloatFloat, "Subtract_FloatFloat" }, // 1568723915
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_IntInt, "Subtract_IntInt" }, // 352868584
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_TimespanTimespan, "Subtract_TimespanTimespan" }, // 2136421942
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DFloat, "Subtract_Vector2DFloat" }, // 3842595949
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_Vector2DVector2D, "Subtract_Vector2DVector2D" }, // 2112472704
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorFloat, "Subtract_VectorFloat" }, // 2108581179
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorInt, "Subtract_VectorInt" }, // 2823984682
				{ &Z_Construct_UFunction_UKismetMathLibrary_Subtract_VectorVector, "Subtract_VectorVector" }, // 3586367827
				{ &Z_Construct_UFunction_UKismetMathLibrary_Tan, "Tan" }, // 862209776
				{ &Z_Construct_UFunction_UKismetMathLibrary_TEase, "TEase" }, // 1986523283
				{ &Z_Construct_UFunction_UKismetMathLibrary_TimespanFromString, "TimespanFromString" }, // 3511551335
				{ &Z_Construct_UFunction_UKismetMathLibrary_TimespanMaxValue, "TimespanMaxValue" }, // 3305581781
				{ &Z_Construct_UFunction_UKismetMathLibrary_TimespanMinValue, "TimespanMinValue" }, // 560886214
				{ &Z_Construct_UFunction_UKismetMathLibrary_TimespanRatio, "TimespanRatio" }, // 1105548471
				{ &Z_Construct_UFunction_UKismetMathLibrary_TimespanZeroValue, "TimespanZeroValue" }, // 1460048454
				{ &Z_Construct_UFunction_UKismetMathLibrary_TInterpTo, "TInterpTo" }, // 2718605058
				{ &Z_Construct_UFunction_UKismetMathLibrary_TLerp, "TLerp" }, // 3800624619
				{ &Z_Construct_UFunction_UKismetMathLibrary_Today, "Today" }, // 1652284482
				{ &Z_Construct_UFunction_UKismetMathLibrary_TransformDirection, "TransformDirection" }, // 1840714338
				{ &Z_Construct_UFunction_UKismetMathLibrary_TransformLocation, "TransformLocation" }, // 2331305170
				{ &Z_Construct_UFunction_UKismetMathLibrary_TransformRotation, "TransformRotation" }, // 2117076786
				{ &Z_Construct_UFunction_UKismetMathLibrary_UtcNow, "UtcNow" }, // 192731618
				{ &Z_Construct_UFunction_UKismetMathLibrary_VEase, "VEase" }, // 3824493438
				{ &Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo, "Vector2DInterpTo" }, // 3880874850
				{ &Z_Construct_UFunction_UKismetMathLibrary_Vector2DInterpTo_Constant, "Vector2DInterpTo_Constant" }, // 3389467729
				{ &Z_Construct_UFunction_UKismetMathLibrary_VectorSpringInterp, "VectorSpringInterp" }, // 634545367
				{ &Z_Construct_UFunction_UKismetMathLibrary_VInterpTo, "VInterpTo" }, // 3292507949
				{ &Z_Construct_UFunction_UKismetMathLibrary_VInterpTo_Constant, "VInterpTo_Constant" }, // 2272171692
				{ &Z_Construct_UFunction_UKismetMathLibrary_VLerp, "VLerp" }, // 2379036765
				{ &Z_Construct_UFunction_UKismetMathLibrary_VSize, "VSize" }, // 465310622
				{ &Z_Construct_UFunction_UKismetMathLibrary_VSize2D, "VSize2D" }, // 3350308637
				{ &Z_Construct_UFunction_UKismetMathLibrary_VSize2DSquared, "VSize2DSquared" }, // 3642898004
				{ &Z_Construct_UFunction_UKismetMathLibrary_VSizeSquared, "VSizeSquared" }, // 3401100680
				{ &Z_Construct_UFunction_UKismetMathLibrary_Xor_IntInt, "Xor_IntInt" }, // 307853806
			};
#if WITH_METADATA
			static const UE4CodeGen_Private::FMetaDataPairParam Class_MetaDataParams[] = {
				{ "BlueprintThreadSafe", "" },
				{ "IncludePath", "Kismet/KismetMathLibrary.h" },
				{ "ModuleRelativePath", "Classes/Kismet/KismetMathLibrary.h" },
			};
#endif
			static const FCppClassTypeInfoStatic StaticCppClassTypeInfo = {
				TCppClassTypeTraits<UKismetMathLibrary>::IsAbstract,
			};
			static const UE4CodeGen_Private::FClassParams ClassParams = {
				&UKismetMathLibrary::StaticClass,
				DependentSingletons, ARRAY_COUNT(DependentSingletons),
				0x00100080u,
				FuncInfo, ARRAY_COUNT(FuncInfo),
				nullptr, 0,
				nullptr,
				&StaticCppClassTypeInfo,
				nullptr, 0,
				METADATA_PARAMS(Class_MetaDataParams, ARRAY_COUNT(Class_MetaDataParams))
			};
			UE4CodeGen_Private::ConstructUClass(OuterClass, ClassParams);
		}
		return OuterClass;
	}
	IMPLEMENT_CLASS(UKismetMathLibrary, 1572763770);
	static FCompiledInDefer Z_CompiledInDefer_UClass_UKismetMathLibrary(Z_Construct_UClass_UKismetMathLibrary, &UKismetMathLibrary::StaticClass, TEXT("/Script/Engine"), TEXT("UKismetMathLibrary"), false, nullptr, nullptr, nullptr);
	DEFINE_VTABLE_PTR_HELPER_CTOR(UKismetMathLibrary);
PRAGMA_ENABLE_DEPRECATION_WARNINGS
#ifdef _MSC_VER
#pragma warning (pop)
#endif
